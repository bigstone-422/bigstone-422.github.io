<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JS学习第二十四天 js已完结</title>
      <link href="2021/10/21/day24/"/>
      <url>2021/10/21/day24/</url>
      
        <content type="html"><![CDATA[<p>第二十四天学习了bootStrap。</p><span id="more"></span><h1 id="BootStrap"><a href="#BootStrap" class="headerlink" title="BootStrap"></a>BootStrap</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。<br>入门: 下载: 完整的bootstrap</p><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件名称<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./bootstrap/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，世界！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./bootstrap/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><p>容器 全页面所有内容的盒子<br>.container 在页面中间有1200px<br>.container-fluid 占满全页面<br>自带左右15px的内边距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span>固定<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span>流式<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="响应式图片"><a href="#响应式图片" class="headerlink" title="响应式图片"></a>响应式图片</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../day18/小u课堂/img/index/tbanner1.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-responsive&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Responsive image&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../day12/p.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-rounded&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../day12/p.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-circle&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../day12/p.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-thumbnail&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol><li>写行 row</li><li>列: col-<em>-</em></li></ol><p>第一个: 屏幕尺寸<br>​    lg 超大屏幕: &gt; 1200<br>​    md 中等屏幕: 992 &lt; x &lt; 1200<br>​    sm 小屏幕: 768 &lt; x &lt; 992<br>​    xs 超小屏幕: &lt; 768<br>第二个: 占得比例 1-12<br>在当前尺寸以上 使用堆叠的布局方式 在当前尺寸以下 水平排布</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 1. 写行 row--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            2. 列: col-*-*</span></span><br><span class="line"><span class="comment">                第一个: 屏幕尺寸 </span></span><br><span class="line"><span class="comment">                    lg 超大屏幕: &gt; 1200</span></span><br><span class="line"><span class="comment">                    md 中等屏幕: 992 &lt; x &lt; 1200</span></span><br><span class="line"><span class="comment">                    sm 小屏幕: 768 &lt; x &lt; 992</span></span><br><span class="line"><span class="comment">                    xs 超小屏幕: &lt; 768</span></span><br><span class="line"><span class="comment">                第二个: 占得比例 1-12</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            在当前尺寸以上 使用堆叠的布局方式 在当前尺寸以下 水平排布</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-1&quot;</span>&gt;</span>col-lg-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-5&quot;</span>&gt;</span>col-lg-5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-7&quot;</span>&gt;</span>col-lg-7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-10<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-11<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span>&gt;</span>col-md-12<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-10<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-11<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span>&gt;</span>col-sm-12<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-10<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-11<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-12<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="兼容"><a href="#兼容" class="headerlink" title="兼容"></a>兼容</h3><p>兼容不同尺寸的栅格布局:<br>可以给一个元素添加多个栅格系统类名 在显示的时候就会根据不同尺寸的样式进行显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        1200以上 占 3个格子</span></span><br><span class="line"><span class="comment">        992以上 占4个格子</span></span><br><span class="line"><span class="comment">        768以上 占6个</span></span><br><span class="line"><span class="comment">        768以下 占所有</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-4 col-sm-6 col-xs-12&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="offset"><a href="#offset" class="headerlink" title="offset"></a>offset</h3><p>当前列需要在原来的位置上 向后推移几个位置 不会换行<br>col-* -offset-*</p><p>第一个: 屏幕尺寸<br>​    lg 超大屏幕: &gt; 1200<br>​    md 中等屏幕: 992 &lt; x &lt; 1200<br>    sm 小屏幕: 768 &lt; x &lt; 992<br>    xs 超小屏幕: &lt; 768<br>第二个: 占得比例 1-12</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;row&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;col-lg-3 col-md-4 col-sm-6 col-lg-offset-3 col-md-offset-1&quot;</span>&gt;col-lg-<span class="number">3</span>&lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;col-lg-3 col-md-4 col-sm-6 col-lg-offset-12&quot;</span>&gt;col-lg-<span class="number">31</span>&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="pull-push"><a href="#pull-push" class="headerlink" title="pull/push"></a>pull/push</h3><p>push: 向后推几个格子<br>pull: 向前前进几个格子<br>col-* -push/pull-*</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-4 col-sm-5&quot;</span>&gt;</span>左<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-9 col-md-8 col-sm-7&quot;</span>&gt;</span>右<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-4 col-sm-5 col-lg-push-9 col-md-push-8 col-sm-push-7&quot;</span>&gt;</span>左<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-9 col-md-8 col-sm-7 col-lg-pull-3 col-md-pull-4 col-sm-pull-5&quot;</span>&gt;</span>右<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="列嵌套"><a href="#列嵌套" class="headerlink" title="列嵌套"></a>列嵌套</h3><p>每一个列中可以再包一个行 将当前列作为行 继续划分12格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-6&quot;</span>&gt;</span></span><br><span class="line">        col-xs-6</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-1&quot;</span>&gt;</span>col-xs-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4&quot;</span>&gt;</span>col-xs-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4&quot;</span>&gt;</span>col-xs-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4&quot;</span>&gt;</span>col-xs-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-6&quot;</span>&gt;</span>col-xs-6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><h3 id="垂直表单"><a href="#垂直表单" class="headerlink" title="垂直表单"></a>垂直表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;userName&quot;</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;张&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>头像<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;help-block&quot;</span>&gt;</span>帮助说明.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 点击同意</span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内联表单"><a href="#内联表单" class="headerlink" title="内联表单"></a>内联表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-inline&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user&quot;</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Jane Doe&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;jane.doe@example.com&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="水平表单"><a href="#水平表单" class="headerlink" title="水平表单"></a>水平表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-horizontal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-10&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Email&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-10&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;two&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-10&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请再次输入密码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-offset-2 col-sm-10&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 记住我</span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-offset-2 col-sm-10&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="尺寸大小"><a href="#尺寸大小" class="headerlink" title="尺寸大小"></a>尺寸大小</h3><p>.input-lg .input-sm 以及 栅格系统列的大小控制</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control input-lg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;.input-lg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Default input&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control input-sm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;.input-sm&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control input-lg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bj&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bj&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control input-sm&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bj&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control input-lg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;.input-lg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Default input&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control input-sm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;.input-sm&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control input-lg&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bj&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bj&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control input-sm&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bj&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="按钮尺寸"><a href="#按钮尺寸" class="headerlink" title="按钮尺寸"></a>按钮尺寸</h3><p>role: 以什么样的样式显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- role: 以什么样的样式显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Input&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Standard button --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>（默认样式）Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>（首选项）Primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Indicates a successful or positive action --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span>&gt;</span>（成功）Success<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Contextual button for informational alert messages --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>（一般信息）Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Indicates caution should be taken with this action --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-warning&quot;</span>&gt;</span>（警告）Warning<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Indicates a dangerous or potentially negative action --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>（危险）Danger<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-link&quot;</span>&gt;</span>（链接）Link<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="icons"><a href="#icons" class="headerlink" title="icons"></a>icons</h2><p>Glyphicons: 免费使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 跟iconfont类似 写一个空标签 添加类名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-bold&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="导航条"><a href="#导航条" class="headerlink" title="导航条"></a>导航条</h2><h3 id="默认导航条"><a href="#默认导航条" class="headerlink" title="默认导航条"></a>默认导航条</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot;</span></span><br><span class="line"><span class="comment">                data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;</span></span><br><span class="line"><span class="comment">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</span></span><br><span class="line"><span class="comment">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">            &lt;/button&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Brand<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>One more separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;navbar-form navbar-left&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="反色导航条"><a href="#反色导航条" class="headerlink" title="反色导航条"></a>反色导航条</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-inverse&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot;</span></span><br><span class="line"><span class="comment">                data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;</span></span><br><span class="line"><span class="comment">                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</span></span><br><span class="line"><span class="comment">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">            &lt;/button&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Brand<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>One more separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;navbar-form navbar-left&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="模态框"><a href="#模态框" class="headerlink" title="模态框"></a>模态框</h2><p>data-toggle: 以什么样的方式进行切换<br>data-target: 触发的模态框的id是谁<br>role aria-labelledby: 用于指向模态框的标题栏<br>data-dismiss: 操作隐藏</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    Button trigger modal</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    data-toggle: 以什么样的方式进行切换</span></span><br><span class="line"><span class="comment">    data-target: 触发的模态框的id是谁</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;#myModal&quot;</span>&gt;</span></span><br><span class="line">    Launch demo modal</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    Modal </span></span><br><span class="line"><span class="comment">    role aria-labelledby: 用于指向模态框的标题栏</span></span><br><span class="line"><span class="comment">    data-dismiss: 操作隐藏</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModal&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;myModalLabel&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog modal-lg&quot;</span> <span class="attr">role</span>=<span class="string">&quot;document&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span>&lt;span</span><br><span class="line">                        aria-hidden=&quot;true&quot;&gt;<span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModalLabel&quot;</span>&gt;</span>Modal title<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">                具体的模态框的显示的内容</span><br><span class="line">                具体的模态框的显示的内容</span><br><span class="line">                具体的模态框的显示的内容</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>Save changes<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h2><h3 id="其使用"><a href="#其使用" class="headerlink" title="其使用"></a>其使用</h3><p>.dropdown: 下拉菜单<br>.dropup: 上拉菜单<br>data-toggle: 以什么样的方式进行切换<br>aria-labelledby: 指向标题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;dropdown&quot;</span> id=<span class="string">&quot;myDropDown&quot;</span>&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;dLabel&quot;</span> type=<span class="string">&quot;button&quot;</span> data-toggle=<span class="string">&quot;dropdown&quot;</span> aria-haspopup=<span class="string">&quot;true&quot;</span> aria-expanded=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">        Dropdown trigger</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;caret&quot;</span>&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;dropdown-menu&quot;</span> aria-labelledby=<span class="string">&quot;dLabel&quot;</span>&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">01</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">02</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">03</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">04</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">05</span>&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;dropup&quot;</span>&gt;</span><br><span class="line">    &lt;a id=<span class="string">&quot;dLabel&quot;</span> data-target=<span class="string">&quot;#&quot;</span> href=<span class="string">&quot;http://example.com/&quot;</span> data-toggle=<span class="string">&quot;dropdown&quot;</span>  aria-haspopup=<span class="string">&quot;true&quot;</span> aria-expanded=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">        Dropdown trigger</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;caret&quot;</span>&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;dropdown-menu&quot;</span> aria-labelledby=<span class="string">&quot;dLabel&quot;</span>&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">01</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">02</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">03</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">04</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">05</span>&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="事件和方法"><a href="#事件和方法" class="headerlink" title="事件和方法"></a>事件和方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// $(&#x27;.dropdown-menu&#x27;).dropdown(&#x27;toggle&#x27;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示动画一开始</span></span><br><span class="line">$(<span class="string">&#x27;#myDropDown&#x27;</span>).on(<span class="string">&#x27;show.bs.dropdown&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;show&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示动画结束</span></span><br><span class="line">$(<span class="string">&#x27;#myDropDown&#x27;</span>).on(<span class="string">&#x27;shown.bs.dropdown&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;shown&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐藏动画一开始</span></span><br><span class="line">$(<span class="string">&#x27;#myDropDown&#x27;</span>).on(<span class="string">&#x27;hide.bs.dropdown&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;hide&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐藏动画结束</span></span><br><span class="line">$(<span class="string">&#x27;#myDropDown&#x27;</span>).on(<span class="string">&#x27;hidden.bs.dropdown&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;hiden&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h2><h3 id="标签页使用"><a href="#标签页使用" class="headerlink" title="标签页使用"></a>标签页使用</h3><p>Nav tabs<br>nav nav-tabs 使用标签页导航条的样式<br>role: 以什么样的样式展示<br>aria-controls：控制的标签<br>data-toggle: 以什么样的方式切换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;myTabs&quot;</span>&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        Nav tabs</span><br><span class="line">        nav nav-tabs 使用标签页导航条的样式</span><br><span class="line">        role: 以什么样的样式展示</span><br><span class="line">        aria-controls：控制的标签</span><br><span class="line">        data-toggle: 以什么样的方式切换</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;nav nav-tabs&quot;</span> role=<span class="string">&quot;tablist&quot;</span>&gt;</span><br><span class="line">        &lt;!-- href: #id 锚链接 显示对应的id的区域  --&gt;</span><br><span class="line">        &lt;li role=<span class="string">&quot;presentation&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;active&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#home&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;home&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tab&quot;</span></span></span></span><br><span class="line"><span class="xml">                data-toggle=&quot;tab&quot;&gt;Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/li&gt;</span><br><span class="line">        &lt;li role=<span class="string">&quot;presentation&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#profile&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;profile&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tab&quot;</span></span></span></span><br><span class="line"><span class="xml">                data-toggle=&quot;tab&quot;&gt;Profile<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/li&gt;</span><br><span class="line">        &lt;li role=<span class="string">&quot;presentation&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#messages&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;messages&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tab&quot;</span></span></span></span><br><span class="line"><span class="xml">                data-toggle=&quot;tab&quot;&gt;Messages<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/li&gt;</span><br><span class="line">        &lt;li role=<span class="string">&quot;presentation&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#settings&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;settings&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tab&quot;</span></span></span></span><br><span class="line"><span class="xml">                data-toggle=&quot;tab&quot;&gt;Settings<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        Tab panes 标签页所显示的具体的内容所在</span><br><span class="line">        .tab-pane active 默认显示隐藏切换</span><br><span class="line">        .fade .in  以透明度渐变方式切换</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;!-- <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;tabpanel&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane fade active in&quot;</span> <span class="attr">id</span>=<span class="string">&quot;home&quot;</span>&gt;</span>home<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;tabpanel&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;profile&quot;</span>&gt;</span>profile<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;tabpanel&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;messages&quot;</span>&gt;</span>message<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;tabpanel&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;settings&quot;</span>&gt;</span>settings<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tab-content&quot;</span>&gt;</span><br><span class="line">        &lt;div role=<span class="string">&quot;tabpanel&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tab-pane active&quot;</span> id=<span class="string">&quot;home&quot;</span>&gt;home&lt;/div&gt;</span><br><span class="line">        &lt;div role=<span class="string">&quot;tabpanel&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tab-pane&quot;</span> id=<span class="string">&quot;profile&quot;</span>&gt;profile&lt;/div&gt;</span><br><span class="line">        &lt;div role=<span class="string">&quot;tabpanel&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tab-pane&quot;</span> id=<span class="string">&quot;messages&quot;</span>&gt;message&lt;/div&gt;</span><br><span class="line">        &lt;div role=<span class="string">&quot;tabpanel&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tab-pane&quot;</span> id=<span class="string">&quot;settings&quot;</span>&gt;settings&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="标签页的事件和方法"><a href="#标签页的事件和方法" class="headerlink" title="标签页的事件和方法"></a>标签页的事件和方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#myTabs a[href=&quot;#profile&quot;]&#x27;</span>).tab(<span class="string">&#x27;show&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示动画一开始</span></span><br><span class="line">$(<span class="string">&#x27;a[data-toggle=&quot;tab&quot;]&#x27;</span>).on(<span class="string">&#x27;show.bs.tab&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;show&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示动画结束</span></span><br><span class="line">$(<span class="string">&#x27;a[data-toggle=&quot;tab&quot;]&#x27;</span>).on(<span class="string">&#x27;shown.bs.tab&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;shown&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐藏动画一开始</span></span><br><span class="line">$(<span class="string">&#x27;a[data-toggle=&quot;tab&quot;]&#x27;</span>).on(<span class="string">&#x27;hide.bs.tab&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;hide&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐藏动画结束</span></span><br><span class="line">$(<span class="string">&#x27;a[data-toggle=&quot;tab&quot;]&#x27;</span>).on(<span class="string">&#x27;hidden.bs.tab&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;hiden&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h2><h3 id="轮播图使用"><a href="#轮播图使用" class="headerlink" title="轮播图使用"></a>轮播图使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>上一张<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>下一张<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    data-target: 触发轮播图的id是谁</span></span><br><span class="line"><span class="comment">    data-ride: carousel轮播</span></span><br><span class="line"><span class="comment">    data-slide: 跳转到上/下一张图</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;slideDiv&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        Indicators: 小圆点所在的位置</span></span><br><span class="line"><span class="comment">        data-slide-to: 表示切换到第几张轮播图</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#slideDiv&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#slideDiv&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#slideDiv&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Wrapper for slides --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span> <span class="attr">role</span>=<span class="string">&quot;listbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item active&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 显示的图片 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../day17/小u课堂/img/index/tbanner1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">                当前轮播图上的内容板块1</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../day17/小u课堂/img/index/tbanner2.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">                当前轮播图上的内容板块2</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../day17/小u课堂/img/index/tbanner3.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">                当前轮播图上的内容板块3</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Controls --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;left carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#slideDiv&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;right carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#slideDiv&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="轮播图的事件和方法"><a href="#轮播图的事件和方法" class="headerlink" title="轮播图的事件和方法"></a>轮播图的事件和方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动画时间</span></span><br><span class="line">$(<span class="string">&#x27;.carousel&#x27;</span>).carousel(&#123;</span><br><span class="line">    interval: <span class="number">2000</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 外部元素控制轮播图</span></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;.carousel&#x27;</span>).carousel(<span class="string">&#x27;prev&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;.carousel&#x27;</span>).carousel(<span class="string">&#x27;next&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;.carousel&#x27;</span>).carousel(<span class="number">2</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;.carousel&#x27;</span>).carousel(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;.carousel&#x27;</span>).carousel(<span class="string">&#x27;cycle&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="巨幕"><a href="#巨幕" class="headerlink" title="巨幕"></a>巨幕</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;jumbotron&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>Learn more<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        容器</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第二十三天</title>
      <link href="2021/10/20/day23%E8%87%AA%E6%80%BB/"/>
      <url>2021/10/20/day23%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第二十三天学习了深拷贝如何用原生js实现、插件拓展，zepto，以及touch等。</p><span id="more"></span><h1 id="day23"><a href="#day23" class="headerlink" title="day23"></a>day23</h1><h2 id="深拷贝合集"><a href="#深拷贝合集" class="headerlink" title="深拷贝合集"></a>深拷贝合集</h2><ol><li><p>JSON.parse(JSON.stringify(数据))</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br><span class="line"><span class="built_in">console</span>.log(res == obj); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><p>extend(true, …data);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res1 = $.extend(<span class="literal">true</span>, &#123;&#125;, obj);</span><br><span class="line"><span class="built_in">console</span>.log(res1);</span><br><span class="line"><span class="built_in">console</span>.log(res1 == obj); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><p>使用原生js的递归函数实现深拷贝<br>深拷贝: Object Array<br>在内存中再划分一块内存</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取数据的类型</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getType</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(data).slice(<span class="number">8</span>, -<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现递归拷贝</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepClone</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// data: 需要实现深拷贝的数据</span></span><br><span class="line">    <span class="comment">// 声明对应的数据类型</span></span><br><span class="line">    <span class="comment">// console.log(getType(data));</span></span><br><span class="line">    <span class="keyword">if</span>(getType(data) == <span class="string">&#x27;Object&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> res = &#123;&#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(getType(data) == <span class="string">&#x27;Array&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> res = [];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(res);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将data数据中的每一个属性名和属性值存储到res中</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> data)&#123;</span><br><span class="line">        <span class="comment">// console.log(key, data[key]);</span></span><br><span class="line">        <span class="comment">// 判断要存储的是否是Array或者Object  如果是 调用deepClone</span></span><br><span class="line">        <span class="comment">// console.log(getType(data[key]));</span></span><br><span class="line">        <span class="keyword">if</span>(getType(data[key]) == <span class="string">&#x27;Object&#x27;</span> || getType(data[key]) == <span class="string">&#x27;Array&#x27;</span>)&#123;</span><br><span class="line">            res[key] = deepClone(data[key]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res[key] = data[key];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(res);</span></span><br><span class="line">    <span class="comment">// 设置返回值</span></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> r = deepClone(obj);</span><br><span class="line"><span class="built_in">console</span>.log(r);</span><br><span class="line"><span class="built_in">console</span>.log(r == obj);</span><br></pre></td></tr></table></figure></li></ol><h2 id="ready"><a href="#ready" class="headerlink" title="ready"></a>ready</h2><p>onload:等待页面结构和资源加载完成后在执行的代码,后面的会覆盖前面<br>ready等待页面结构加载完成​,叠加执行,可以简写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$().ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">4</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="插件拓展"><a href="#插件拓展" class="headerlink" title="插件拓展"></a>插件拓展</h2><p>类级别: $.extend({方法名: 函数, 方法名: 函数})<br>​比如：$.each $.map</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">$.extend(&#123;</span><br><span class="line">    lunbo: <span class="function"><span class="keyword">function</span> (<span class="params">sel, wait, time</span>) </span>&#123;</span><br><span class="line">        wait = wait ? wait : <span class="number">5000</span>;</span><br><span class="line">        time = time ? time : <span class="number">400</span>;</span><br><span class="line">        <span class="comment">// console.log($(sel));</span></span><br><span class="line">        <span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> cw = $(sel).find(<span class="string">&#x27;ul &gt; li&#x27;</span>).width();</span><br><span class="line">        <span class="comment">// console.log(cw);</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">auto</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            n++;</span><br><span class="line">            <span class="keyword">if</span>(n == $(sel).find(<span class="string">&#x27;ul &gt; li&#x27;</span>).length)&#123;</span><br><span class="line">                n = <span class="number">0</span>;</span><br><span class="line">                $(sel).find(<span class="string">&#x27;ul&#x27;</span>).css(&#123;</span><br><span class="line">                    left: -n * cw</span><br><span class="line">                &#125;);</span><br><span class="line">                n = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $(sel).find(<span class="string">&#x27;ul&#x27;</span>).stop().animate(&#123;</span><br><span class="line">                left: -n * cw</span><br><span class="line">            &#125;, time);</span><br><span class="line">            <span class="comment">// 设置小圆点</span></span><br><span class="line">            $(sel).find(<span class="string">&#x27;p &gt; span&#x27;</span>).eq(n == $(sel).find(<span class="string">&#x27;ul &gt; li&#x27;</span>).length - <span class="number">1</span> ? <span class="number">0</span> : n).addClass(<span class="string">&#x27;active&#x27;</span>).siblings().removeClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 1. 每隔3s换一张图</span></span><br><span class="line">        $(sel)[<span class="number">0</span>].timer = <span class="built_in">setInterval</span>(auto, wait);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 划上sel清除定时器</span></span><br><span class="line">        <span class="comment">// 划下sel开启定时器</span></span><br><span class="line">        $(sel).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">1</span>, $(sel)[<span class="number">0</span>].timer);</span><br><span class="line">            <span class="built_in">clearInterval</span>($(sel)[<span class="number">0</span>].timer);</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(sel)[<span class="number">0</span>].timer = <span class="built_in">setInterval</span>(auto, <span class="number">3000</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"><span class="comment">// $.lunbo(&#x27;.wrap&#x27;);</span></span><br><span class="line">$.lunbo(<span class="string">&#x27;.wrap&#x27;</span>, <span class="number">3000</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure><p>对象级别: $.fn.extend({方法名: 函数, 方法名: 函数})<br>​比如：jq对象.css jq对象.animate</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 轮播图</span></span><br><span class="line">$.fn.extend(&#123;</span><br><span class="line">    lunbo: <span class="function"><span class="keyword">function</span> (<span class="params">wait, time</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">        wait = wait ? wait : <span class="number">5000</span>;</span><br><span class="line">        time = time ? time : <span class="number">400</span>;</span><br><span class="line">        <span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> cw = $(<span class="built_in">this</span>).find(<span class="string">&#x27;ul &gt; li&#x27;</span>).width();</span><br><span class="line">        <span class="comment">// console.log(cw, n);</span></span><br><span class="line">        <span class="comment">// console.log($(this).find(&#x27;ul&#x27;));</span></span><br><span class="line">        <span class="keyword">var</span> that = $(<span class="built_in">this</span>);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">auto</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            n++;</span><br><span class="line">            <span class="keyword">if</span>(n == that.find(<span class="string">&#x27;ul &gt; li&#x27;</span>).length)&#123;</span><br><span class="line">                n = <span class="number">0</span>;</span><br><span class="line">                that.find(<span class="string">&#x27;ul&#x27;</span>).css(&#123;</span><br><span class="line">                    left: -n * cw</span><br><span class="line">                &#125;);</span><br><span class="line">                n = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            that.find(<span class="string">&#x27;ul&#x27;</span>).stop().animate(&#123;</span><br><span class="line">                left: -n * cw</span><br><span class="line">            &#125;, time);</span><br><span class="line">            <span class="comment">// 设置小圆点</span></span><br><span class="line">            that.find(<span class="string">&#x27;p &gt; span&#x27;</span>).eq(n == that.find(<span class="string">&#x27;ul &gt; li&#x27;</span>).length - <span class="number">1</span> ? <span class="number">0</span> : n).addClass(<span class="string">&#x27;active&#x27;</span>).siblings().removeClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 1. 每隔3s换一张图</span></span><br><span class="line">        <span class="built_in">this</span>[<span class="number">0</span>].timer = <span class="built_in">setInterval</span>(auto, wait);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 划上sel清除定时器</span></span><br><span class="line">        <span class="comment">// 划下sel开启定时器</span></span><br><span class="line">        $(<span class="built_in">this</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">1</span>, $(<span class="built_in">this</span>)[<span class="number">0</span>].timer);</span><br><span class="line">            <span class="built_in">clearInterval</span>($(<span class="built_in">this</span>)[<span class="number">0</span>].timer);</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="built_in">this</span>)[<span class="number">0</span>].timer = <span class="built_in">setInterval</span>(auto, <span class="number">3000</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置返回值</span></span><br><span class="line">        <span class="keyword">return</span> $(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"><span class="keyword">var</span> d = $(<span class="string">&#x27;.wrap&#x27;</span>).lunbo(<span class="number">3000</span>).css(&#123;</span><br><span class="line">    border: <span class="string">&#x27;10px solid #aaa&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(d);</span><br></pre></td></tr></table></figure><h2 id="Zepto"><a href="#Zepto" class="headerlink" title="Zepto"></a>Zepto</h2><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>zepto: 专门给移动端使用的javascript库<br>核心: $<br>zepto的方法与jq中是一致的</p><ol><li>下载zepto文件: 一定通过上面的官网 或者是 cdn服务器下载完整文件</li><li>使用zepto</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 1. jq有 zepto没有</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// console.log($(&#x27;div&#x27;).innerWidth(), $(&#x27;div&#x27;).innerHeight());</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// console.log($(&#x27;div&#x27;).outerWidth(), $(&#x27;div&#x27;).outerHeight());</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 2. position offset</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).offset()); <span class="comment">// jq: &#123;top: 40, left: 48&#125; zepto: &#123;left: 48, top: 40, width: 380, height: 380&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 3. zepto的宽高直接求得是占位宽高</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).width());</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><ol><li>jq有 zepto没有</li><li>offset</li><li>zepto的宽高直接求得是占位宽高</li></ol><h3 id="touch事件"><a href="#touch事件" class="headerlink" title="touch事件"></a>touch事件</h3><p>tap: 单击<br>doubleTap: 双击<br>longTap: 长按 &gt;750ms<br>swipe: 滑动<br>swipeUp swipeDown swipeLeft swipeRight</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">touch事件只支持移动端使用</span><br><span class="line">下载压缩包后 解压出来的文件夹中只需要使用src </span><br><span class="line">但是注意: src中的zepto模块不要使用</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1. 引入zepto --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2. 引入模块 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 3. 写自己的js --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  /* </span><br><span class="line">      tap: 单击</span><br><span class="line">      doubleTap: 双击</span><br><span class="line">      longTap: 长按 &gt;750ms</span><br><span class="line">      swipe: 滑动</span><br><span class="line">      swipeUp swipeDown swipeLeft swipeRight</span><br><span class="line">  */</span><br><span class="line"><span class="javascript">  $(<span class="string">&#x27;div&#x27;</span>).on(<span class="string">&#x27;tap doubleTap longTap swipe swipeUp swipeDown swipeLeft swipeRight&#x27;</span>,<span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(ev.type);</span></span><br><span class="line">  &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第二十二天</title>
      <link href="2021/10/19/day22%E8%87%AA%E6%80%BB/"/>
      <url>2021/10/19/day22%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第二十二天学习了jQuery的动画，判断，循环等等。</p><span id="more"></span><h1 id="day22"><a href="#day22" class="headerlink" title="day22"></a>day22</h1><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h3 id="show-hide-toggle"><a href="#show-hide-toggle" class="headerlink" title="show/hide/toggle"></a>show/hide/toggle</h3><p>show([s, [e], [fn]])<br>width+height+opacity<br>不传参没有动画效果。<br>传参：时间，单位毫秒；运动曲线，’swing’、’linera’；回调函数，在动画执行完成之后还要执行的操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示</span></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).show(<span class="number">1000</span>, <span class="string">&#x27;swing&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//隐藏</span></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).hide(<span class="number">1000</span>, <span class="string">&#x27;swing&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//切换</span></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).toggle(<span class="number">1000</span>, <span class="string">&#x27;swing&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="slideDown-slideUp-slideToggle"><a href="#slideDown-slideUp-slideToggle" class="headerlink" title="slideDown/slideUp/slideToggle"></a>slideDown/slideUp/slideToggle</h3><p>slideDown([s, [e], [fn]])<br>height<br>不传参: 有动画效果 默认时间为400ms</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示</span></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).slideDown(<span class="number">1000</span>, <span class="string">&#x27;swing&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//隐藏</span></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).slideUp(<span class="number">1000</span>, <span class="string">&#x27;swing&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//切换</span></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).slideToggle(<span class="number">1000</span>, <span class="string">&#x27;swing&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h3><h4 id="语法一"><a href="#语法一" class="headerlink" title="语法一"></a>语法一</h4><p>jq对象.animate({动画参数}, duration, easing, callback)<br>动画参数: 对象 {width: 300px, height: 500px}<br>duration: 时长 400ms  ms为单位<br>easing: linear swing<br>callback: 回调函数 动画完成以后<br>背景色无法通过jq动画方式实现效果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).animate(&#123;</span><br><span class="line">        opacity: <span class="number">0.5</span>,</span><br><span class="line">        width: <span class="number">500</span>,</span><br><span class="line">        height: <span class="number">500</span>,</span><br><span class="line">        background: <span class="string">&#x27;black&#x27;</span></span><br><span class="line">        <span class="comment">// height: &#x27;toggle&#x27;</span></span><br><span class="line">        <span class="comment">// height: &#x27;hide&#x27;</span></span><br><span class="line">    &#125;, <span class="number">3000</span>, <span class="string">&#x27;linear&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;结束&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="语法二"><a href="#语法二" class="headerlink" title="语法二"></a>语法二</h4><p>jq对象.animate({动画参数}, {options});<br>动画参数: 对象 {width: 300px, height: 500px}<br>options: {<br>​    duration: 动画时间,<br>​    easing: 运动曲线,<br>​    complete: 动画完成后执行的回调函数,<br>​    step: 动画每一步执行后的回调函数,<br>​    queue: 动画是否进入队列, true–队列中排队 默认值 false–跟随第一个动画一起执行<br>}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).animate(&#123;</span><br><span class="line">        width: <span class="number">500</span>,</span><br><span class="line">        height: <span class="number">500</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        duration: <span class="number">3000</span>,</span><br><span class="line">        easing: <span class="string">&#x27;linear&#x27;</span>,</span><br><span class="line">        complete: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;结束&#x27;</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        step: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// console.log($(this).width());</span></span><br><span class="line">        &#125;,</span><br><span class="line">        queue: <span class="literal">true</span></span><br><span class="line">    &#125;).animate(&#123;</span><br><span class="line">        opacity: <span class="number">0.3</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        queue: <span class="literal">false</span>,</span><br><span class="line">        duration: <span class="number">3000</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="动画注意"><a href="#动画注意" class="headerlink" title="动画注意"></a>动画注意</h3><p>动画可以连缀 在连缀的过程中没有特殊设置 默认是进行队列执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).animate(&#123;</span><br><span class="line">        left: <span class="number">500</span></span><br><span class="line">    &#125;, <span class="number">1000</span>).animate(&#123;</span><br><span class="line">        top: <span class="number">500</span></span><br><span class="line">    &#125;, <span class="number">1000</span>).animate(&#123;</span><br><span class="line">        top: <span class="number">0</span>,</span><br><span class="line">        left: <span class="number">0</span></span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>.css所设置的样式 不会进入动画队列 会跟随第一个动画 在第一时间执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).animate(&#123;</span><br><span class="line">        left: <span class="number">500</span></span><br><span class="line">    &#125;, <span class="number">1000</span>).animate(&#123;</span><br><span class="line">        top: <span class="number">500</span></span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">    .css(&#123;</span><br><span class="line">        background: <span class="string">&#x27;pink&#x27;</span>,</span><br><span class="line">        left: <span class="string">&#x27;1000px&#x27;</span>,</span><br><span class="line">        width: <span class="number">500</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .animate(&#123;</span><br><span class="line">        top: <span class="number">0</span>,</span><br><span class="line">        left: <span class="number">0</span></span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>.queue方法实现插队<br>jq对象.queue(函数); 函数中写要放进去的代码  函数有一个形参 这个形参是个函数<br>.queue后面的动画 都不在执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).animate(&#123;</span><br><span class="line">            left: <span class="number">500</span></span><br><span class="line">        &#125;, <span class="number">1000</span>).animate(&#123;</span><br><span class="line">            top: <span class="number">500</span></span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">        .queue(<span class="function"><span class="keyword">function</span> (<span class="params">next</span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&#x27;div&#x27;</span>).css(&#123;</span><br><span class="line">                background: <span class="string">&#x27;pink&#x27;</span>,</span><br><span class="line">                <span class="comment">// left: &#x27;1000px&#x27;,</span></span><br><span class="line">                <span class="comment">// width: 500</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="built_in">console</span>.log(next);</span><br><span class="line">            next();</span><br><span class="line">        &#125;).animate(&#123;</span><br><span class="line">            top: <span class="number">0</span>,</span><br><span class="line">            left: <span class="number">0</span></span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="停止动画"><a href="#停止动画" class="headerlink" title="停止动画"></a>停止动画</h3><p>jq对象.stop(clearQueue, gotoEnd);<br>​clearQueue: true: 后续的队列中等待执行的动画被清除 false(默认): 执行下一个队列的动画<br>gotoEnd: true: 当前动画被停止的一瞬间到达目标值 false(默认): 在哪里停止就留在哪个尺寸</p><p>finish: 1.8+<br>jq对象.finish();<br>将所有的动画一瞬间到达目标值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// $(&#x27;div&#x27;).stop(false, false);</span></span><br><span class="line">    <span class="comment">// $(&#x27;div&#x27;).stop(true, false);</span></span><br><span class="line">    <span class="comment">// $(&#x27;div&#x27;).stop(true, true);</span></span><br><span class="line"></span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).finish();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="is"><a href="#is" class="headerlink" title="is"></a>is</h3><p>is(“:animated”):判断是否处于动画中 true–正在动画 false–没有动画</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 如果当前元素已经在动画中 不允许添加动画</span></span><br><span class="line">    <span class="keyword">if</span>(!$(<span class="string">&#x27;div&#x27;</span>).is(<span class="string">&#x27;:animated&#x27;</span>))&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">        $(<span class="string">&#x27;div&#x27;</span>).animate(&#123;</span><br><span class="line">            width: <span class="string">&#x27;toggle&#x27;</span>,</span><br><span class="line">            height: <span class="string">&#x27;toggle&#x27;</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            duration: <span class="number">1000</span>,</span><br><span class="line">            step: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 判断是否处于动画中 true--正在动画 false--没有动画</span></span><br><span class="line">                <span class="comment">// console.log($(&#x27;div&#x27;).is(&#x27;:animated&#x27;));</span></span><br><span class="line">            &#125;,</span><br><span class="line">            complete:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="comment">// console.log($(&#x27;div&#x27;).is(&#x27;:animated&#x27;), &#x27;complete&#x27;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><p>each: 返回原数据<br>​    jq对象.each(函数)<br>​    $.each(数据, 函数)<br>map: 返回函数中设置的返回值组成的新数组<br>​    jq对象.map(函数)<br>​    $.map(数据, 函数)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"><span class="comment">// $(arr).each(function (i, v) &#123;</span></span><br><span class="line"><span class="comment">//     console.log(i, v);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var res = $.each(arr, function (i, v ) &#123;</span></span><br><span class="line"><span class="comment">//     /* </span></span><br><span class="line"><span class="comment">//         第一个参数: 下标</span></span><br><span class="line"><span class="comment">//         第二个参数: 值</span></span><br><span class="line"><span class="comment">//     */</span></span><br><span class="line"><span class="comment">//    console.log(i, v);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> res = $.map(arr, <span class="function"><span class="keyword">function</span> (<span class="params">v, i </span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">        第一个参数: 值</span></span><br><span class="line"><span class="comment">        第二个参数: 下标</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">console</span>.log(i, v);</span><br><span class="line">   <span class="keyword">return</span> v * v;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&#x27;迪丽热巴&#x27;</span>,</span><br><span class="line">    age: <span class="number">33</span>,</span><br><span class="line">    height: <span class="number">178</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// var res = $.each(obj, function (key, val) &#123;</span></span><br><span class="line"><span class="comment">//     console.log(key, val);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> res = $.map(obj, <span class="function"><span class="keyword">function</span> (<span class="params">val, key</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key, val);</span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br><span class="line"></span><br><span class="line"><span class="comment">// var res = $.each($(&#x27;li&#x27;), function (i, ele) &#123;</span></span><br><span class="line"><span class="comment">//     console.log(i, ele);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> res = $.map($(<span class="string">&#x27;li&#x27;</span>), <span class="function"><span class="keyword">function</span> (<span class="params">ele, i</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i, ele);</span><br><span class="line">    <span class="keyword">return</span> $(ele).html();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br></pre></td></tr></table></figure><h2 id="extend"><a href="#extend" class="headerlink" title="extend"></a>extend</h2><p>$.extend([deep], dist, ….data);<br>返回拷贝以后的完整数据<br>deep: 是否进行深拷贝 false/不传: 浅拷贝 true: 深拷贝<br>​浅拷贝: 只对比第一层级的属性名是否相同 如果相同 用后面的覆盖前面的如果不同 就复制进来<br>​深拷贝: 第一个参数设置成true, 进行的是递归拷贝, 先比较第一册层级的属性名是否重复, 如果重复, 判断属性值是否两边都是object/array, 保证两边数据类型是一样的, 如果不一样直接用后面的覆盖前面的, 如果属性名一样属性值都是object或者都是array, 比较子属性<br>dist: 默认的目标源 其他数据拷贝到这里</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    age: <span class="number">22</span>,</span><br><span class="line">    money: [<span class="string">&#x27;电影&#x27;</span>, <span class="string">&#x27;饺子馆&#x27;</span>, <span class="string">&#x27;茶叶蛋&#x27;</span>, <span class="string">&#x27;慈善&#x27;</span>],</span><br><span class="line">    gf: &#123;</span><br><span class="line">        name: <span class="string">&#x27;迪丽热巴&#x27;</span>,</span><br><span class="line">        age: <span class="number">18</span>,</span><br><span class="line">        money: [<span class="string">&#x27;衣服&#x27;</span>, <span class="string">&#x27;化妆&#x27;</span>, <span class="string">&#x27;珠宝&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    name: <span class="string">&#x27;李四&#x27;</span>,</span><br><span class="line">    gf: &#123;</span><br><span class="line">        name: <span class="string">&#x27;古力娜扎&#x27;</span>,</span><br><span class="line">        height: <span class="number">168</span>,</span><br><span class="line">        money: [<span class="string">&#x27;唱歌&#x27;</span>, <span class="string">&quot;表演&quot;</span>, <span class="string">&#x27;衣服&#x27;</span>, <span class="string">&#x27;火锅&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    hobby: &#123;</span><br><span class="line">        h1: <span class="string">&#x27;骑马&#x27;</span>,</span><br><span class="line">        h2: <span class="string">&#x27;唱歌&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// var res = $.extend(false, obj, obj1, obj2);</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> res = $.extend(<span class="literal">true</span>, obj, obj1, obj2);</span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第二十一天</title>
      <link href="2021/10/18/day21%E8%87%AA%E6%80%BB/"/>
      <url>2021/10/18/day21%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第二十一天学习了jQuery的元素宽高，操作节点，事件绑定等等。</p><span id="more"></span><h1 id="day21自总"><a href="#day21自总" class="headerlink" title="day21自总"></a>day21自总</h1><h2 id="元素宽高"><a href="#元素宽高" class="headerlink" title="元素宽高"></a>元素宽高</h2><p>client: 可视宽高 innerWidth/innerHeight: 内容+内边距<br>offset: 占位宽高 outerWidth/outerHeight(布尔值) false 不传: 内容 + 内边距 + 边框 true: 内容 + 内边距 + 边框 + 外边距<br>scroll: 滚动距离</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).width(), $(<span class="string">&#x27;div&#x27;</span>).height()); <span class="comment">// 内容宽 内容高</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).innerWidth(), $(<span class="string">&#x27;div&#x27;</span>).innerHeight()); <span class="comment">// 可视宽 可视高</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).outerWidth(), $(<span class="string">&#x27;div&#x27;</span>).outerHeight()); <span class="comment">// 占位宽 占位高</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).outerWidth(<span class="literal">true</span>), $(<span class="string">&#x27;div&#x27;</span>).outerHeight(<span class="literal">true</span>)); <span class="comment">// 占位宽 占位高</span></span><br><span class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log($(&#x27;body,html&#x27;).scrollTop(), $(&#x27;body,html&#x27;).scrollLeft());</span></span><br><span class="line">    <span class="built_in">console</span>.log($(<span class="built_in">window</span>).scrollTop(), $(<span class="built_in">window</span>).scrollLeft());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    取赋值一体化</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).width(<span class="number">500</span>), $(<span class="string">&#x27;div&#x27;</span>).height(<span class="number">200</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).innerWidth(<span class="number">500</span>), $(<span class="string">&#x27;div&#x27;</span>).innerHeight(<span class="number">200</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).outerWidth(<span class="number">500</span>), $(<span class="string">&#x27;div&#x27;</span>).outerHeight(<span class="number">200</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).outerWidth(<span class="number">500</span>, <span class="literal">true</span>), $(<span class="string">&#x27;div&#x27;</span>).outerHeight(<span class="number">200</span>, <span class="literal">true</span>));</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log($(<span class="built_in">window</span>).scrollTop(<span class="number">500</span>), $(<span class="built_in">window</span>).scrollLeft(<span class="number">500</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="元素的位置"><a href="#元素的位置" class="headerlink" title="元素的位置"></a>元素的位置</h2><p>position: 获取到的结果是当前元素的定位距离 以对象方式返回<br>{<br>​    left: 0,<br>​    top: 0<br>}<br>offset: 获取的元素距离body的一个偏移距离</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    position: 获取到的结果是当前元素的定位距离 以对象方式返回</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            left: 0,</span></span><br><span class="line"><span class="comment">            top: 0</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).position()); <span class="comment">// &#123;top: 33, left: 8&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).position().left);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    offset: 获取的元素距离body的一个偏移距离</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).offset());</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).offset().left);</span><br></pre></td></tr></table></figure><h2 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h2><ol><li><p>创建节点: $(‘标签节点’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> li = $(<span class="string">&#x27;&lt;li&gt;12344&lt;/li&gt;&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(li);</span><br></pre></td></tr></table></figure></li><li><p>父元素末尾:<br>父.append(子);<br>子.appendTo(‘选择器’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).append(<span class="string">&#x27;&lt;li&gt;a1234&lt;/li&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;&lt;li&gt;b1234&lt;/li&gt;&#x27;</span>).appendTo(<span class="string">&#x27;ul&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>父元素开头:<br>父.prepend(子);<br>子.prependTo(‘选择器’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).prepend(<span class="string">&#x27;&lt;li&gt;c1234&lt;/li&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;&lt;li&gt;d1234&lt;/li&gt;&#x27;</span>).prependTo(<span class="string">&#x27;ul&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>插入某个元素之前:<br>参考节点.before(新节点);<br>新节点.insertBefore(参考节点);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.box&#x27;</span>).before(<span class="string">&#x27;&lt;li&gt;新Li1&lt;/li&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;&lt;li&gt;新Li2&lt;/li&gt;&#x27;</span>).insertBefore(<span class="string">&#x27;.box&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>插入到某个元素之后:<br>参考节点.after(新节点);<br>新节点.insertAfter(参考节点);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.box&#x27;</span>).after(<span class="string">&#x27;&lt;li&gt;新Li3&lt;/li&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;&lt;li&gt;新Li4&lt;/li&gt;&#x27;</span>).insertAfter(<span class="string">&#x27;.box&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ol><h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><p>remove: 删除当前元素 返回被删除掉的元素 不包含原来元素的行为<br>detach: 删除当前元素 返回被删除掉的元素 包含原来元素的行为<br>empty: 清空元素 删除当前元素中所有子节点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;li&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log($(<span class="built_in">this</span>).html());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    remove: 删除当前元素 返回被删除掉的元素 不包含原来元素的行为</span></span><br><span class="line"><span class="comment">    detach: 删除当前元素 返回被删除掉的元素 包含原来元素的行为</span></span><br><span class="line"><span class="comment">    empty: 清空元素 删除当前元素中所有子节点</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// $(&#x27;ul&#x27;).empty();</span></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// var li = $(this).parent().remove();</span></span><br><span class="line">    <span class="keyword">var</span> li = $(<span class="built_in">this</span>).parent().detach();</span><br><span class="line">    <span class="built_in">console</span>.log(li);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">&#x27;ul&#x27;</span>).append(li);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="克隆节点"><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h2><p>clone(布尔): false 不传: 不克隆行为 不保留事件函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;li&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log($(<span class="built_in">this</span>).html());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    clone(布尔):</span></span><br><span class="line"><span class="comment">        false/不传: 不克隆行为 不保留事件函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// var li  = $(&#x27;li&#x27;).eq(0).clone().appendTo(&#x27;ul&#x27;);</span></span><br><span class="line"><span class="keyword">var</span> li  = $(<span class="string">&#x27;li&#x27;</span>).eq(<span class="number">0</span>).clone(<span class="literal">true</span>).appendTo(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(li);</span><br></pre></td></tr></table></figure><h2 id="替换节点"><a href="#替换节点" class="headerlink" title="替换节点"></a>替换节点</h2><p>参考节点.replaceWith(新节点);<br>新节点.replaceAll(参考节点);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    参考节点.replaceWith(新节点);</span></span><br><span class="line"><span class="comment">    新节点.replaceAll(参考节点);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// $(&#x27;li&#x27;).replaceWith(&#x27;&lt;p&gt;1234&lt;/p&gt;&#x27;);</span></span><br><span class="line">$(<span class="string">&#x27;&lt;hr&gt;&#x27;</span>).replaceAll(<span class="string">&#x27;li&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    以事件处理函数的第一个形参</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$(<span class="built_in">window</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(ev); <span class="comment">// jQuery.Event </span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.originalEvent); <span class="comment">// js原生事件对象</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.type); <span class="comment">// 事件类型</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.target);</span><br><span class="line">    <span class="built_in">console</span>.log(ev.keyCode); <span class="comment">// 键盘编码</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.which); <span class="comment">// 跟keyCode一致  比keyCode强大 左中右 123</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.pageX, ev.pageY); <span class="comment">// 距离页面</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.clientX, ev.clientY); <span class="comment">// 可视区域左上角</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.screenX, ev.screenY); <span class="comment">// 屏幕</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.offsetX, ev.offsetY); <span class="comment">// 触发源内容左上角 边框会出现负数</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="on"><a href="#on" class="headerlink" title="on"></a>on</h2><ol><li><p>给一个元素绑定一个事件<br>jq对象.on(事件类型, 事件处理函数);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>给一个元素的多个事件添加同一处理函数<br>jq对象.on(‘事件 事件 事件…’, 事件处理函数)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).on(<span class="string">&#x27;click mousedown mouseup&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(ev.type);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>给不同事件添加不同处理函数<br>jq对象.on({<br>​    事件: 函数,<br>​    事件: 函数<br>});</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).on(&#123;</span><br><span class="line">    mousemove: <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(ev.clientX);</span><br><span class="line">    &#125;,</span><br><span class="line">    contextmenu: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;contextmenu&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>绑定自定义事件:<br>由程序员自己定义的事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).on(<span class="string">&#x27;call&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;okk&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动触发自定义事件: jq对象.trigger(&#x27;自定义事件名称&#x27;);</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).trigger(<span class="string">&#x27;call&#x27;</span>);</span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure></li><li><p>事件委托<br>jq对象(父).on(事件类型, ‘子选择器’, 事件处理函数);<br>this指向的就是每一个子元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;li&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).append(<span class="string">&#x27;&lt;li&gt;1234&lt;/li&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ol><h2 id="one"><a href="#one" class="headerlink" title="one"></a>one</h2><p>one: 与on是一样的 只会触发一次</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).one(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="off"><a href="#off" class="headerlink" title="off"></a>off</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// div添加事件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aa</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(aa);</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).mousedown(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;down&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// $(&#x27;div&#x27;).off(); // 取消所有的事件</span></span><br><span class="line"><span class="comment">// $(&#x27;div&#x27;).off(&#x27;click&#x27;); // 取消所有的click的事件</span></span><br><span class="line"><span class="comment">// $(&#x27;div&#x27;).off(&#x27;click&#x27;, aa); // 取消click中名字为aa的事件</span></span><br><span class="line"><span class="comment">// $(&#x27;div&#x27;).off(&#x27;click mousedown&#x27;); // 取消所有的click和mousedown所有事件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// jq中事件具有命名空间 事件.名 设置命名空间 避免全局变量的影响</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).on(<span class="string">&#x27;click.cc&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).off(<span class="string">&#x27;click.cc mousedown&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="合成事件"><a href="#合成事件" class="headerlink" title="合成事件"></a>合成事件</h2><p>jq对象.hover()<br>​一个函数: 滑入滑出都触发<br>​两个函数: 第一个滑入 第二个滑出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// $(&#x27;div&#x27;).hover(function (ev) &#123;</span></span><br><span class="line"><span class="comment">//     console.log(ev.type);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(ev.type);</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(ev.type, <span class="string">&#x27;1-----&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="阻止冒泡和取消默认行为"><a href="#阻止冒泡和取消默认行为" class="headerlink" title="阻止冒泡和取消默认行为"></a>阻止冒泡和取消默认行为</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;p&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 阻止冒泡</span></span><br><span class="line">    <span class="comment">// ev.stopPropagation();</span></span><br><span class="line">    <span class="comment">// 取消默认行为</span></span><br><span class="line">    <span class="comment">// ev.preventDefault();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 阻止冒泡 + 取消默认行为</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第二十天</title>
      <link href="2021/10/18/day20%E8%87%AA%E6%80%BB/"/>
      <url>2021/10/18/day20%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第二十天学习了jQuery的选择器，查找节点，操作属性，操作类名，操作样式等等。</p><span id="more"></span><h1 id="day20"><a href="#day20" class="headerlink" title="day20"></a>day20</h1><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>jquery: js的工具库<br>事件处理、文档的处理、动画<br>唯一变量 $ jQuery<br>强大的选择器、开源、完善的文档</p><h2 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h2><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>2: 不兼容ie<br>1.xx: 兼容ie<br>最新版本: 3.6.0<br>jquery.js: 未压缩 学习<br>jquery.min.js: 压缩 工作</p><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;script src=&quot;./js/jquery.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 别名: $</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(jQuery);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($ == jQuery); <span class="comment">// true</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">window</span>.$ == <span class="built_in">window</span>.jQuery);</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="冲突解决"><a href="#冲突解决" class="headerlink" title="冲突解决"></a>冲突解决</h2><h3 id="jQuery覆盖其他"><a href="#jQuery覆盖其他" class="headerlink" title="jQuery覆盖其他"></a>jQuery覆盖其他</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $ = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($); <span class="comment">// 30</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;script src=&quot;./js/jquery.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($); <span class="comment">// 函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 冲突解决方法 将$的控制权交给其他</span></span></span><br><span class="line">    jQuery.noConflict();</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 使用自执行函数</span></span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($); <span class="comment">// 函数</span></span></span><br><span class="line">    &#125;)(jQuery);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="其他覆盖jQuery"><a href="#其他覆盖jQuery" class="headerlink" title="其他覆盖jQuery"></a>其他覆盖jQuery</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;script src=&quot;./js/jquery.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $ = <span class="number">40</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 使用自执行函数</span></span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($); <span class="comment">// 函数</span></span></span><br><span class="line">    &#125;)(jQuery);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><p>基本选择: 标签 类名 id 组合选择器<br>css选择器怎么写 jq中选择器就怎么写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;.box&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;#six&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;#six, .box&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h3><p>后代选择器: 父 子<br>直接子元素: 父 &gt; 子<br>相邻选择器: 选1 + 选2<br>兄弟后面的: 选1 ~ 选择2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;ul li&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;ul &gt; li&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;.box + div&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li + div&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;.box ~ div&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="基础过滤"><a href="#基础过滤" class="headerlink" title="基础过滤"></a>基础过滤</h3><p>基础过滤选择器: first last eq gt lt even odd</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:first&#x27;</span>)); <span class="comment">// 第一个</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:last&#x27;</span>)); <span class="comment">// 最后一个</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:eq(0)&#x27;</span>)); <span class="comment">// 获取指定下标的元素</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:gt(4)&#x27;</span>)); <span class="comment">// 获取大于指定下标的元素</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:lt(4)&#x27;</span>)); <span class="comment">// 获取小于指定下标的元素</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:even&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;red&#x27;</span>)); <span class="comment">// 获取偶数(下标是偶数)</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:odd&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>)); <span class="comment">// 获取奇数(下标是奇数)</span></span><br><span class="line"><span class="comment">// jq对象.css(属性名, 属性值);</span></span><br><span class="line"><span class="comment">// jq中非语法错误 不会报错</span></span><br></pre></td></tr></table></figure><h3 id="属性过滤"><a href="#属性过滤" class="headerlink" title="属性过滤"></a>属性过滤</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li[class]&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;red&#x27;</span>)); <span class="comment">// 获取带有class属性的li</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li[class=box]&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>)); <span class="comment">// 获取li中class为box的li</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li[class^=b]&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;skyblue&#x27;</span>)); <span class="comment">// 获取li中以b字母为开头 </span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li[class$=x]&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>)); <span class="comment">// 获取li中以x字母为结尾</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li[class!=box]&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>)); <span class="comment">// 获取li中class不等于box的li</span></span><br></pre></td></tr></table></figure><h3 id="子元素过滤"><a href="#子元素过滤" class="headerlink" title="子元素过滤"></a>子元素过滤</h3><p>子元素过滤: first-child last-child nth-child</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul li:first-child&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;ul li:last-child&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;ul li:nth-child(3)&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="内容过滤"><a href="#内容过滤" class="headerlink" title="内容过滤"></a>内容过滤</h3><p>内容过滤: contains empty has parent 了解</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:contains(1)&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:empty&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:has(p)&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;skyblue&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;p:parent&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;red&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="表单过滤"><a href="#表单过滤" class="headerlink" title="表单过滤"></a>表单过滤</h3><p>:input 获取所有的表单元素</p><p>:type的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:input&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:text&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:password&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:radio&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:checkbox&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:file&#x27;</span>));</span><br><span class="line"><span class="comment">// console.log($(&#x27;:date&#x27;)); // 报错 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// textarea select 直接获取 不需要加:</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;textarea&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="表单属性"><a href="#表单属性" class="headerlink" title="表单属性"></a>表单属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:enabled&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:disabled&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:checked&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:checkbox:checked&#x27;</span>)); <span class="comment">// 复选框中被选中</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;:selected&#x27;</span>));</span><br></pre></td></tr></table></figure><h2 id="jq方法特性"><a href="#jq方法特性" class="headerlink" title="jq方法特性"></a>jq方法特性</h2><ol><li>取赋值一体化，既可以获取值 也可以设置值，除了txt 以外 所有方法取值只获取第一个符合选择器条件的元素的值，设置值的时候 迭代设置</li><li>隐式迭代:每一个方法在设置的时候, 会自动遍历每一个符合选择器的元素并且设置</li><li>链式调用，每个jq方法在执行以后 会将被操作的对象或操作以后的对象返回回来，会了方便下一个方法直接使用</li><li>jq对象只能使用jq方法 js对象只能使用js的方法</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>).css(<span class="string">&#x27;font-size&#x27;</span>));</span><br><span class="line"><span class="comment">// console.log($(&#x27;li&#x27;).css(&#x27;font-size&#x27;, 20));</span></span><br><span class="line"><span class="comment">// var lis = $(&#x27;li&#x27;).css(&#x27;font-size&#x27;, 20);</span></span><br><span class="line"><span class="comment">// console.log(lis);</span></span><br><span class="line"><span class="comment">// lis.click(function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(this.innerHTML);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;li&#x27;</span>).css(<span class="string">&#x27;font-size&#x27;</span>, <span class="number">20</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(this.innerHTML);</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="查找节点"><a href="#查找节点" class="headerlink" title="查找节点"></a>查找节点</h2><h3 id="节点遍历"><a href="#节点遍历" class="headerlink" title="节点遍历"></a>节点遍历</h3><p>每个方法都可以接收一个选择器作为筛选条件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;ul&#x27;</span>).children()); <span class="comment">// 直接子元素</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;ul&#x27;</span>).children(<span class="string">&#x27;li&#x27;</span>)); <span class="comment">// 直接li子元素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).parent()); <span class="comment">// 直接父元素</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).parents()); <span class="comment">// 获取到html为止所有的父元素</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).parents(<span class="string">&#x27;body&#x27;</span>)); </span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;hr&#x27;</span>).prev()); <span class="comment">// 紧跟着hr的上一个元素</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;hr&#x27;</span>).prevAll()); <span class="comment">// hr前面所有的兄弟节点</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;hr&#x27;</span>).prevAll(<span class="string">&#x27;li&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;hr&#x27;</span>).next()); <span class="comment">// 紧跟着hr的下一个元素</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;hr&#x27;</span>).nextAll()); <span class="comment">// 后面所有的</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;hr&#x27;</span>).nextAll(<span class="string">&#x27;div&#x27;</span>)); <span class="comment">// 后面所有的div</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;hr&#x27;</span>).siblings()); <span class="comment">// 获取所有的兄弟节点</span></span><br></pre></td></tr></table></figure><h3 id="节点过滤"><a href="#节点过滤" class="headerlink" title="节点过滤"></a>节点过滤</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>).first());</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>).last());</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>).eq(<span class="number">3</span>));</span><br><span class="line">$(<span class="string">&#x27;li&#x27;</span>).filter(<span class="string">&#x27;.box&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;li&#x27;</span>).not(<span class="string">&#x27;.box&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).find(<span class="string">&#x27;.box&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>, <span class="string">&#x27;skyblue&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="操作属性"><a href="#操作属性" class="headerlink" title="操作属性"></a>操作属性</h2><p>attr: 可以操作一切属性 不建议属性值为true和false<br>​获取: jq对象.attr(‘属性名’);<br>​设置: jq对象.attr(‘属性名’, ‘属性值’);<br>​移除: jq对象.removeAttr(‘属性名’);<br>prop: 操作固有属性 建议属性值为true和false<br>获取: jq对象.prop(‘属性名’);<br>设置: jq对象.prop(‘属性名’, ‘属性值’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// console.log($(&#x27;li&#x27;).attr(&#x27;class&#x27;));</span></span><br><span class="line"><span class="comment">// console.log($(&#x27;li&#x27;).attr(&#x27;class&#x27;, &#x27;box abc&#x27;));</span></span><br><span class="line"><span class="comment">// $(&#x27;li&#x27;).attr(&#x27;tag&#x27;, 123);</span></span><br><span class="line"><span class="comment">// console.log($(&#x27;li&#x27;).attr(&#x27;tag&#x27;));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>).prop(<span class="string">&#x27;class&#x27;</span>)); <span class="comment">// box a</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>).prop(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;nC&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>).prop(<span class="string">&#x27;tag&#x27;</span>, <span class="string">&#x27;aaa&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li&#x27;</span>).prop(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log($(&#x27;:checkbox&#x27;).attr(&#x27;checked&#x27;)); // undefined  checked</span></span><br><span class="line"><span class="comment">// console.log($(&#x27;:checkbox&#x27;).prop(&#x27;checked&#x27;)); // true</span></span><br><span class="line"><span class="comment">// console.log($(&#x27;:checkbox&#x27;).prop(&#x27;checked&#x27;, true));</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;li&#x27;</span>).removeAttr(<span class="string">&#x27;a&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="操作类名"><a href="#操作类名" class="headerlink" title="操作类名"></a>操作类名</h2><p>添加: 原有类名的基础上添加 jq对象.addClass(‘类名 类名’);</p><p>移除: 原有类名的基础上删除指定 jq对象.removeClass(‘类名 类名’);</p><p>切换: 有就删除 没有就添加 jq对象.toggleClass(‘类名’);</p><p>判断是否有某个类名: 返回布尔值 true–有 false–没有  jq对象.hasClass(‘类名’);</p><p>判断对象是否符合某个选择器 jq对象.is(‘选择器’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;li&#x27;</span>).addClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;li&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(this); // 触发源</span></span><br><span class="line">    <span class="comment">// $(this).addClass(&#x27;active&#x27;);</span></span><br><span class="line">    <span class="comment">// $(this).removeClass(&#x27;active&#x27;);</span></span><br><span class="line">    <span class="built_in">console</span>.log($(<span class="built_in">this</span>).hasClass(<span class="string">&#x27;active&#x27;</span>));</span><br><span class="line">    <span class="built_in">console</span>.log($(<span class="built_in">this</span>).is(<span class="string">&#x27;.active&#x27;</span>));</span><br><span class="line">    $(<span class="built_in">this</span>).toggleClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="操作样式"><a href="#操作样式" class="headerlink" title="操作样式"></a>操作样式</h2><p>jq对象.css();<br>获取:jq对象.css(属性名);<br>设置<br>​    单个: jq对象.css(属性名, 属性值);<br>​    多个: jq对象.css({});<br>​    {<br>​        属性名: 属性值,<br>​        属性名: 属性值,<br>​        属性名: 属性值<br>​    }<br>属性名<br>可以加引号也可以不加 建议加引号<br>加引号可以使用-  不加引号 使用驼峰命名<br>属性值<br>如果单位是px 省略px 直接写数字<br>表达式: ‘+=20’ ‘-=10’ 引号必须加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;div&#x27;</span>).css(<span class="string">&#x27;width&#x27;</span>));</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).css(<span class="string">&#x27;width&#x27;</span>, <span class="string">&#x27;100px&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).css(&#123;</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    fontSize: <span class="number">20</span>,</span><br><span class="line">    <span class="string">&#x27;font-weight&#x27;</span>: <span class="number">800</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).css(&#123;</span><br><span class="line">        width: <span class="string">&#x27;+=100&#x27;</span>,</span><br><span class="line">        height: <span class="string">&#x27;-=10&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第十六天</title>
      <link href="2021/10/11/day16%E8%87%AA%E6%80%BB/"/>
      <url>2021/10/11/day16%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第十六天学习了对象的继承。</p><span id="more"></span><h1 id="day16"><a href="#day16" class="headerlink" title="day16"></a>day16</h1><h2 id="面向对象的继承"><a href="#面向对象的继承" class="headerlink" title="面向对象的继承"></a>面向对象的继承</h2><h3 id="原型链继承"><a href="#原型链继承" class="headerlink" title="原型链继承"></a>原型链继承</h3><p>子类构造函数的原型对象 = 父类构造函数的实例化对象<br>原型链查找:</p><ul><li>找自身</li><li>自身没有 找自身的原型对象(父类构造函数的实例化对象)</li><li>如果没有 找父类构造函数的原型对象</li><li>找object</li><li>如果没有 返回undefined  如果在哪一步找到了 直接返回结果</li></ul><p>constructor:当前对象的构造函数</p><p>原型链继承:</p><ol><li>无法识别当前对象真正的构造函数</li><li>一改全改</li><li>不能传参</li><li>子类构造函数身上的原型对象的属性和方法不能继承</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 父类构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.money = [<span class="string">&#x27;上班&#x27;</span>, <span class="string">&#x27;股票&#x27;</span>, <span class="string">&#x27;理财&#x27;</span>]</span><br><span class="line">    <span class="built_in">this</span>.name1 = <span class="string">&#x27;ddd&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Father.prototype.work = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;努力赚钱，养家糊口&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2. 子类构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">Son.prototype.play = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;打五把cs:go！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3. 设置继承: 子类构造函数的原型对象 = 父类构造函数的实例化对象;</span></span><br><span class="line">Son.prototype = <span class="keyword">new</span> Father(<span class="string">&#x27;大石头&#x27;</span>, <span class="number">21</span>)</span><br><span class="line"><span class="keyword">var</span> son1 = <span class="keyword">new</span> Son()</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(son1);</span><br><span class="line"><span class="built_in">console</span>.log(son1.name1);</span><br><span class="line">son1.money.push(<span class="string">&#x27;充钱了&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(son1.money);</span><br></pre></td></tr></table></figure><h3 id="对象冒充继承"><a href="#对象冒充继承" class="headerlink" title="对象冒充继承"></a>对象冒充继承</h3><p>在子类构造函数中 调用父类构造函数 将父类构造函数this指向当前的this</p><p>不能继承父类构造函数的原型对象上的方法和属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 父类构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.money = [<span class="string">&#x27;交通&#x27;</span>, <span class="string">&#x27;存款&#x27;</span>, <span class="string">&#x27;理财&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Father.prototype.work = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;工作有收入&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 子类构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params">name, age</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 3. 在子类构造函数中 调用父类构造函数 将父类构造函数this指向当前的this</span></span><br><span class="line">    Father.call(<span class="built_in">this</span>, name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Son.prototype.hobby = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;打游戏&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 实例化对象</span></span><br><span class="line"><span class="keyword">var</span> son1 = <span class="keyword">new</span> Son(<span class="string">&#x27;张三&#x27;</span>, <span class="number">12</span>);</span><br><span class="line"><span class="keyword">var</span> son2 = <span class="keyword">new</span> Son(<span class="string">&#x27;李四&#x27;</span>, <span class="number">12</span>);</span><br><span class="line"><span class="built_in">console</span>.log(son1, son2);</span><br><span class="line">son1.money.push(<span class="string">&#x27;股票&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(son1.money, son2.money);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    不能继承父类构造函数的原型对象上的方法和属性</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(son1.name1);</span><br></pre></td></tr></table></figure><h3 id="组合继承"><a href="#组合继承" class="headerlink" title="组合继承"></a>组合继承</h3><p>组合继承: 原型链 + 对象冒充</p><p>\1. 子类构造函数的原型对象的方法和属性继承不了</p><p>\2. 父类构造函数的属性和方法多次继承</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 父类构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.money = [<span class="string">&#x27;交通&#x27;</span>, <span class="string">&#x27;存款&#x27;</span>, <span class="string">&#x27;理财&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Father.prototype.work = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;工作有收入&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 子类构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params">name, age</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 3. 在子类构造函数中 调用父类构造函数 将父类构造函数this指向当前的this</span></span><br><span class="line">    Father.call(<span class="built_in">this</span>, name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Son.prototype.hobby = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;打游戏&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 子类构造函数的原型对象 = 父类构造函数的实例化对象</span></span><br><span class="line">Son.prototype = <span class="keyword">new</span> Father();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 实例化对象</span></span><br><span class="line"><span class="keyword">var</span> son1 = <span class="keyword">new</span> Son(<span class="string">&#x27;张三&#x27;</span>, <span class="number">12</span>);</span><br><span class="line"><span class="keyword">var</span> son2 = <span class="keyword">new</span> Son(<span class="string">&#x27;李四&#x27;</span>, <span class="number">12</span>);</span><br><span class="line"><span class="built_in">console</span>.log(son1, son2);</span><br><span class="line">son1.money.push(<span class="string">&#x27;股票&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(son1.money, son2.money);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    不能继承父类构造函数的原型对象上的方法和属性</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(son1.name1);</span><br></pre></td></tr></table></figure><h3 id="寄生式组合继承"><a href="#寄生式组合继承" class="headerlink" title="寄生式组合继承"></a>寄生式组合继承</h3><p>Object.create(原型对象): 使用原型对象创建一个对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    组合继承: 原型链 + 对象冒充</span></span><br><span class="line"><span class="comment">        1. 子类构造函数的原型对象的方法和属性继承不了</span></span><br><span class="line"><span class="comment">        2. 父类构造函数的属性和方法多次继承</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 1. 父类构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.money = [<span class="string">&#x27;交通&#x27;</span>, <span class="string">&#x27;存款&#x27;</span>, <span class="string">&#x27;理财&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Father.prototype.work = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;工作有收入&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 子类构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params">name, age</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 3. 在子类构造函数中 调用父类构造函数 将父类构造函数this指向当前的this</span></span><br><span class="line">    Father.call(<span class="built_in">this</span>, name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 子类构造函数的原型对象 = 父类构造函数的实例化对象</span></span><br><span class="line"><span class="comment">// Object.create(原型对象): 使用原型对象创建一个对象</span></span><br><span class="line"><span class="comment">// console.log(Object.create(Father.prototype));</span></span><br><span class="line">Son.prototype = <span class="built_in">Object</span>.create(Father.prototype);</span><br><span class="line"><span class="comment">// 单独设置</span></span><br><span class="line">Son.prototype.constructor = Son;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 后续son的原型对象添加属性和方法</span></span><br><span class="line">Son.prototype.hobby = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;打游戏&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> son1 = <span class="keyword">new</span> Son(<span class="string">&#x27;张三&#x27;</span>, <span class="number">12</span>);</span><br><span class="line"><span class="built_in">console</span>.log(son1);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第十五天</title>
      <link href="2021/10/10/day15%E8%87%AA%E6%80%BB/"/>
      <url>2021/10/10/day15%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第十五天学习了递归，防抖，节流和面向对象编程。</p><span id="more"></span><h1 id="day15"><a href="#day15" class="headerlink" title="day15"></a>day15</h1><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>再函数里边调用自己的函数，必须有函数结束的条件，否则死循环。<br>使用情况：将大的操作划分为小操作重复执行的时候使用<br>如果没有结束条件的话会报错：<br>Uncaught RangeError: Maximum call stack size exceeded  栈溢出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//6的阶乘</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n * a(n - <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> q = a(<span class="number">6</span>)</span><br><span class="line"><span class="built_in">console</span>.log(q);</span><br></pre></td></tr></table></figure><h3 id="递归-斐波那契数列"><a href="#递归-斐波那契数列" class="headerlink" title="递归-斐波那契数列"></a>递归-斐波那契数列</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fei</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> fei(n - <span class="number">1</span>) + fei(n - <span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归-快速排序"><a href="#递归-快速排序" class="headerlink" title="递归-快速排序"></a>递归-快速排序</h3><p>快速排序: 找到中间项 进行左右重复排序的过程</p><ol><li>有一个函数处理排序函数</li><li>找到中间项的下标</li><li>找到中间项</li><li>删除中间项</li><li>创建两个空数组 放置比中间项小 和 大的值</li><li>用数组的每一个项和中间项做比较 比他大的放右边 比她小的放左边</li><li>左右数组需要重复排序</li><li>设置每次排序以后的返回结果</li><li>设置排序结束条件: 当穿进去的数组长度小于等于1 的时候 直接返回</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">33</span>, <span class="number">43</span>, <span class="number">34</span>, <span class="number">44</span>, <span class="number">52</span>, <span class="number">21</span>, <span class="number">9</span>, <span class="number">67</span>, <span class="number">16</span>, <span class="number">84</span>, <span class="number">72</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qs</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// var mid=arr[Math.floor(arr.length/2)]</span></span><br><span class="line">    <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> mid = arr.splice(<span class="built_in">Math</span>.floor(arr.length / <span class="number">2</span>), <span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">console</span>.log(mid);</span><br><span class="line">    <span class="keyword">var</span> max = []</span><br><span class="line">    <span class="keyword">var</span> min = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">of</span> arr) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; mid) &#123;</span><br><span class="line">            max.push(i)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            min.push(i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    max = qs(max)</span><br><span class="line">    min = qs(min)</span><br><span class="line">    <span class="keyword">return</span> min.concat(mid, max)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = qs(arr)</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><h2 id="事件频繁触发"><a href="#事件频繁触发" class="headerlink" title="事件频繁触发"></a>事件频繁触发</h2><p>为了解决事件频繁触发的问题，引申出了防抖和节流</p><h3 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h3><p>利用闭包, 在用户触发的事件过程中不进行事件的处理 等待用户停止触发多长时间后 再进行事件的处理<br>只要用户在输入或者是移动 就不触发事件处理函数 等用户停止1s后 在执行事件处理函数<br>只要用户触发 时间需要重新计时<br>防抖带来的问题：太生硬</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">0</span></span><br><span class="line">p.onmousemove = debounce(inner, <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inner</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    n++</span><br><span class="line">    p.innerText = n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">fn, wait</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> time = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(time)</span><br><span class="line">        time = <span class="built_in">setTimeout</span>(fn, wait)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h3><p>在一定的时间内 只能触发一次事件处理函数<br>利用闭包 为了解决全局变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">p.onmousemove = throttle(inner, <span class="number">1000</span>)</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inner</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    n++</span><br><span class="line">    p.innerHTML = n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn, wait</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> time = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(tag);</span><br><span class="line">        <span class="keyword">if</span> (tag) &#123;</span><br><span class="line">            tag = <span class="literal">false</span></span><br><span class="line">            time = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                fn()</span><br><span class="line">                tag = <span class="literal">true</span></span><br><span class="line">                <span class="built_in">clearTimeout</span>(time)</span><br><span class="line">            &#125;, wait)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="call-和-apply"><a href="#call-和-apply" class="headerlink" title="call 和 apply"></a>call 和 apply</h2><p>call和apply：可以改变this的指向</p><p>区别：</p><ol><li>函数.call(this的新指向, …data);  参数一个个用,分隔直接写</li><li>函数.apply(this的新指向, […data]); 第二个参数是一个数组</li></ol><h3 id="call"><a href="#call" class="headerlink" title="call"></a>call</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&#x27;bigStone&#x27;</span>,</span><br><span class="line">    sayName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.sayName()</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    name: <span class="string">&#x27;一块大石头_&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">obj.sayName.call(obj1)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">fn()</span><br><span class="line">fn.call(<span class="number">1</span>)</span><br><span class="line">fn()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>, a, b);</span><br><span class="line">&#125;</span><br><span class="line">fn1(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">fn1.call(<span class="number">1</span>, <span class="number">55</span>, <span class="number">56</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断数据类型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString().slice(<span class="number">8</span>, -<span class="number">1</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call([]).slice(<span class="number">8</span>, -<span class="number">1</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="string">&#x27;&#x27;</span>).slice(<span class="number">8</span>, -<span class="number">1</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="number">5</span>).slice(<span class="number">8</span>, -<span class="number">1</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(&#123;&#125;).slice(<span class="number">8</span>, -<span class="number">1</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="literal">true</span>).slice(<span class="number">8</span>, -<span class="number">1</span>));</span><br></pre></td></tr></table></figure><h3 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>, a, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fn1.apply(<span class="built_in">document</span>, [<span class="number">44</span>, <span class="number">33</span>]);</span><br><span class="line"><span class="comment">// 数组找最大和最小项</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">32</span>, <span class="number">43</span>, <span class="number">546</span>, <span class="number">56</span>, <span class="number">32</span>, <span class="number">534</span>, <span class="number">234</span>, <span class="number">65</span>];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max.apply(<span class="built_in">this</span>, arr));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min.apply(<span class="built_in">this</span>, arr));</span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>概念: 基于对象<br>面向过程: 一步步分析实现  注重过程<br>面向对象: 一种编程思想    注重结果<br>核心: 对象<br>组成: 方法: 函数 行为 属性: 描述 属性</p><p>以类创建模板 实例化对象的过程<br>es5中 没有明确的类的概念 用函数去创建模板 实例化对象<br>实例化: 具象化对象的时候 就是实例化<br>遵循: 有对象就要用对象 没有对象就创建对象<br>特点: 封装 继承 多态</p><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><h4 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h4><p>字面量: 只适用于单个对象的创建</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    age: <span class="number">33</span>,</span><br><span class="line">    work: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;为了碎银几两 辛辛苦苦工作&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.name);</span><br><span class="line">obj.work();</span><br></pre></td></tr></table></figure><h4 id="new关键字"><a href="#new关键字" class="headerlink" title="new关键字"></a>new关键字</h4><p>new关键字创建: 代码冗余</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 创建空对象</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 添加属性和方法</span></span><br><span class="line">obj.name = <span class="string">&#x27;杨洋&#x27;</span>;</span><br><span class="line">obj.age = <span class="number">38</span>;</span><br><span class="line">obj.work = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;演员&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.name);</span><br><span class="line">obj.work();</span><br></pre></td></tr></table></figure><h4 id="工厂模式创建"><a href="#工厂模式创建" class="headerlink" title="工厂模式创建"></a>工厂模式创建</h4><p>问题:</p><ol><li>识别不清</li><li>内存浪费</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createObj</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    obj.name = name;</span><br><span class="line">    obj.age = age;</span><br><span class="line">    obj.work = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;掉头发了。。。&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = createObj(<span class="string">&#x27;bigstone&#x27;</span>, <span class="number">21</span>);</span><br><span class="line"><span class="keyword">var</span> obj1 = createObj(<span class="string">&#x27;大石头&#x27;</span>, <span class="number">22</span>)</span><br><span class="line"><span class="built_in">console</span>.log(obj, obj1);</span><br><span class="line">obj.work()</span><br><span class="line"><span class="comment">// 判断对象是否是由createObj函数创建</span></span><br><span class="line"><span class="comment">// 对象 instanceof 函数  true--是 false--不是</span></span><br><span class="line"><span class="built_in">console</span>.log(obj <span class="keyword">instanceof</span> createObj);</span><br><span class="line"><span class="built_in">console</span>.log(obj1 <span class="keyword">instanceof</span> createObj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.work == obj1.work);</span><br></pre></td></tr></table></figure><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">            构造函数:</span></span><br><span class="line"><span class="comment">                1. 构造函数首字母大写 为了和普通函数进行区分 (约定)</span></span><br><span class="line"><span class="comment">                2. 方法和属性直接加给this</span></span><br><span class="line"><span class="comment">                3. 必须使用new进行调用, 否则和普通函数没有区别</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            new的发生了什么:</span></span><br><span class="line"><span class="comment">                1. 创建一个空对象</span></span><br><span class="line"><span class="comment">                2. 将this指向当前空对象</span></span><br><span class="line"><span class="comment">                3. 将函数prototype 赋值给 对象的__proto__</span></span><br><span class="line"><span class="comment">                4. 添加属性和方法</span></span><br><span class="line"><span class="comment">                5. 隐式返回对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            问题:</span></span><br><span class="line"><span class="comment">                1. 内存浪费</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateObj</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.play = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;打五把英雄联盟！&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> CreateObj(<span class="string">&#x27;一块小杰杰&#x27;</span>, <span class="number">21</span>)</span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> CreateObj(<span class="string">&#x27;一块大石头&#x27;</span>, <span class="number">33</span>)</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line">obj.play()</span><br><span class="line"><span class="built_in">console</span>.log(obj <span class="keyword">instanceof</span> CreateObj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.play == obj1.play);</span><br></pre></td></tr></table></figure><h4 id="原型创建"><a href="#原型创建" class="headerlink" title="原型创建"></a>原型创建</h4><p>原型就是存储最顶层共享的方法和属性的对象<br>在函数中：prototype<br>在对象中：<strong>proto</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">            原型创建:</span></span><br><span class="line"><span class="comment">                不能传参</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateObj</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">CreateObj.prototype.name = <span class="string">&#x27;一块大石头&#x27;</span>;</span><br><span class="line">CreateObj.prototype.age = <span class="string">&#x27;21&#x27;</span></span><br><span class="line">CreateObj.prototype.play = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;打五把cs：go&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> CreateObj()</span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> CreateObj()</span><br><span class="line"><span class="built_in">console</span>.log(obj.name);</span><br><span class="line">obj.play()</span><br><span class="line"><span class="built_in">console</span>.log(obj <span class="keyword">instanceof</span> CreateObj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.play == obj1.play);</span><br></pre></td></tr></table></figure><h4 id="混合创建"><a href="#混合创建" class="headerlink" title="混合创建"></a>混合创建</h4><p>构造创建(可变的) + 原型创建(不变的)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateObj</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name</span><br><span class="line">    <span class="built_in">this</span>.age = age</span><br><span class="line">&#125;</span><br><span class="line">CreateObj.prototype.play = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;厉害呀，嘉文！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> CreateObj(<span class="string">&#x27;嘉文&#x27;</span>, <span class="string">&#x27;36&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> CreateObj(<span class="string">&#x27;666&#x27;</span>, <span class="string">&#x27;36&#x27;</span>)</span><br><span class="line">obj.play()</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj <span class="keyword">instanceof</span> CreateObj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.play == obj1.play);</span><br></pre></td></tr></table></figure><h4 id="动态混合创建"><a href="#动态混合创建" class="headerlink" title="动态混合创建"></a>动态混合创建</h4><p>在构造函数中判断原型上的方法和属性是否是期望值 不是的话在进行赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateObj</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name</span><br><span class="line">    <span class="built_in">this</span>.age = age</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">this</span>.play != <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;不是&#x27;</span>);</span><br><span class="line">        CreateObj.prototype.play = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;厉害呀，嘉文！&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;是&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> CreateObj(<span class="string">&#x27;嘉文&#x27;</span>, <span class="string">&#x27;36&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> CreateObj(<span class="string">&#x27;666&#x27;</span>, <span class="string">&#x27;36&#x27;</span>)</span><br><span class="line">obj.play()</span><br><span class="line">obj1.play()</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj <span class="keyword">instanceof</span> CreateObj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.play == obj1.play);</span><br></pre></td></tr></table></figure><h4 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.push(<span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="built_in">console</span>.log(arr.__proto__);</span><br><span class="line"><span class="keyword">var</span> brr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(brr);</span><br><span class="line"><span class="built_in">console</span>.log(brr.__proto__);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.prototype);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.prototype == brr.__proto__); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.push = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;新方法&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">brr.push(<span class="number">666</span>);</span><br><span class="line"><span class="built_in">console</span>.log(brr);</span><br></pre></td></tr></table></figure><h4 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h4><p>原型链: 在对象或函数被创建的时候所自带的链表关系，实现继承和查找。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第十四天</title>
      <link href="2021/10/08/day14%E8%87%AA%E6%80%BB/"/>
      <url>2021/10/08/day14%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第十三天未总结，因为只写了几个函数，第十四天学习了回调函数和闭包。</p><span id="more"></span><h1 id="day14"><a href="#day14" class="headerlink" title="day14"></a>day14</h1><h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2><p>回调函数：执行完一个动作之后还要继续执行的函数<br>作为实参传递的函数就是回调函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;啦啦啦&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;乌拉!!!&#x27;</span>)</span><br><span class="line">    fn()</span><br><span class="line">&#125;</span><br><span class="line">b(a)</span><br></pre></td></tr></table></figure><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><p>匿名：没有名字的函数<br>直接写会报错，将匿名函数转换成函数表达式，外加()，同样具有函数的特点</p><p>立即执行函数：</p><p>函数自执行 分号必须加不可以省略<br>有参数<br>有函数返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;俺是一个匿名函数&#x27;</span>);</span><br><span class="line">&#125;)();</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;俺是另一个回调函数&#x27;</span>);</span><br><span class="line">&#125;());</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(a,s,d,f,g);</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;)(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line"><span class="keyword">var</span> a = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&#x27;哈哈哈哈&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><p>可以访问其他函数内部变量的函数就是闭包。<br>函数里边套函数，内部函数访问外部函数的变量<br>可以扩大作用范围，缓存数据<br>但是如果有大量缓存数据会造成内存泄漏。不参与垃圾回收机制</p><p>使用断点调试</p><ol><li>outer的第一行代码</li><li>inner的第一行代码</li><li>刷新  看右侧或者底部的 Scope local: 当前作用域 Global: 全局 closure: 闭包</li></ol><p>注意: 外部函数调用一次就会形成一个新的闭包</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">inner</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        a++;</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> inner;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> res = outer();</span><br><span class="line"><span class="built_in">console</span>.log(res); <span class="comment">//fun</span></span><br><span class="line">res() <span class="comment">//11</span></span><br><span class="line">res() <span class="comment">//12</span></span><br><span class="line"><span class="keyword">var</span> res1 = outer();</span><br><span class="line">res1() <span class="comment">//11</span></span><br></pre></td></tr></table></figure><p>当前作用域需要自己变量的值的时候，使用闭包</p><p>在for循环所添加的事件中 解决不能通过下标得到正确的元素的问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(lis);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">        <span class="number">4</span></span><br><span class="line">        lis[s].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模拟私有变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user = val;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        getUser: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(user);</span><br><span class="line">        &#125;,</span><br><span class="line">        setUser: <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">            user = n;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> u = create(<span class="string">&#x27;一块大石头_&#x27;</span>);</span><br><span class="line">u.getUser()</span><br><span class="line">u.setUser(<span class="string">&#x27;暴走の石尼玛&#x27;</span>)</span><br><span class="line">u.getUser()</span><br><span class="line"><span class="keyword">var</span> u1 = create(<span class="string">&#x27;浅墨初白&#x27;</span>);</span><br><span class="line">u1.getUser()</span><br></pre></td></tr></table></figure><p>一个面试题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">n, o</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(o);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;fun&quot;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">m</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> fun(m, n)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = fun(<span class="number">0</span>); <span class="comment">//undefined</span></span><br><span class="line">a.fun(<span class="number">1</span>) <span class="comment">//0</span></span><br><span class="line">a.fun(<span class="number">2</span>) <span class="comment">//0</span></span><br><span class="line">a.fun(<span class="number">3</span>) <span class="comment">//0</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    var a = fun(n, o)--&gt; fun(0) --&gt; n = 0 o = undefined</span></span><br><span class="line"><span class="comment">    a = &#123;fun: function(m)&#123;  &#125;&#125;</span></span><br><span class="line"><span class="comment">        a.fun(1)</span></span><br><span class="line"><span class="comment">            m = 1 fun(m, n)  m = 1  n = 0  fun(1, 0) --&gt; fun(n, o) n = 1 o = 0 log(o) --&gt; 0</span></span><br><span class="line"><span class="comment">        a.fun(2)</span></span><br><span class="line"><span class="comment">            m = 2 fun(m, n) m = 2 n = 0 fun(2, 0) --&gt; fun(n, o) n = 2 o = 0 log(o) --&gt; 0</span></span><br><span class="line"><span class="comment">        a.fun(3)</span></span><br><span class="line"><span class="comment">            m = 3 fun(m, n) m = 3 n = 0 fun(3, 0) --&gt; fun(n, o) n = 3 o = 0 log(o) --&gt; 0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>输出结果和执行顺序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i, <span class="keyword">new</span> <span class="built_in">Date</span>(), <span class="keyword">new</span> <span class="built_in">Date</span>().getTime());</span><br><span class="line">    &#125;, <span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br></pre></td></tr></table></figure><h2 id="代码分类"><a href="#代码分类" class="headerlink" title="代码分类"></a>代码分类</h2><p>同步: 当前代码执行的时候 后续的代码等着 alert for<br>异步: 当前代码执行的时候 后续代码不等待执行完成 就可以直接执行 定时器</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第十二天</title>
      <link href="2021/09/29/day12%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/29/day12%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第十二天学习了事件绑定方法，键盘事件，滚轮事件等等。</p><span id="more"></span><h1 id="day12"><a href="#day12" class="headerlink" title="day12"></a>day12</h1><h2 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h4 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h4><p>事件绑定：利用特定的方法可以实现给一个元素的同一个事件添加多个事件处理函数</p><p>标准: 元素.addEventListener(事件类型, 事件处理函数, [是否捕获])</p><p>  事件类型: 不加on</p><p>  事件处理函数: 函数名 函数</p><p>  是否捕获: 默认false冒泡 true: 捕获</p><p>ie: 对象不支持“addEventListener”属性或方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(div.addEventListener); <span class="comment">// ie: undefined  标准: 函数</span></span><br><span class="line"><span class="comment">// div.addEventListener(&#x27;click&#x27;, a, false);</span></span><br><span class="line"><span class="comment">// div.addEventListener(&#x27;click&#x27;, function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(&#x27;这是第二个事件绑定的函数&#x27;);</span></span><br><span class="line"><span class="comment">//     console.log(this);</span></span><br><span class="line"><span class="comment">// &#125;, false);</span></span><br></pre></td></tr></table></figure><h4 id="ie"><a href="#ie" class="headerlink" title="ie"></a>ie</h4><p>ie: 元素.attachEvent(on+事件类型, 事件处理函数)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(div.attachEvent); <span class="comment">// ie: 函数  标准: undefined</span></span><br><span class="line">div.attachEvent(<span class="string">&#x27;onclick&#x27;</span>, a);</span><br><span class="line">div.attachEvent(<span class="string">&#x27;onclick&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;这是添加的第二个&#x27;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="ie和标准事件机制的区别"><a href="#ie和标准事件机制的区别" class="headerlink" title="ie和标准事件机制的区别"></a>ie和标准事件机制的区别</h3><p>\1. 是否加on: ie: 加on 标准: 不加</p><p>\2. 是否捕获: ie: 没有捕获 标准: 有捕获</p><p>\3. 执行顺序: ie: 倒叙执行 标准: 顺序执行</p><p>\4. this的指向: ie: window 标准: 触发源</p><h3 id="兼容"><a href="#兼容" class="headerlink" title="兼容"></a>兼容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (div.addEventListener) &#123;</span><br><span class="line">    <span class="comment">// 标准</span></span><br><span class="line">    div.addEventListener(<span class="string">&#x27;click&#x27;</span>, a, <span class="literal">false</span>);</span><br><span class="line">    div.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;这是第二个事件绑定的函数&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// ie</span></span><br><span class="line">    div.attachEvent(<span class="string">&#x27;onclick&#x27;</span>, a);</span><br><span class="line">    div.attachEvent(<span class="string">&#x27;onclick&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;这是添加的第二个&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params">ele, type, fn</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ele: 元素</span></span><br><span class="line">    <span class="comment">// type: 事件类型</span></span><br><span class="line">    <span class="keyword">if</span> (ele.addEventListener) &#123;</span><br><span class="line">        <span class="comment">// 标准</span></span><br><span class="line">        ele.addEventListener(type, fn, <span class="literal">false</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// ie</span></span><br><span class="line">        ele.attachEvent(<span class="string">&#x27;on&#x27;</span> + type, fn);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事件解绑-事件取消"><a href="#事件解绑-事件取消" class="headerlink" title="事件解绑/事件取消"></a>事件解绑/事件取消</h2><p>元素. 事件 元素. 事件 = null</p><p>addEventListener 元素.removeEventListener(事件类型, 函数名, [是否捕获])</p><p>attachEvent   元素.detachEvent(on+事件类型, 函数名)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">123</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div.onclick = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">111</span>);</span><br><span class="line">&#125;</span><br><span class="line">bind(div, <span class="string">&#x27;click&#x27;</span>, a);</span><br><span class="line"><span class="built_in">console</span>.log(div.removeEventListener); <span class="comment">// ie: undefined 标准: 函数</span></span><br><span class="line"><span class="built_in">console</span>.log(div.detachEvent); <span class="comment">// ie: 函数  标准: undefined </span></span><br><span class="line"><span class="comment">// div.removeEventListener(&#x27;click&#x27;, a, false);</span></span><br><span class="line"><span class="comment">// div.detachEvent(&#x27;onclick&#x27;, a);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if(div.removeEventListener)&#123;</span></span><br><span class="line"><span class="comment">//     // 标准</span></span><br><span class="line"><span class="comment">//     div.removeEventListener(&#x27;click&#x27;, a, false);</span></span><br><span class="line"><span class="comment">// &#125; else &#123;</span></span><br><span class="line"><span class="comment">//     // ie</span></span><br><span class="line"><span class="comment">//     div.detachEvent(&#x27;onclick&#x27;, a);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><p>封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">unbind(div, <span class="string">&#x27;click&#x27;</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unbind</span>(<span class="params">ele, type, fn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ele.removeEventListener) &#123;</span><br><span class="line">        <span class="comment">// 标准</span></span><br><span class="line">        ele.removeEventListener(type, fn, <span class="literal">false</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// ie</span></span><br><span class="line">        ele.detachEvent(<span class="string">&#x27;on&#x27;</span> + type, fn);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h2><p>事件流: 当事件发生的时候, 事件在父子节点之间固定的传递顺序。</p><p>  捕获型事件(标准) 冒泡型事件</p><p>  捕获阶段: 当事件发生的时候, 事件从window开始往子元素传递</p><p>  确定目标: 确定鼠标的触发源</p><p>  冒泡阶段: 触发源接收到事件并且开始处理. 处理完成后, 会将事件从当前往父节点传递, 一直到window</p><p>所有事件经过的节点, 都会接收并且去触发这个事件</p><h2 id="阻止冒泡"><a href="#阻止冒泡" class="headerlink" title="阻止冒泡"></a>阻止冒泡</h2><p>标准: 事件对象.stopPropagation()</p><p>ie: 事件对象.cancelBubble = true</p><p>兼容: 如果一个方法一个属性 用方法是否存在来做判断</p><p>  ev.stopPropagation ? ev.stopPropagation() : ev.cancelBubble = true</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取元素</span></span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(btn, div);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">evs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ev = <span class="built_in">window</span>.event || evs;</span><br><span class="line">    <span class="comment">// 阻止冒泡</span></span><br><span class="line">    <span class="comment">// console.log(ev.stopPropagation); // ie: undefined 标准: 函数</span></span><br><span class="line">    <span class="comment">// ev.stopPropagation();</span></span><br><span class="line">    <span class="comment">// ev.cancelBubble = true;</span></span><br><span class="line">    ev.stopPropagation ? ev.stopPropagation() : ev.cancelBubble = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    div.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">    div.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="取消默认行为"><a href="#取消默认行为" class="headerlink" title="取消默认行为"></a>取消默认行为</h2><p>默认行为:</p><p>  a标签的跳转</p><p>  右键菜单</p><p>  按下拖拽的时候选中文字</p><p>  图片拖拽保存</p><p>取消默认行为：</p><p>  元素. 事件 return false</p><p>  标准: addEventListener ev.preventDefault()</p><p>  ie: attachEvent  ev.returnValue = false<br>兼容:</p><p>  ev.preventDefault ? ev.preventDefault() : ev.returnValue = false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line"><span class="comment">// a.onclick = function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(&#x27;点击&#x27;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     // 取消默认行为</span></span><br><span class="line"><span class="comment">//     return false;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">bind(a, <span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">evs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ev = <span class="built_in">window</span>.event || evs;</span><br><span class="line">    <span class="comment">// ev.preventDefault();</span></span><br><span class="line">    <span class="comment">// ev.returnValue = false;</span></span><br><span class="line">    ev.preventDefault ? ev.preventDefault() : ev.returnValue = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;点击了&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><p>事件委托(事件代理): 将子元素要做的事情交给父元素, 通过target或srcElement找到指定的触发源, 将后续代码交给触发源来处理</p><p>优点:</p><p>\1. 如果现在元素数量过多 执行速度较快</p><p>\2. 如果元素发生在未来, 后面的元素也有事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ul.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">evs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ev = <span class="built_in">window</span>.event || evs;</span><br><span class="line">    <span class="built_in">console</span>.log(ev.target || ev.srcElement);</span><br><span class="line">    <span class="keyword">var</span> tar = ev.target || ev.srcElement;</span><br><span class="line">    <span class="comment">// 判断触发源是不是li 如果是li 输出内容</span></span><br><span class="line">    <span class="keyword">if</span> (tar.nodeName == <span class="string">&#x27;LI&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(tar.innerHTML);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> li1 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">li1.innerHTML = <span class="string">&#x27;2222&#x27;</span>;</span><br><span class="line">ul.appendChild(li1);</span><br></pre></td></tr></table></figure><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><p>document\表单元素</p><p>onkeyup 抬起</p><p>obkeydown 按下 键盘上任何一个键都可以触发 不区分大小写, 返回大写的编码</p><p>​      特殊键shift + 1 —&gt; shift + 49 –&gt; ! + 49</p><p>obkeypress 按下 键盘上字符可以触发 区分大小分, 返回大写和小写字母的编码</p><p>​      特殊键shift + 1 —&gt; ! 33</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">evs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ev = <span class="built_in">window</span>.event || evs;</span><br><span class="line">    <span class="comment">// console.log(ev); // KeyboardEvent</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.key); <span class="comment">// 标准: 具体的字符 ie: undefined</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.keyCode); <span class="comment">// ASCII码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// document.onkeypress = function (evs) &#123;</span></span><br><span class="line"><span class="comment">//     var ev = window.event || evs;</span></span><br><span class="line"><span class="comment">//     // console.log(ev); // KeyboardEvent</span></span><br><span class="line"><span class="comment">//     console.log(ev.key); // 标准: 具体的字符 ie: undefined</span></span><br><span class="line"><span class="comment">//     console.log(ev.keyCode); // ASCII码</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.onkeyup = <span class="function"><span class="keyword">function</span>(<span class="params">evs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ev = <span class="built_in">window</span>.event || evs;</span><br><span class="line">    <span class="built_in">console</span>.log(ev.keyCode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="滚轮事件"><a href="#滚轮事件" class="headerlink" title="滚轮事件"></a>滚轮事件</h2><p>chrome/ie: onmousewheel</p><p>  wheelDelta: 120或150的倍数</p><p>​    &gt; 0 向上</p><p>​    &lt; 0 向下</p><p>ff: 事件必须通过事件监听的方式 DOMMouseScroll</p><p>  detail: 3和3的倍数</p><p>​    &gt; 0 向下</p><p>​    &lt; 0 向上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mouseScroll</span>(<span class="params">ele, upFn, downFn</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ele: 元素</span></span><br><span class="line">    ele.onmousewheel = scroll;</span><br><span class="line">    <span class="keyword">if</span> (ele.addEventListener) &#123;</span><br><span class="line">        ele.addEventListener(<span class="string">&#x27;DOMMouseScroll&#x27;</span>, scroll);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 滚动滚轮触发的事件</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">scroll</span>(<span class="params">evs</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ev = <span class="built_in">window</span>.event || evs;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ev.wheelDelta) &#123;</span><br><span class="line">            <span class="comment">// chrome ie</span></span><br><span class="line">            <span class="keyword">var</span> tag = ev.wheelDelta &gt; <span class="number">0</span> ? <span class="string">&#x27;上&#x27;</span> : <span class="string">&#x27;下&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// ff</span></span><br><span class="line">            <span class="keyword">var</span> tag = ev.detail &gt; <span class="number">0</span> ? <span class="string">&#x27;下&#x27;</span> : <span class="string">&#x27;上&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据滚轮向上向下执行不同的代码</span></span><br><span class="line">        <span class="keyword">if</span> (tag == <span class="string">&#x27;上&#x27;</span>) &#123;</span><br><span class="line">            upFn();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            downFn();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第十一天</title>
      <link href="2021/09/28/day11%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/28/day11%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第十一天学习了操作BOM对象，懒加载，事件对象等等。</p><span id="more"></span><h1 id="day11"><a href="#day11" class="headerlink" title="day11"></a>day11</h1><h2 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h2><p>BOM: Browser Object Model 浏览器对象模型<br>BOM的核心是window 可以直接使用变量名或者函数名就能出现效果的。所属对象都是window</p><h3 id="对话框"><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h3><p>警告框 alert()<br>带有确定取消按钮的警告框 confirm()<br>带有输入框的对话框 prompt()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 警告框: alert()</span></span><br><span class="line"><span class="comment">// alert(&#x27;是否已经了解清除风险&#x27;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 带有确定取消按钮的警告框: confirm(&#x27;提示内容&#x27;)</span></span><br><span class="line"><span class="comment">// 接收返回值: 取消: false  确定: true</span></span><br><span class="line"><span class="comment">// var res = confirm(&#x27;是否已经了解风险&#x27;);</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 带有输入框的对话框: prompt(&#x27;提示内容&#x27;, &#x27;默认值&#x27;)</span></span><br><span class="line"><span class="comment">// 接收返回值: 取消: null  确定: 输入框的内容</span></span><br><span class="line"><span class="comment">// var res = prompt(&#x27;请输入要购买的金额&#x27;, &#x27;10000&#x27;);</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br></pre></td></tr></table></figure><h3 id="open与close"><a href="#open与close" class="headerlink" title="open与close"></a>open与close</h3><p>如果在标签里使用，window不能省略</p><h4 id="open"><a href="#open" class="headerlink" title="open"></a>open</h4><p>open: 打开<br>​语法: open(跳转的网址, target, 描述词, 是否替换当前页面在历史记录中的位置)<br>​target: 打开方式 _blank: 新标签页；_self: 当前<br>​描述词: 当前窗口宽高 属性名=属性值, 属性名=属性值  只在打开方式是_blank<br>​返回新页面的window</p><h4 id="close"><a href="#close" class="headerlink" title="close"></a>close</h4><p>close: 关闭<br>window对象.close()<br>js中关闭自己: close()</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>打开百度<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;window.open(&#x27;https:\/\/www.bilibili.com&#x27;,&#x27;_blank&#x27;,&#x27;width=300px,height=300px&#x27;)&quot;</span>&gt;</span>打开哔哩哔哩<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>关闭我自己<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>关闭百度<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> btns = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;button&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_win = <span class="literal">null</span></span></span><br><span class="line"><span class="javascript">        btns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            new_win = open(<span class="string">&#x27;https://www.baidu.com&#x27;</span>, <span class="string">&#x27;_blank&#x27;</span>, <span class="string">&#x27;width=400px,height=400px&#x27;</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        btns[<span class="number">2</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            close()</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        btns[<span class="number">3</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            new_win.close()</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="location"><a href="#location" class="headerlink" title="location"></a>location</h3><p>location是BOM中最有用的对象之一. 既是BOM直接对象, 也是window下的对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(location)</span><br><span class="line"><span class="built_in">console</span>.log(location.protocol) <span class="comment">//协议</span></span><br><span class="line"><span class="built_in">console</span>.log(location.hostname) <span class="comment">//服务器名</span></span><br><span class="line"><span class="built_in">console</span>.log(location.port); <span class="comment">//端口</span></span><br><span class="line"><span class="built_in">console</span>.log(location.host); <span class="comment">//服务器+端口</span></span><br><span class="line"><span class="built_in">console</span>.log(location.pathname); <span class="comment">//文件路径</span></span><br><span class="line"><span class="built_in">console</span>.log(location.search); <span class="comment">//搜索内容</span></span><br><span class="line"><span class="built_in">console</span>.log(location.hash); <span class="comment">//哈希值 #后边的内容</span></span><br><span class="line"><span class="built_in">console</span>.log(location.href); <span class="comment">//完整地址</span></span><br></pre></td></tr></table></figure><h3 id="history"><a href="#history" class="headerlink" title="history"></a>history</h3><p>history: 历史记录<br>history.go(数字) 正数: 前进几个页面 负数: 后退几个页面 0: 刷新<br>history.back() 回退到上一个页面<br>history.forward() 前进到下一个页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(history);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 前进到02页面</span></span><br><span class="line">    <span class="comment">// history.forward();</span></span><br><span class="line">    <span class="comment">// history.go(2);</span></span><br><span class="line">    <span class="comment">// history.go(0);</span></span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><h3 id="BOM事件"><a href="#BOM事件" class="headerlink" title="BOM事件"></a>BOM事件</h3><h4 id="onload"><a href="#onload" class="headerlink" title="onload"></a>onload</h4><p>当script标签写在body、页面结构之前的时候 获取元素拿不到正确的元素 去到的是null<br>原因: 由于代码是从上到下的顺序去执行的 当执行到script的时候页面中还没有元素 所以取不到<br>解决: 让js代码在页面结构之后或者使用 window.onload 事件: 等待页面和其中的资源(图片、视频…)都加载完成后 在执行其中的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(div);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="onscroll"><a href="#onscroll" class="headerlink" title="onscroll"></a>onscroll</h4><p>滚动事件<br>window.onscroll 事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//滚动事件</span></span><br><span class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;你别巴拉我！&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="onresize"><a href="#onresize" class="headerlink" title="onresize"></a>onresize</h4><p>窗口大小改变事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//窗口大小改变事件</span></span><br><span class="line"><span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;痛痛痛！！&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="元素三大宽高"><a href="#元素三大宽高" class="headerlink" title="元素三大宽高"></a>元素三大宽高</h3><h4 id="client"><a href="#client" class="headerlink" title="client"></a>client</h4><p>元素可视宽高 client系列:<br>clientWidth/clientHeight: 元素的可视宽高 内容 + padding<br>clientLeft/clientTop: 左/上边框的宽度<br>屏幕的可视区域的宽高:document.documentElement.clientWidth/clientHeight</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/* client系列</span></span><br><span class="line"><span class="comment">    clientWidth/clientHeight:元素的可视宽高</span></span><br><span class="line"><span class="comment">    clientLeft/clientTop 左/上边框的宽度</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(div.clientHeight, div.clientWidth);</span><br><span class="line"><span class="built_in">console</span>.log(div.clientLeft, div.clientTop)</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕的可视化宽高</span></span><br><span class="line"><span class="comment">//document.documentElement.clientWidth/clientHeight4</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.documentElement.clientWidth, <span class="built_in">document</span>.documentElement.clientHeight);</span><br></pre></td></tr></table></figure><h4 id="offset"><a href="#offset" class="headerlink" title="offset"></a>offset</h4><p>offset: 元素的占位宽高<br>offsetWidth/offsetHeight: 元素的占位宽高 内容 + padding + border<br>offsetLeft/offasetTop: 元素距离具有定位属性的父元素的左侧/顶部的距离 如果没有定位父元素 就是距离body的距离</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    offset: 元素的占位宽高</span></span><br><span class="line"><span class="comment">        offsetWidth/offsetHeight: 元素的占位宽高 内容 + padding + border</span></span><br><span class="line"><span class="comment">        offsetLeft/offasetTop: 元素距离具有定位属性的父元素的左侧/顶部的距离 如果没有定位父元素 就是距离body的距离</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(div.offsetHeight, div.offsetWidth);</span><br><span class="line"><span class="built_in">console</span>.log(div.offsetLeft, div.offsetTop)</span><br></pre></td></tr></table></figure><h4 id="scroll"><a href="#scroll" class="headerlink" title="scroll"></a>scroll</h4><p>scroll: 滚动距离<br>scrollHeight/scrollWidth: 元素的实际宽高<br>scrollTop/scrollLeft: 超出当前页面/元素的距离  滚动卷去的距离<br>获取页面\窗口的滚动距离:<br>document.documentElement.scrollTop<br>document.documentElement.scrollLeft</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    scroll: 滚动距离</span></span><br><span class="line"><span class="comment">        scrollHeight/scrollWidth: 元素的实际宽高</span></span><br><span class="line"><span class="comment">        scrollTop/scrollLeft: 超出当前页面/元素的距离  滚动卷去的距离</span></span><br><span class="line"><span class="comment">    获取页面\窗口的滚动距离: </span></span><br><span class="line"><span class="comment">        document.documentElement.scrollTop</span></span><br><span class="line"><span class="comment">        document.documentElement.scrollLeft</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(div.scrollWidth, div.scrollHeight);</span><br><span class="line"><span class="comment">// 通过滚动事件</span></span><br><span class="line">div.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(div.scrollLeft, div.scrollTop);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取页面滚动的距离:</span></span><br><span class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.documentElement.scrollTop, <span class="built_in">document</span>.documentElement.scrollLeft);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>scrollTop/scrollLeft可以被赋值 其他的只能获取不能设置</p><h2 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h2><p>以下为代码样例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有的img元素</span></span><br><span class="line"><span class="keyword">var</span> imgs = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line"><span class="comment">//先调用函数，使得打开时，在屏幕范围内的图片可以先加载出来</span></span><br><span class="line">loadimg()</span><br><span class="line"><span class="comment">//添加滚动事件，当屏幕滚动的时候，判断是否符合要求</span></span><br><span class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    loadimg()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加窗口大小改变事件，窗口大小改变时也会使图片出现在可视范围内</span></span><br><span class="line"><span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    loadimg()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadimg</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//遍历每一个图片</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> imgs) &#123;</span><br><span class="line">        <span class="comment">//判断图片是否出现在课时范围内</span></span><br><span class="line">        <span class="comment">//判断方法为，屏幕可视长度+滚动长度是否大于图片到浏览器顶部的距离</span></span><br><span class="line">        <span class="keyword">if</span> (i.offsetTop &lt; <span class="built_in">document</span>.documentElement.clientHeight + <span class="built_in">document</span>.documentElement.scrollTop - <span class="number">50</span>) &#123;</span><br><span class="line">            <span class="comment">//是的话就讲自定义属性里的地址给到src里边</span></span><br><span class="line">            i.src = i.getAttribute(<span class="string">&#x27;tags&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><p>当事件发生的时候, 浏览器将相关当前事件的信息都存在一个对象中, 这个对象就是事件对象<br>普通: event window.event<br>低版本ff: 事件处理函数的第一个形参的位置<br>事件对象兼容: var ev = window.event || evs</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">evs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ev = <span class="built_in">window</span>.event || evs</span><br><span class="line">    <span class="built_in">console</span>.log(ev)</span><br><span class="line">    <span class="built_in">console</span>.log(ev.type)</span><br><span class="line">    <span class="built_in">console</span>.log(ev.target || ev.srcElement)</span><br><span class="line">    <span class="built_in">console</span>.log(ev.clientX, ev.clientY); <span class="comment">// 鼠标距离屏幕可视区域的左上角的距离</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.screenX, ev.screenY); <span class="comment">// 鼠标距离屏幕的左上角的距离</span></span><br><span class="line">    <span class="built_in">console</span>.log(ev.pageX, ev.pageY); <span class="comment">// 鼠标距离页面左上角的距离</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第十天</title>
      <link href="2021/09/27/day10%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/27/day10%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第十天学习了操作DOM树。</p><span id="more"></span><h1 id="day10"><a href="#day10" class="headerlink" title="day10"></a>day10</h1><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><p>DOM树  浏览器在渲染页面的时候 会先形成树状结构 就叫做DOM树</p><p>DOM由节点组成的</p><h3 id="获取节点"><a href="#获取节点" class="headerlink" title="获取节点"></a>获取节点</h3><p>获取节点:  css选择器: css中选择器怎么写 这里就怎么写 id class tag 父子 层级 交叉…</p><p>ie8+  静态</p><p>获取符合选择器的第一个元素: document/父元素.querySelector(‘css选择器’)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(div); <span class="comment">// 直接获取到第一个div</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(ul);</span><br></pre></td></tr></table></figure><p>获取所有符合选择器的元素: 节点的集合: document/父元素.querySelectorAll(‘css选择器’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lis = ul.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(lis); <span class="comment">// NodeList 节点列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> boxa = ul.querySelector(<span class="string">&#x27;.box.a&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(boxa);</span><br></pre></td></tr></table></figure><h3 id="获取子节点"><a href="#获取子节点" class="headerlink" title="获取子节点"></a>获取子节点</h3><p>父元素.children 标准: 标签节点  常用</p><p>父元素.childNodes 标准: 标签节点+文本节点+注释+…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取ul</span></span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(ul);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    获取子节点:</span></span><br><span class="line"><span class="comment">        父元素.children 标准: 标签节点  常用</span></span><br><span class="line"><span class="comment">        父元素.childNodes 标准: 标签节点+文本节点+注释+...</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(ul.children);</span><br><span class="line"><span class="built_in">console</span>.log(ul.childNodes);</span><br></pre></td></tr></table></figure><h3 id="节点属性"><a href="#节点属性" class="headerlink" title="节点属性"></a>节点属性</h3><p>\1. 节点名称: 节点.nodeName  标签名大写</p><p>\2. 节点类型: 节点.nodeType 1-12  1–标签 2—属性 3—文本  8–注释 9–document</p><p>\3. 节点内容: 节点.nodeValue  只有文本节点(text)才有内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cls = ul.childNodes;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cls.length; i++) &#123;</span><br><span class="line">    <span class="comment">// console.log(cls[i], cls[i].nodeName, cls[i].nodeType, cls[i].nodeValue);</span></span><br><span class="line">    <span class="comment">// 获取标签的内容</span></span><br><span class="line">    <span class="keyword">if</span> (cls[i].nodeType == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(cls[i].childNodes[<span class="number">0</span>].nodeValue);</span><br><span class="line">        <span class="built_in">console</span>.log(cls[i].innerHTML);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取父节点"><a href="#获取父节点" class="headerlink" title="获取父节点"></a>获取父节点</h3><p>直接父节点: 节点.parentNode</p><p>定位父节点: 节点.offsetParent</p><p>​    如果没有定位父节点 获取到的是body</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取box</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(box);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    直接父节点: 节点.parentNode</span></span><br><span class="line"><span class="comment">    定位父节点: 节点.offsetParent</span></span><br><span class="line"><span class="comment">        如果没有定位父节点 获取到的是body</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(box.parentNode);</span><br><span class="line"><span class="built_in">console</span>.log(box.offsetParent);</span><br></pre></td></tr></table></figure><h3 id="查找兄弟节点"><a href="#查找兄弟节点" class="headerlink" title="查找兄弟节点"></a>查找兄弟节点</h3><h4 id="获取上一个兄弟节点"><a href="#获取上一个兄弟节点" class="headerlink" title="获取上一个兄弟节点"></a>获取上一个兄弟节点</h4><p>标准: 节点.previousElementSibling  </p><p>​    ie: undefined  标准: 专门提供在标准浏览器中获取上一个兄弟节点</p><p>ie: 节点.previousSibling</p><p>​    ie8-: 可以获取到上一个兄弟节点  标准: 换行文本节点</p><p>两个值中二选一的时候可以选择用逻辑或短路 将可能出现undefined 的这一项放在前面</p><p>兼容: 节点.previousElementSibling || 节点.previousSibling</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取box</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(box);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(box.previousElementSibling, box.previousSibling);</span><br><span class="line"><span class="built_in">console</span>.log(box.previousElementSibling || box.previousSibling);</span><br></pre></td></tr></table></figure><h4 id="获取下一个兄弟节点"><a href="#获取下一个兄弟节点" class="headerlink" title="获取下一个兄弟节点"></a>获取下一个兄弟节点</h4><p>标准: 节点.nextElementSibling  </p><p>​    ie: undefined  标准: 专门提供在标准浏览器中获取上一个兄弟节点</p><p>ie: 节点.nextSibling</p><p>​    ie8-: 可以获取到上一个兄弟节点  标准: 换行文本节点</p><p>两个值中二选一的时候可以选择用逻辑或短路 将可能出现undefined 的这一项放在前面</p><p>兼容: 节点.nextElementSibling || 节点.nextSibling</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(box.nextElementSibling, box.nextSibling);</span><br><span class="line"><span class="built_in">console</span>.log(box.nextElementSibling || box.nextSibling);</span><br></pre></td></tr></table></figure><h4 id="获取首个子节点"><a href="#获取首个子节点" class="headerlink" title="获取首个子节点"></a>获取首个子节点</h4><p>​    ie: firstChild</p><p>​    标准: firstElementChild</p><p>兼容: 节点.firstElementChild || 节点.firstChild</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取父节点</span></span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(ul);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    获取首个子节点:</span></span><br><span class="line"><span class="comment">        ie: firstChild</span></span><br><span class="line"><span class="comment">        标准: firstElementChild</span></span><br><span class="line"><span class="comment">    兼容: 节点.firstElementChild || 节点.firstChild</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(ul.firstChild, ul.firstElementChild);</span><br><span class="line"><span class="built_in">console</span>.log(ul.firstElementChild || ul.firstChild);</span><br></pre></td></tr></table></figure><h4 id="获取末位子节点"><a href="#获取末位子节点" class="headerlink" title="获取末位子节点"></a>获取末位子节点</h4><p>​    ie: lastChild</p><p>​    标准: lastElementChild</p><p>兼容: 节点.lastElementChild || 节点.lastChild</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(ul.lastElementChild || ul.lastChild);</span><br></pre></td></tr></table></figure><h3 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h3><p>1.1 创建标签节点: var 变量 = document.createElement(‘标签名’)</p><p>1.2 创建文本节点: var 变量 = document.createTextNode(‘内容’)</p><p>1.3 将文本节点添加到标签节点中: 父节点.appendChild(子节点)</p><p>创建节点为了解决innerHTML重新赋值会覆盖原来所有元素的问题</p><p>为了简化过程, 常用innerHTML代替 1.2 1.3</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 创建节点:</span></span><br><span class="line"><span class="comment">// 1.1 创建标签节点: var 变量 = document.createElement(&#x27;标签名&#x27;);</span></span><br><span class="line"><span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(li);</span><br><span class="line"></span><br><span class="line"><span class="comment">// // 1.2 创建文本节点: var 变量 = document.createTextNode(&#x27;内容&#x27;);</span></span><br><span class="line"><span class="comment">// var txt = document.createTextNode(&#x27;这是新的li&#x27;);</span></span><br><span class="line"><span class="comment">// console.log(txt);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// // 1.3 将文本节点添加到标签节点中: 父节点.appendChild(子节点);</span></span><br><span class="line"><span class="comment">// li.appendChild(txt);</span></span><br><span class="line"><span class="comment">// console.log(li);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建节点为了解决innerHTML重新赋值会覆盖原来所有元素的问题</span></span><br><span class="line"><span class="comment">// 为了简化过程, 常用innerHTML代替 1.2 1.3</span></span><br><span class="line"></span><br><span class="line">li.innerHTML = <span class="string">&#x27;这是新的li&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(li);</span><br></pre></td></tr></table></figure><h3 id="追加节点"><a href="#追加节点" class="headerlink" title="追加节点"></a>追加节点</h3><h4 id="追加到父元素的末位"><a href="#追加到父元素的末位" class="headerlink" title="追加到父元素的末位"></a>追加到父元素的末位</h4><p>父节点.appendChild(子节点)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(ul);</span><br><span class="line">ul.appendChild(li);</span><br></pre></td></tr></table></figure><h4 id="追加到某个节点之前"><a href="#追加到某个节点之前" class="headerlink" title="追加到某个节点之前"></a>追加到某个节点之前</h4><p>父节点.insertBefore(新节点, 参考节点)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> li1 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">li1.innerHTML = <span class="string">&#x27;新的li1&#x27;</span>;</span><br><span class="line">ul.insertBefore(li1, ul.children[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> li2 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">li2.innerHTML = <span class="string">&#x27;新的li2&#x27;</span>;</span><br><span class="line">ul.insertBefore(li2, ul.children[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><ol><li>删除自己: 节点.remove(); ie8+</li><li>删除子节点: 父节点.removeChild(子节点)   会把被删除的元素返回回来</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 删除自己: 节点.remove(); ie8+</span></span><br><span class="line"><span class="comment">// 点击div  删除整个ul</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">div.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ul.remove();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2. 删除子节点: 父节点.removeChild(子节点)   会把被删除的元素返回回来</span></span><br><span class="line"><span class="comment">// 点击btn 删除整行li</span></span><br><span class="line"><span class="keyword">var</span> btns = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(btns);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class="line">    btns[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 通过按钮 找到整个 li  li是btn的直接父元素</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.parentNode);</span><br><span class="line">        <span class="keyword">var</span> a = ul.removeChild(<span class="built_in">this</span>.parentNode);</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="克隆节点"><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h3><p>节点.cloneNode(布尔)</p><p>true: 克隆节点中的内容</p><p>false/不传: 不克隆节点中的内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nli = <span class="built_in">this</span>.cloneNode(<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">console</span>.log(nli);</span><br><span class="line"><span class="comment">// 追加到ul中</span></span><br><span class="line">ul.appendChild(nli);</span><br></pre></td></tr></table></figure><h3 id="替换节点"><a href="#替换节点" class="headerlink" title="替换节点"></a>替换节点</h3><p>父节点.replaceChild(新节点, 参考节点)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(box);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">li.innerHTML = <span class="string">&#x27;新内容&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">ul.replaceChild(li, box);</span><br></pre></td></tr></table></figure><h3 id="操作属性"><a href="#操作属性" class="headerlink" title="操作属性"></a>操作属性</h3><p>\1. 获取: var 变量 = 元素. 属性名; var 变量 = 元素[‘属性名’]</p><p>\2. 设置: 元素. 属性名 = 值; 元素[‘属性名’] = 值; 设置布尔值 读取到的就是布尔</p><p>[]里直接写属性名需要加引号 如果是变量不加引号</p><p>问题: 获取属性: 不能获取直接写在标签上的自定义属性  设置属性: 通过js设置的自定义属性在标签上看不到, 可以正常获取和设置操作所有属性, class直接使用</p><p>\3. 获取: 节点.getAttribute(‘属性名’)</p><p>\4. 设置: 节点.setAttribute(‘属性名’, ‘属性值’)</p><p>​    所有的值都是字符串 设置后面的属性会覆盖前面</p><p>\5. 移除:</p><p>​    节点. 属性名 = null/‘’</p><p>​    节点.removeAttribute(‘属性名’)</p><p>一般操作属性都可以直接使用以上方式, 如果只设置属性名就起作用的属性(checked\selected\loop\muted..)用点和[]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    操作属性:</span></span><br><span class="line"><span class="comment">        1. 获取: var 变量 = 元素.属性名;  var 变量 = 元素[&#x27;属性名&#x27;];</span></span><br><span class="line"><span class="comment">        2. 设置: 元素.属性名 = 值; 元素[&#x27;属性名&#x27;] = 值;  设置布尔值 读取到的就是布尔</span></span><br><span class="line"><span class="comment">        []里直接写属性名需要加引号 如果是变量不加引号</span></span><br><span class="line"><span class="comment">        问题: 获取属性: 不能获取直接写在标签上的自定义属性  设置属性: 通过js设置的自定义属性在标签上看不到, 可以正常获取和设置</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(div.id);</span><br><span class="line"><span class="built_in">console</span>.log(div.className);</span><br><span class="line"><span class="built_in">console</span>.log(div.tag); <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(div[<span class="string">&#x27;tag&#x27;</span>]); <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line">div.ttt = <span class="string">&#x27;1234&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    操作所有属性, class直接使用</span></span><br><span class="line"><span class="comment">    3. 获取: 节点.getAttribute(&#x27;属性名&#x27;);</span></span><br><span class="line"><span class="comment">    4. 设置: 节点.setAttribute(&#x27;属性名&#x27;, &#x27;属性值&#x27;);</span></span><br><span class="line"><span class="comment">        所有的值都是字符串 设置后面的属性会覆盖前面</span></span><br><span class="line"><span class="comment">    5. 移除: </span></span><br><span class="line"><span class="comment">        节点.属性名 = null/&#x27;&#x27;;</span></span><br><span class="line"><span class="comment">        节点.removeAttribute(&#x27;属性名&#x27;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    一般操作属性都可以直接使用以上方式, 如果只设置属性名就起作用的属性(checked\selected\loop\muted\..)用点和[]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(div.getAttribute(<span class="string">&#x27;class&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(div.getAttribute(<span class="string">&#x27;tag&#x27;</span>)); <span class="comment">// abc123</span></span><br><span class="line">div.setAttribute(<span class="string">&#x27;txt&#x27;</span>, <span class="string">&#x27;123123&#x27;</span>);</span><br><span class="line">div.setAttribute(<span class="string">&#x27;tnt&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">div.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;wrap a b&#x27;</span>);</span><br><span class="line"></span><br><span class="line">div.id = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">div.removeAttribute(<span class="string">&#x27;id&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="快速获取表格"><a href="#快速获取表格" class="headerlink" title="快速获取表格"></a>快速获取表格</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 表格</span></span><br><span class="line"><span class="keyword">var</span> table = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;table&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(table);</span><br><span class="line"><span class="comment">// 表格是由行组成, 行是由单元格, 表格不能直接获取单元格</span></span><br><span class="line"><span class="built_in">console</span>.log(table.tHead); <span class="comment">// 表格头</span></span><br><span class="line"><span class="built_in">console</span>.log(table.tFoot); <span class="comment">// 表格脚</span></span><br><span class="line"><span class="built_in">console</span>.log(table.tBodies); <span class="comment">// 表格体 --&gt; 集合</span></span><br><span class="line"><span class="built_in">console</span>.log(table.tBodies[<span class="number">0</span>]); <span class="comment">// 第一个表格体</span></span><br><span class="line"><span class="built_in">console</span>.log(table.rows); <span class="comment">// 表格中所有的行 头体脚 集合</span></span><br><span class="line"><span class="built_in">console</span>.log(table.tBodies[<span class="number">0</span>].rows); <span class="comment">// 第一个表格体所有的行</span></span><br><span class="line"><span class="built_in">console</span>.log(table.cells); <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(table.rows[<span class="number">0</span>].cells); <span class="comment">// 获取表格中第一个行的所有的单元格</span></span><br><span class="line"><span class="built_in">console</span>.log(table.tBodies[<span class="number">0</span>].rows[<span class="number">0</span>].cells);</span><br></pre></td></tr></table></figure><h3 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h3><h4 id="form表单的事件"><a href="#form表单的事件" class="headerlink" title="form表单的事件"></a>form表单的事件</h4><p>提交: form元素.onsubmit = 函数;</p><p>重置: form元素.onreset = 函数;</p><p>在函数中默认返回值都是 return true;</p><p>return false: 禁止提交/重置</p><p>如果你不想表单发生重置或者提交的时候 在函数中设置return false;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">form.onsubmit = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;是否提交&#x27;</span>);</span><br><span class="line">    <span class="comment">// return true;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">form.onreset = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;是否重置&#x27;</span>);</span><br><span class="line">    <span class="comment">// return true;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="表单元素事件"><a href="#表单元素事件" class="headerlink" title="表单元素事件"></a>表单元素事件</h4><p>输入框(常见):</p><p>onblur: 失去焦点</p><p>onfocus: 聚集焦点</p><p>onchange: 失去焦点且内容发生改变</p><p>边输入边触发: oninput(标准)/onpropertychange(ie8)</p><p>​    搜索提示\密码等级校验...</p><p>​    不建议单独使用, 一般需要结合防抖和节流来进行使用, 避免事件的频繁触发</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">form.user.onfocus = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.style.background = <span class="string">&#x27;orange&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">form.user.onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.style.background = <span class="string">&#x27;skyblue&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">form.pass.onchange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.style.background = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 事件可以连等</span></span><br><span class="line">form.pass.oninput = form.onpropertychange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.value);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第九天</title>
      <link href="2021/09/26/day9%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/26/day9%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第九天学习了数组的迭代方法以及正则表达式。</p><span id="more"></span><h1 id="day9"><a href="#day9" class="headerlink" title="day9"></a>day9</h1><h2 id="数组的迭代方法"><a href="#数组的迭代方法" class="headerlink" title="数组的迭代方法"></a>数组的迭代方法</h2><h3 id="every"><a href="#every" class="headerlink" title="every"></a>every</h3><p>对为数组的每一个项进行判断。看返回值，如果出现了false，就终止，如果一直是true，就会判断到结束为止。三个参数，v为数组的项，i为项的下标，a为整个数组 返回值为true或者false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;r&#x27;</span>]</span><br><span class="line"><span class="keyword">var</span> res = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">v, i, a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v, i, a);</span><br><span class="line">    <span class="keyword">return</span> v == <span class="string">&#x27;q&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br></pre></td></tr></table></figure><h3 id="some"><a href="#some" class="headerlink" title="some"></a>some</h3><p>为数组的每一个项进行判断。看返回值，如果出现了true，就终止，如果一直是false，就会判断到结束为止。三个参数，v为数组的项，i为项的下标，a为整个数组 返回值为true或者false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res1 = arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">v, i, a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v, i, a)</span><br><span class="line">    <span class="keyword">return</span> v == <span class="string">&#x27;e&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(res1)</span><br></pre></td></tr></table></figure><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><p>对数组进行过滤，返回值为符合条件的值组成的数组，三个参数和上边一样。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res2 = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">v, i, a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v, i, a);</span><br><span class="line">    <span class="keyword">return</span> i &gt; <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(res2);</span><br></pre></td></tr></table></figure><h3 id="map-amp-forEach"><a href="#map-amp-forEach" class="headerlink" title="map&amp;forEach"></a>map&amp;forEach</h3><p>map和forEach都是for循环。前者会将每个函数的返回值组成新的数组返回 造成内存浪费<br>后者没有返回值，纯循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res3 = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">v, i, a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v, i, a);</span><br><span class="line">    <span class="keyword">return</span> v + v</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(res3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> res4 = arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">v, i, a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v, i, a)</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(res4);</span><br></pre></td></tr></table></figure><h2 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h2><p>用规定好的具有特定含义的字符组成的规则字符串，用来实现字符串的检索和替换</p><h3 id="创建正则"><a href="#创建正则" class="headerlink" title="创建正则"></a>创建正则</h3><h4 id="new关键字创建"><a href="#new关键字创建" class="headerlink" title="new关键字创建"></a>new关键字创建</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;web&#x27;</span>, <span class="string">&#x27;ig&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(reg); <span class="comment">// /web/gi</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> reg); <span class="comment">// object</span></span><br></pre></td></tr></table></figure><h4 id="字面量声明"><a href="#字面量声明" class="headerlink" title="字面量声明"></a>字面量声明</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/web/ig</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg1); <span class="comment">// /web/gi</span></span><br></pre></td></tr></table></figure><h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><p>无序<br>i:ignore case 忽略大小写<br>g:global 全局</p><h3 id="检索方法"><a href="#检索方法" class="headerlink" title="检索方法"></a>检索方法</h3><h4 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h4><p>replace(要替换的字符/正则, 新字符/函数)<br>函数的返回值是替换的新字符<br>函数有个形参，是每次匹配到的结果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;big01Big02bIg03biG04BIG05&#x27;</span></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="regexp">/big/ig</span></span><br><span class="line"><span class="comment">// console.log(str.replace(s1,&#x27;stone&#x27;));</span></span><br><span class="line"><span class="built_in">console</span>.log(str.replace(s1, <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;s&#x27;</span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><h4 id="split"><a href="#split" class="headerlink" title="split"></a>split</h4><p>split 字符串.split(分隔符/正则)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;big01Big02bIg03biG04BIG05&#x27;</span></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="regexp">/\d/</span></span><br><span class="line"><span class="built_in">console</span>.log(str.split(s1))</span><br></pre></td></tr></table></figure><h4 id="search"><a href="#search" class="headerlink" title="search"></a>search</h4><p>替换indexOf 用正则查找，返回找到的符合正则的第一个位置上的下标，其他的特性一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;big01Big02bIg03biG04BIG05&#x27;</span></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="regexp">/big/ig</span></span><br><span class="line"><span class="built_in">console</span>.log(str.search(s1))</span><br></pre></td></tr></table></figure><h4 id="match"><a href="#match" class="headerlink" title="match"></a>match</h4><p>字符串.match(正则)<br>返回一个数组<br>单个匹配结果: [‘web’, index: 0, input: ‘web0web1web2web0web1’, groups: undefined]<br>多个匹配结果: [‘0’, ‘1’, ‘2’, ‘0’, ‘1’]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;web0web1web2web0web1&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d/</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d/ig</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg));</span><br></pre></td></tr></table></figure><h4 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h4><p>返回值与match单个返回值一样，没有就返回null<br>惰性，加g会从上次找到的位置开始 不加每次都从0开始<br>正则.lastIndex: 返回下一次正则匹配开始的位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;bigstonebig0422&#x27;</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/big/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/big/g</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="test"><a href="#test" class="headerlink" title="test"></a>test</h4><p>断字符串是否符合正则的字符，返回值为true和false<br>惰性，同上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;bigstonebig0422&#x27;</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/big/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(str));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(str));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(str));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;--------------------------------&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/big/g</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(str));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(str));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(str));</span><br></pre></td></tr></table></figure><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><p>一个元字符可以表示一类字符<br>一个元字符做匹配只能匹配一个字符</p><h4 id="点"><a href="#点" class="headerlink" title=". 点"></a>. 点</h4><p>除了换行以外的任意字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;\n一块大石头&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/./</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title="[][^]"></a>[][^]</h4><p>[] 字符集 匹配[]中的任意一个字符 [^]非字符集 匹配不在[^]中的任意一个字符<br>0-9表示0123456789 a-z表示小写字母 A-Z表示大写字母 三个可以写在一起</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;bigstone4228&#x27;</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[123456]/</span></span><br><span class="line"><span class="keyword">var</span> regg = <span class="regexp">/[^123456]/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str), regg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="w-W"><a href="#w-W" class="headerlink" title="\w \W"></a>\w \W</h4><p>匹配数字字母下划线任意的一个 \W不匹配前边提到的那几个</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;_bigstone4228!&#x27;</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\w/</span></span><br><span class="line"><span class="keyword">var</span> regg = <span class="regexp">/\W/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str), regg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="d-D"><a href="#d-D" class="headerlink" title="\d \D"></a>\d \D</h4><p>\d 匹配的是数字，\D匹配的是非数字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;bigstone422&#x27;</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d/</span></span><br><span class="line"><span class="keyword">var</span> regg = <span class="regexp">/\D/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str), str.match(regg), regg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="s-S"><a href="#s-S" class="headerlink" title="\s \S"></a>\s \S</h4><p>\s 匹配空格 \S不匹配空格</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;_bi gstone4228!&#x27;</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\s/</span></span><br><span class="line"><span class="keyword">var</span> regg = <span class="regexp">/\S/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str), regg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="b-B"><a href="#b-B" class="headerlink" title="\b \B"></a>\b \B</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;you are a beautiful girl&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\ba\b/</span>;</span><br><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/\ba\B/</span>;</span><br><span class="line"><span class="keyword">var</span> reg2 = <span class="regexp">/\Ba\B/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str), reg1.exec(str), reg2.exec(str));</span><br></pre></td></tr></table></figure><h4 id="-1"><a href="#-1" class="headerlink" title="^$"></a>^$</h4><p>^a: 开头 以a为开头的a   a$: 以a为结尾的a<br>一起用可以限制长度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;we are web0712&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^w/</span>;</span><br><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/\d$/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str), reg1.exec(str));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 银行卡密码正则:</span></span><br><span class="line"><span class="comment">// 6位</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^\d\d\d\d\d\d$/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(str));</span><br></pre></td></tr></table></figure><h3 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h3><h4 id="？"><a href="#？" class="headerlink" title="？"></a>？</h4><p>匹配0个或者1个a  只匹配字符串的第一项</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;bigstone422&#x27;</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d?/</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[a-z]?/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="-2"><a href="#-2" class="headerlink" title="*"></a>*</h4><p>a* : 匹配0个或者 连续 多个a 尽可能多的做匹配 只匹配字符串的第一项</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;wertyuiodfghjk23456789sdfghj44567&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d*/</span>;</span><br><span class="line"><span class="comment">// var reg = /[a-z]*/;</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="-3"><a href="#-3" class="headerlink" title="+"></a>+</h4><p>匹配连续多个a  至少匹配1个  尽可能多的做匹配</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;wertyuiodfghjk23456789sdfghj44567&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d+/</span>;</span><br><span class="line"><span class="comment">// var reg = /[a-z]+/;</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="m-n"><a href="#m-n" class="headerlink" title="{m, n}"></a>{m, n}</h4><p>a{m, n} : 匹配至少m次最多n次的a  尽可能多的做匹配<br>a{m, } : 匹配至少m次<br>a{n} : 只匹配n次<br>, 后面绝对不能加空格</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;wtyuiosghjkxcvbnmsdxcvb&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[a-z]&#123;5,10&#125;/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str)); <span class="comment">// wtyuiosghj</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[a-z]&#123;1,&#125;/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str)); <span class="comment">// wtyuiosghjkxcvbnmsdxcvb</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[a-z]&#123;10&#125;/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str)); <span class="comment">// wtyuiosghj</span></span><br></pre></td></tr></table></figure><h3 id="或和分组"><a href="#或和分组" class="headerlink" title="或和分组"></a>或和分组</h3><h4 id="-4"><a href="#-4" class="headerlink" title="|"></a>|</h4><p>| 或 匹配|左边或者右边</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;web0712web1web2&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/web1|web2/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="-5"><a href="#-5" class="headerlink" title="()"></a>()</h4><p>() 和 提高匹配的层级<br>()匹配到的结果可以通过其他属性得到<br>$1$2: 获取第几个()匹配到的结果 RegExp.$1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;web2web0712web1&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/web(1|2)/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">RegExp</span>.$1)</span><br><span class="line"><span class="comment">//手机号码加密</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="string">&#x27;17838660443&#x27;</span></span><br><span class="line"><span class="keyword">var</span> teg = <span class="regexp">/^([1][3-9]\d)(\d&#123;4&#125;)(\d&#123;4&#125;)/</span></span><br><span class="line"><span class="built_in">console</span>.log(num.replace(teg, <span class="string">&#x27;$1****$3&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="特殊"><a href="#特殊" class="headerlink" title="特殊"></a>特殊</h3><h4 id="-6"><a href="#-6" class="headerlink" title="(?:)"></a>(?:)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;web4web2&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/web(?:1|2)/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="-7"><a href="#-7" class="headerlink" title="(?=)"></a>(?=)</h4><p>(?=b) : 匹配后面必须跟b的a</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;webabcweb123&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/web(?=\d)/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure><h4 id="-8"><a href="#-8" class="headerlink" title="(?!)"></a>(?!)</h4><p>a(?!b) : 匹配 后面 不是 b 的 a<br>使用: 排除条件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;webabcweb123&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/web(?!\d)/</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第八天</title>
      <link href="2021/09/23/day8%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/23/day8%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第八天学习了数组对象以及操作数组的方法。</p><span id="more"></span><h1 id="day8"><a href="#day8" class="headerlink" title="day8"></a>day8</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>用来储存不定数量不定类型的数据的容器</p><h3 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 字面量创建</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>, <span class="number">43</span>, <span class="number">64</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> arr); <span class="comment">// object</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. new关键字创建</span></span><br><span class="line"><span class="comment">// var 变量 = new Array(...data);</span></span><br><span class="line"><span class="comment">// 注意: 当参数只有一个且是数字, 表示数组的长度</span></span><br><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr2 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">7</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr2);</span><br><span class="line"><span class="built_in">console</span>.log(arr2[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h3 id="length"><a href="#length" class="headerlink" title="length"></a>length</h3><p>获取数组长度 数组.length</p><p>设置数组长度，如果长度比初始大，多出来的用undefined填充，如果比初始小，多余的就会被删除即使后边再被扩大也不会恢复。。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr3.length); <span class="comment">// 9</span></span><br><span class="line">arr3.length = <span class="number">4</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr3);</span><br><span class="line">arr3.length = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr3);</span><br></pre></td></tr></table></figure><h3 id="复杂与基础"><a href="#复杂与基础" class="headerlink" title="复杂与基础"></a>复杂与基础</h3><p>基础：数据比较单一，声明和储存都在栈中执行<br>复杂：数据比较复杂，声明和地址都存储在栈，具体数据存储在堆</p><h3 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h3><p>出现在引用数据类型</p><h4 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h4><p>地址的赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="keyword">var</span> brr = arr;</span><br><span class="line"><span class="built_in">console</span>.log(brr);</span><br><span class="line"><span class="comment">//判断引用数据类型是否是同一个地址的数据 用 == 判断</span></span><br><span class="line"><span class="built_in">console</span>.log(arr == brr); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h4><p> 在堆中在划一块，重新存储对应位置的每一个数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> crr = [];</span><br><span class="line"><span class="comment">// 将arr的每一个数据 存到 crr中   对应位置: 下标一致</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    crr[i] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(crr);</span><br><span class="line"><span class="built_in">console</span>.log(crr == arr); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="添加删除"><a href="#添加删除" class="headerlink" title="添加删除"></a>添加删除</h3><p>数组的方法大部分都是在原来数组上进行直接操作, 会改变原数组。</p><h4 id="push"><a href="#push" class="headerlink" title="push()"></a>push()</h4><p>在数组的末尾添加一项或者多项, 返回添加数据后的数组的新长度<br>数组.push()</p><h4 id="pop"><a href="#pop" class="headerlink" title="pop()"></a>pop()</h4><p>在数组的末尾删除一项, 返回被删除的项<br>数组.pop()</p><h4 id="unshift"><a href="#unshift" class="headerlink" title="unshift()"></a>unshift()</h4><p>在数组的首位添加一项或者多项, 返回添加数据后的数组的新长度<br>数组.unshift()</p><h4 id="shift"><a href="#shift" class="headerlink" title="shift()"></a>shift()</h4><p>在数组的首位删除一项, 返回被删除的项<br>数组.shift()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="comment">//push() 给数组的末尾添加一个或者多个项，返回值为新的数组的长度</span></span><br><span class="line"><span class="keyword">var</span> a = arr.push(<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr, a);</span><br><span class="line"><span class="comment">//pop()删除末尾的项，只删一个，返回值为删除的项</span></span><br><span class="line"><span class="keyword">var</span> b = arr.pop()</span><br><span class="line"><span class="built_in">console</span>.log(arr, b);</span><br><span class="line"><span class="comment">//unshift() 给数组的头部添加一个或者多个项，返回值为新的数组长度</span></span><br><span class="line"><span class="keyword">var</span> c = arr.unshift(<span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr, c)</span><br><span class="line"><span class="comment">//shift() 删除头部的第一个项，只删一个，返回值为被删除的项</span></span><br><span class="line"><span class="keyword">var</span> d = arr.shift()</span><br><span class="line"><span class="built_in">console</span>.log(arr, d);</span><br></pre></td></tr></table></figure><h4 id="splice"><a href="#splice" class="headerlink" title="splice()"></a>splice()</h4><p>增删改, 返回被删除的项组成的新数组<br>语法: 数组.splice(起始下标, 删除的个数, [….data])<br>增: 数组.splice(起始下标, 删除个数, …data)<br>删除: 数组.splice(起始下标, 删除个数)<br>替换: 数组.splice(起始下标, 删除个数, …data)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">54</span>, <span class="number">12</span>, <span class="number">5</span>]</span><br><span class="line"><span class="comment">//splice的增加项的用法，增加的项可以有多个</span></span><br><span class="line"><span class="keyword">var</span> a = arr.splice(<span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr, a);</span><br><span class="line"><span class="comment">//splice的删除项的用法，一次可以删多个，返回值是被删除的值组成的新的数组</span></span><br><span class="line"><span class="keyword">var</span> b = arr.splice(<span class="number">5</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr, b)</span><br><span class="line"><span class="comment">//splice的改变项的用法，一次可以改多个。</span></span><br><span class="line"><span class="keyword">var</span> c = arr.splice(<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr, c);</span><br><span class="line"><span class="comment">//去重</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] === arr[j]) &#123;</span><br><span class="line">            arr.splice(j, <span class="number">1</span>)</span><br><span class="line">            j--</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">8</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h3 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h3><h4 id="concat"><a href="#concat" class="headerlink" title="concat()"></a>concat()</h4><p>拼接数组和项, 返回新数组<br>数组.concat(data)</p><h4 id="slice"><a href="#slice" class="headerlink" title="slice()"></a>slice()</h4><p>截取 用法与字符串一模一样, 返回截取出来的新数组<br>数组.slice([起始下标], [结束下标])</p><h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse()"></a>reverse()</h4><p>数组翻转, 改变原数组, 具有返回值, 返回翻转以后的数组<br>数组.reverse()</p><h4 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h4><p>将数组按照拼接符连接起来, 返回字符串<br>数组.join(连接符) 连接符可以是一切字符, 默认以, 作为连接符</p><h4 id="indexOf-lastIndexOf"><a href="#indexOf-lastIndexOf" class="headerlink" title="indexOf()/lastIndexOf()"></a>indexOf()/lastIndexOf()</h4><p>查找对应的项在数组中出现的位置，如果有返回下标，如果没有返回-1<br>与字符串一致<br>查找的项必须和数组的项 全等 才能被找到</p><h4 id="sort"><a href="#sort" class="headerlink" title="sort()"></a>sort()</h4><p>默认按照字符串的排序规则进行排序<br>数组.sort([函数])<br>return a - b; 从小到大<br>return b - a; 从大到小</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//concat 拼接数组和项，返回新的数组，原数组不会改变</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">    brr = [<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>]</span><br><span class="line"><span class="keyword">var</span> crr = arr.concat(<span class="number">4</span>, <span class="string">&#x27;g&#x27;</span>, brr)</span><br><span class="line"><span class="built_in">console</span>.log(crr);</span><br><span class="line"><span class="comment">//slice 截取，用法跟在字符串中的用法一模一样，返回的是截取后获得的数组，原数组不会改变</span></span><br><span class="line"><span class="built_in">console</span>.log(crr.slice());</span><br><span class="line"><span class="built_in">console</span>.log(crr.slice(<span class="number">4</span>));</span><br><span class="line"><span class="built_in">console</span>.log(crr.slice(<span class="number">4</span>, <span class="number">6</span>));</span><br><span class="line"><span class="built_in">console</span>.log(crr.slice(<span class="number">6</span>, <span class="number">4</span>));</span><br><span class="line"><span class="comment">//join 将数组按照所提供的拼接字符给连接起来，返回的是字符串，如果不给字符，默认用,（逗号）拼接。</span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="string">&#x27;小桥&#x27;</span>, <span class="string">&#x27;流水&#x27;</span>, <span class="string">&#x27;人家&#x27;</span>]</span><br><span class="line"><span class="built_in">console</span>.log(a.join());</span><br><span class="line"><span class="built_in">console</span>.log(a.join(<span class="string">&#x27;跟&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(a.join(<span class="string">&#x27;&amp;&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(a.join(<span class="number">2</span>));</span><br><span class="line"><span class="comment">//reverse 反转数组,会改变原数组，返回的值为改变之后的数组</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="keyword">var</span> a1 = arr.reverse()</span><br><span class="line"><span class="built_in">console</span>.log(a1, arr);</span><br><span class="line"><span class="comment">//reverse与split结合可以实现反转字符串</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;bigStone 422&#x27;</span></span><br><span class="line"><span class="keyword">var</span> s1 = str.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(s1);</span><br><span class="line"><span class="comment">//indexOf与lastIndexOf用法与字符串中的一致。</span></span><br><span class="line"><span class="keyword">var</span> a2 = [<span class="string">&#x27;1&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;1&#x27;</span>]</span><br><span class="line"><span class="built_in">console</span>.log(a2.indexOf(<span class="number">1</span>));</span><br><span class="line"><span class="built_in">console</span>.log(a2.lastIndexOf(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(a2.lastIndexOf(<span class="string">&#x27;2&#x27;</span>));</span><br><span class="line"><span class="comment">//利用indexOf去重</span></span><br><span class="line"><span class="keyword">var</span> a3 = [<span class="number">22</span>, <span class="number">32</span>, <span class="number">45</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">22</span>, <span class="number">32</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">90</span>]</span><br><span class="line"><span class="keyword">var</span> a4 = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">of</span> a3) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a4.indexOf(i) == -<span class="number">1</span>) &#123;</span><br><span class="line">        a4.push(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a3);</span><br><span class="line"><span class="built_in">console</span>.log(a4);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    sort默认的是比较ASCII的大小来进行的排序。因此，如果要判断两位寄以上的数字时需要给参数。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> arr = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    arr.push(randomInt(<span class="number">0</span>, <span class="number">100</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr)</span><br><span class="line"><span class="built_in">console</span>.log(arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 从小到大排序</span></span><br><span class="line">    <span class="comment">// return a-b;</span></span><br><span class="line">    <span class="comment">//从大到小排序</span></span><br><span class="line">    <span class="keyword">return</span> b - a</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><h4 id="中文比较-localeCompare"><a href="#中文比较-localeCompare" class="headerlink" title="中文比较 localeCompare"></a>中文比较 localeCompare</h4><p>比较字符是否在另一个字符之前或者之后<br>字符a.localeCompare(字符b)<br>字符a 在 字符b 之前 返回 -1<br>字符a 和 字符b 完全一致 返回 0<br>字符a 在 字符b 之后 返回 1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    a.localeCompare(b)</span></span><br><span class="line"><span class="comment">    返回值-1表示 a在b前边</span></span><br><span class="line"><span class="comment">    1表示a在b后边</span></span><br><span class="line"><span class="comment">    0表示a和b一致</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;李四&#x27;</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="string">&#x27;王五&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(b.localeCompare(a));</span><br><span class="line"><span class="built_in">console</span>.log(a.localeCompare(b));</span><br><span class="line"><span class="built_in">console</span>.log(b.localeCompare(b));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用姓名升序排序 a---z</span></span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x.name, y.name);</span><br><span class="line">    <span class="keyword">return</span> x.name.localeCompare(y.name);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第七天</title>
      <link href="2021/09/23/day7%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/23/day7%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第七天学习了Math对象，Date对象，还有操作字符串的方法。</p><span id="more"></span><h1 id="day7"><a href="#day7" class="headerlink" title="day7"></a>day7</h1><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>在js中，万物皆对象。分为：本地、内置、自定义、宿主、全局</p><h3 id="内部"><a href="#内部" class="headerlink" title="内部"></a>内部</h3><p>Number String Boolean Object Array Function RegExp Date Error</p><h3 id="内置"><a href="#内置" class="headerlink" title="内置"></a>内置</h3><p>在页面加载完成后，已经实例化的对象。例如：Global Math</p><h3 id="宿主"><a href="#宿主" class="headerlink" title="宿主"></a>宿主</h3><p>DOM和BOM</p><h3 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h3><p>window</p><h2 id="api"><a href="#api" class="headerlink" title="api"></a>api</h2><p>application programming Interface 应用程序编程接口<br>已经封装好的可以直接使用的函数，直接调用实现功能</p><h2 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.PI); <span class="comment">//pi就是圆周率</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="number">34.43</span>)); <span class="comment">//小数向下取整 34</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(<span class="number">56.65</span>)); <span class="comment">//小数向上取整 57</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="number">44.44</span>)); <span class="comment">//四舍五入 44</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="number">55.55</span>)); <span class="comment">//56</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">44</span>, <span class="number">75</span>, <span class="number">72</span>, <span class="number">47</span>, <span class="number">78</span>)) <span class="comment">//最大值78</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">44</span>, <span class="number">75</span>, <span class="number">72</span>, <span class="number">47</span>, <span class="number">78</span>)) <span class="comment">//最小值1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">34</span>, <span class="number">4</span>)); <span class="comment">//34的4次方</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.sqrt(<span class="number">81</span>)); <span class="comment">//81开根号 9</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(-<span class="number">9</span>)); <span class="comment">//绝对值 9</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//0-1之间的随机数</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.random())</span><br><span class="line"><span class="comment">//0-n之间的随机数 Math.random*n</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.random() * <span class="number">44</span>);</span><br><span class="line"><span class="comment">//n-m之间的随机数 Math.random*(m-n)+n;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.random() * (<span class="number">43</span> - <span class="number">34</span>) + <span class="number">34</span>)</span><br></pre></td></tr></table></figure><h2 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h2><h3 id="创建当前时间"><a href="#创建当前时间" class="headerlink" title="创建当前时间"></a>创建当前时间</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">console</span>.log(date);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> date); <span class="comment">// object</span></span><br></pre></td></tr></table></figure><h3 id="创建其他时间"><a href="#创建其他时间" class="headerlink" title="创建其他时间"></a>创建其他时间</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用 , 直接分割   月份: 0-11 表示 1-12 月</span></span><br><span class="line"><span class="keyword">var</span> d1 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2021</span>, <span class="number">9</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> d1 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2021</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>);</span><br><span class="line"><span class="built_in">console</span>.log(d1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//传 字符串 年月日中间可以用任意特殊英文符号进行分割 空格 , / $  时分秒 用 时:分: 秒</span></span><br><span class="line"><span class="comment">// 字符串 月份不减</span></span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2021, 10, 1&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2021, 10, 1 23:23:23&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2021 10 1 23:23:23&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2021/10/2 23:23:23&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2021-10-3 23:23:23&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2021_10_3 23:23:23&#x27;</span>); <span class="comment">// Invalid Date 不可用的时间 _中文符号</span></span><br><span class="line"><span class="built_in">console</span>.log(d2);</span><br></pre></td></tr></table></figure><h3 id="获取特定格式时间"><a href="#获取特定格式时间" class="headerlink" title="获取特定格式时间"></a>获取特定格式时间</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dd = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> dd = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">console</span>.log(dd);</span><br><span class="line"><span class="built_in">console</span>.log(dd.toString(), <span class="keyword">typeof</span> dd.toString()); <span class="comment">// 字符串</span></span><br><span class="line"><span class="built_in">console</span>.log(dd.toLocaleString()); <span class="comment">// 本地字符串日期  2021/9/22 上午11:35:10</span></span><br><span class="line"><span class="built_in">console</span>.log(dd.toLocaleDateString()); <span class="comment">// 年月日 2021/9/22</span></span><br><span class="line"><span class="built_in">console</span>.log(dd.toLocaleTimeString()); <span class="comment">// 时分秒 12小时 上午11:36:30</span></span><br></pre></td></tr></table></figure><h3 id="获取单个时间"><a href="#获取单个时间" class="headerlink" title="获取单个时间"></a>获取单个时间</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">console</span>.log(d)</span><br><span class="line"><span class="built_in">console</span>.log(d.getFullYear()) <span class="comment">//年</span></span><br><span class="line"><span class="built_in">console</span>.log(d.getMonth()) <span class="comment">//月</span></span><br><span class="line"><span class="built_in">console</span>.log(d.getDate()) <span class="comment">//日</span></span><br><span class="line"><span class="built_in">console</span>.log(d.getDay()) <span class="comment">//周</span></span><br><span class="line"><span class="built_in">console</span>.log(d.getHours()) <span class="comment">//时</span></span><br><span class="line"><span class="built_in">console</span>.log(d.getMinutes()) <span class="comment">//分</span></span><br><span class="line"><span class="built_in">console</span>.log(d.getSeconds()) <span class="comment">//秒</span></span><br><span class="line"><span class="built_in">console</span>.log(d.getTime()) <span class="comment">//时间戳</span></span><br></pre></td></tr></table></figure><h3 id="moment"><a href="#moment" class="headerlink" title="moment"></a>moment</h3><p>moment.js: 专门处理日期的js插件库<br>下载 ‘<a href="http://momentjs.cn/&#39;">http://momentjs.cn/&#39;</a><br>moment.js : 格式文档 学习<br>moment.min.js : 压缩文档 工作</p><p>YYYY: 年<br>MM: 月<br>DD: 日期<br>d: 星期<br>HH: 时<br>mm: 分<br>ss: 秒<br>X: 所有的秒 距离1970-1-1的毫秒/1000</p><p>如果时个位数，自动添加0</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建moment时间对象</span></span><br><span class="line"><span class="keyword">var</span> dd = moment();</span><br><span class="line"><span class="built_in">console</span>.log(dd);</span><br><span class="line"></span><br><span class="line"><span class="comment">// format: 格式日期</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    YYYY: 年</span></span><br><span class="line"><span class="comment">    MM: 月</span></span><br><span class="line"><span class="comment">    DD: 日期</span></span><br><span class="line"><span class="comment">    d: 星期</span></span><br><span class="line"><span class="comment">    HH: 时</span></span><br><span class="line"><span class="comment">    mm: 分</span></span><br><span class="line"><span class="comment">    ss: 秒</span></span><br><span class="line"><span class="comment">    X: 所有的秒 距离1970-1-1的毫秒/1000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    前导0 自动添加</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(dd.format(<span class="string">&#x27;YYYY&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(dd.format(<span class="string">&#x27;MM&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(dd.format(<span class="string">&#x27;DD&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(dd.format(<span class="string">&#x27;d&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(dd.format(<span class="string">&#x27;HH&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(dd.format(<span class="string">&#x27;mm&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(dd.format(<span class="string">&#x27;ss&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(dd.format(<span class="string">&#x27;X&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在页面中显示当前是 xxxx年xx月xx日 星期x x:x:x</span></span><br><span class="line"><span class="built_in">document</span>.body.innerHTML = dd.format(<span class="string">&#x27;YYYY年MM月DD日 星期d HH:mm:ss&#x27;</span>);</span><br><span class="line"><span class="comment">// 每隔1s自动更新一次</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dd = moment();</span><br><span class="line">    <span class="built_in">console</span>.log(dd);</span><br><span class="line">    <span class="built_in">document</span>.body.innerHTML = dd.format(<span class="string">&#x27;YYYY年MM月DD日 星期d HH:mm:ss&#x27;</span>);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h2 id="string"><a href="#string" class="headerlink" title="string"></a>string</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><h4 id="字面量声明"><a href="#字面量声明" class="headerlink" title="字面量声明"></a>字面量声明</h4><p>包装类对象 不是真正的对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;12345a&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="new关键字创建"><a href="#new关键字创建" class="headerlink" title="new关键字创建"></a>new关键字创建</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">&#x27;asddhj&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str1);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> str1); <span class="comment">// object</span></span><br></pre></td></tr></table></figure><h3 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(str1.length); <span class="comment">// 长度</span></span><br></pre></td></tr></table></figure><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;qwertyui2353423f&#x27;</span></span><br><span class="line"><span class="comment">//charAt 指定下标对应的字符</span></span><br><span class="line"><span class="built_in">console</span>.log(str.charAt(<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//charCodeAt 指定下标对应的字符的ASCII码</span></span><br><span class="line"><span class="built_in">console</span>.log(str.charCodeAt(<span class="number">5</span>));</span><br><span class="line"><span class="comment">//indexOf 指定字符在字符串中出现的位置，返回值为下标。找到第一个存在的位置就返回，找不到时返回-1，第二个参数为指定初始下标</span></span><br><span class="line"><span class="built_in">console</span>.log(str.indexOf(<span class="string">&#x27;2&#x27;</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.indexOf(<span class="string">&#x27;2&#x27;</span>, <span class="number">9</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.indexOf(<span class="string">&#x27;yu2&#x27;</span>))</span><br><span class="line"><span class="comment">//lastIndexOf 指定字符在字符串中最后出现的位置，返回值为下标，其他的与indexOf一样，不同的是，此方法是从右往左找</span></span><br><span class="line"><span class="built_in">console</span>.log(str.lastIndexOf(<span class="string">&#x27;2&#x27;</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.lastIndexOf(<span class="string">&#x27;2&#x27;</span>, <span class="number">12</span>))</span><br></pre></td></tr></table></figure><h3 id="截取"><a href="#截取" class="headerlink" title="截取"></a>截取</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;qwert132459jbnv&#x27;</span></span><br><span class="line"><span class="comment">// substring 一个参数，从参数开始，截取到最后。两个参数，从第一个参数开始，截取到第二个参数，含头不含尾。如果结束下标小于起始下标。参数互换位置。出现负数会把参数替换为0</span></span><br><span class="line"><span class="built_in">console</span>.log(str.substring(<span class="number">2</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.substring(<span class="number">2</span>, <span class="number">6</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.substring(<span class="number">9</span>, <span class="number">6</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.substring(-<span class="number">9</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//slice 与上边不同的是，如果结束下标小于起始下标，返回空字符串，出现负数就是从右往左起的第几位。</span></span><br><span class="line"><span class="built_in">console</span>.log(str.slice(<span class="number">2</span>, <span class="number">5</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.slice(<span class="number">5</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.slice(<span class="number">5</span>, -<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//substr 一个参数，与上头两个一样，两个参数，从第一个参数起的位置，往后接第二个参数的个数的长度的字符串</span></span><br><span class="line"><span class="built_in">console</span>.log(str.substr(<span class="number">6</span>))</span><br><span class="line"><span class="built_in">console</span>.log(str.substr(<span class="number">6</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure><h3 id="剩余的5个"><a href="#剩余的5个" class="headerlink" title="剩余的5个"></a>剩余的5个</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//replace 替换，replace(要替换的,被替换的),被替换的字符串如果不在里头，返回的是原字符串。</span></span><br><span class="line">       <span class="keyword">var</span> str=<span class="string">&#x27;I am here as always&#x27;</span></span><br><span class="line">       <span class="built_in">console</span>.log(str.replace(<span class="string">&#x27;am&#x27;</span>,<span class="string">&#x27;hahaha&#x27;</span>))</span><br><span class="line"></span><br><span class="line">       <span class="comment">//split 将字符串按照指定的分隔符进行分割。返回值是一个数组。</span></span><br><span class="line">       <span class="built_in">console</span>.log(str.split(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">       <span class="built_in">console</span>.log(str.split(<span class="string">&#x27;&#x27;</span>))<span class="comment">//给一个空字符的话就是把每一个字符作为数组里的一项，包括空格符。</span></span><br><span class="line">       <span class="built_in">console</span>.log(str.split())<span class="comment">//啥也不给的话就是将整个字符串作为数组里的一项</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//toUpperCase()小写转大写  toLowerCase()大写转小写</span></span><br><span class="line">       <span class="keyword">var</span> s1=<span class="string">&#x27;UiuiUIuI&#x27;</span></span><br><span class="line">       <span class="keyword">var</span> s2=<span class="string">&#x27;uIUIUIUi&#x27;</span></span><br><span class="line">       <span class="built_in">console</span>.log(s1.toUpperCase())</span><br><span class="line">       <span class="built_in">console</span>.log(s1.toLowerCase())</span><br><span class="line">       <span class="comment">//不区分大小写</span></span><br><span class="line">       <span class="built_in">console</span>.log(s1.toUpperCase()==s2.toUpperCase())</span><br><span class="line"></span><br><span class="line">       <span class="comment">//trim 去除字符串的左右空格</span></span><br><span class="line">       <span class="keyword">var</span> s3=<span class="string">&#x27;    (I am here as always)     &#x27;</span></span><br><span class="line">       <span class="built_in">console</span>.log(s3.trim())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第六天</title>
      <link href="2021/09/21/day06/"/>
      <url>2021/09/21/day06/</url>
      
        <content type="html"><![CDATA[<p>第六天学习了定时器，并且封装了一个js移动动画函数。</p><span id="more"></span><h1 id="day6"><a href="#day6" class="headerlink" title="day6"></a>day6</h1><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>定时器: 让一段代码等待一段时间或者每隔一段时间就执行一次的代码就是定时器</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="延迟定时器"><a href="#延迟定时器" class="headerlink" title="延迟定时器"></a>延迟定时器</h4><p>延迟: 让一段代码等待一段时间  setTimeout(函数, 时间); 时间单位: ms</p><p>​    等待 只执行一次的效果 使用延迟定时器</p><p>​    效果: 一次性广告 关不掉的广告</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    打开页面 等待3s后 显示img</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// 等待 只执行一次的效果 使用延迟定时器</span></span><br><span class="line"><span class="built_in">setTimeout</span>(auto, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auto</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    img.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="间隔定时器"><a href="#间隔定时器" class="headerlink" title="间隔定时器"></a>间隔定时器</h4><p>间隔: 每隔一段时间执行一次 setInterval(函数, 时间); 时间单位: ms</p><p>​    每隔  间隔  不间断重复的效果</p><p>​    效果: 计时器 倒计时 轮播图</p><p>1s = 1000ms</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 每隔一秒 让n自加1 输出</span></span><br><span class="line"><span class="comment">// 每隔  间隔  不间断重复的效果</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    n++;</span><br><span class="line">    <span class="built_in">console</span>.log(n);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h3 id="清除定时器"><a href="#清除定时器" class="headerlink" title="清除定时器"></a>清除定时器</h3><p>定时器一旦开启 不会自动清除 会造成内存泄漏<br>需要手动清除定时器<br>间隔: setInterval     clearInterval(唯一标识)<br>延迟: setTimeout      clearTimeout(唯一标识)<br>唯一标识 开启定时器后的返回值就是定时器的唯一标识<br>接收唯一标识：var 变量 = setTimeout/setInterval(); </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    n--;</span><br><span class="line">    <span class="comment">// 如果n等于0  清除定时器</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;这是间隔定时器&#x27;</span>, n);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(timer, <span class="string">&#x27;timer&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p> 一般封装定时器的时候 是将定时器的函数抽取成普通的函数<br>当遇到会频繁开启定时器的时候 先清除定时器</p><h2 id="封装的函数"><a href="#封装的函数" class="headerlink" title="封装的函数"></a>封装的函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//元素位移的函数</span></span><br><span class="line"><span class="comment">//为定时器设置一个标时，由于一开始时没有使用定时器，所以赋值为null</span></span><br><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">ele, attr, step, end</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//获取当前图片所在的位置，并且转换为数字的格式</span></span><br><span class="line">    <span class="keyword">var</span> n = <span class="built_in">parseInt</span>(get_style(ele, attr))</span><br><span class="line">    <span class="comment">//判断，当前的位置如果小于目标位置，那就是加，如果当前位置小于目标位置那就是减。</span></span><br><span class="line">    step = n &lt; end ? step : -step;</span><br><span class="line">    <span class="comment">//先清除之前存在的定时器，防止每点击一下就会出现一个定时器</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">    <span class="comment">//创建定时器</span></span><br><span class="line">    timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//使位置每次加</span></span><br><span class="line">        n += step;</span><br><span class="line">        <span class="comment">//判断是否飞到头了，如果飞到头，就停止</span></span><br><span class="line">        <span class="keyword">if</span> ((n &gt;= end &amp;&amp; step &gt;= <span class="number">0</span>) || (n &lt;= end &amp;&amp; step &lt;= <span class="number">0</span>)) &#123;</span><br><span class="line">            n = end;</span><br><span class="line">            <span class="comment">//飞到终点，就清除当前的定时器</span></span><br><span class="line">            <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//改变图片的位置。</span></span><br><span class="line">        ele.style[attr] = n + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">    &#125;, <span class="number">20</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第五天</title>
      <link href="2021/09/17/day5%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/17/day5%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第五天学习了获取函数样式、this、自定义属性、自定义索引等等。</p><span id="more"></span><h1 id="day5"><a href="#day5" class="headerlink" title="day5"></a>day5</h1><h2 id="获取元素样式"><a href="#获取元素样式" class="headerlink" title="获取元素样式"></a>获取元素样式</h2><h3 id="基础获取"><a href="#基础获取" class="headerlink" title="基础获取"></a>基础获取</h3><p>标准浏览器(ie9, chrome, ff): getComputedStyle(元素).属性名<br>ie(ie8及以下): 元素.currentStyle.属性名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取div</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(div);</span><br><span class="line"><span class="comment">// 获取样式:</span></span><br><span class="line"><span class="comment">// 标准:</span></span><br><span class="line"><span class="comment">// var w = getComputedStyle(div).width;</span></span><br><span class="line"><span class="comment">// console.log(w);</span></span><br><span class="line"><span class="comment">// var h = getComputedStyle(div).height;</span></span><br><span class="line"><span class="comment">// console.log(h);</span></span><br><span class="line"><span class="built_in">console</span>.log(getComputedStyle); <span class="comment">// 标准: 函数  ie: undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(div.currentStyle); <span class="comment">// 标准: undefined ie: 对象</span></span><br><span class="line"><span class="comment">// ie:</span></span><br><span class="line"><span class="comment">// Cannot read properties of undefined (reading &#x27;width&#x27;): </span></span><br><span class="line"><span class="comment">// var w = div.currentStyle.width;</span></span><br><span class="line"><span class="comment">// console.log(w);</span></span><br></pre></td></tr></table></figure><h3 id="兼容"><a href="#兼容" class="headerlink" title="兼容"></a>兼容</h3><p>getComputedStyle: 函数  currentStyle: 对象</p><p>处理兼容: 一个函数 一个是对象/属性 可以用函数是否存在来做判断</p><p>如果函数 xx() 来做调用的话 判断的时候 window.xx 是否存在来做判断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.getComputedStyle);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.getComputedStyle)&#123;</span><br><span class="line">    <span class="comment">// 标准</span></span><br><span class="line">    <span class="keyword">var</span> w = getComputedStyle(div).width;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// ie</span></span><br><span class="line">    <span class="keyword">var</span> w = div.currentStyle.width;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(w);</span><br></pre></td></tr></table></figure><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">ele, attr</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ele: 元素</span></span><br><span class="line">    <span class="comment">// attr: 属性</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.getComputedStyle) &#123;</span><br><span class="line">        <span class="comment">// 标准</span></span><br><span class="line">        <span class="keyword">var</span> w = getComputedStyle(ele)[attr];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> w = ele.currentStyle[attr];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log(w);</span></span><br><span class="line">    <span class="keyword">return</span> w;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="封装使用"><a href="#封装使用" class="headerlink" title="封装使用"></a>封装使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1. 引入公用js --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../fsy.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(div);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> w = getStyle(div, <span class="string">&#x27;width&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(w);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>this: 指代词, 在不同的位置有不同的含义</p><p>​    全局: window</p><p>​    普通函数: window</p><p>​    对象的方法: 当前对象</p><p>​    事件处理函数: 触发源 点谁就指向谁</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>); <span class="comment">// window</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">fn();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    abs: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(obj.abs);</span><br><span class="line">obj.abs();</span><br><span class="line"></span><br><span class="line">lis[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="this使用"><a href="#this使用" class="headerlink" title="this使用"></a>this使用</h3><h4 id="在for循环所嵌套的事件中-得不到正确的对象的时候-用this来指代"><a href="#在for循环所嵌套的事件中-得不到正确的对象的时候-用this来指代" class="headerlink" title="在for循环所嵌套的事件中, 得不到正确的对象的时候 用this来指代"></a>在for循环所嵌套的事件中, 得不到正确的对象的时候 用this来指代</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击每一个li 输出当前li的内容</span></span><br><span class="line"><span class="comment">// 1. 获取元素</span></span><br><span class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(lis);</span><br><span class="line"><span class="comment">// 2. 每一个</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++)&#123;</span><br><span class="line">    <span class="comment">// 3. 加事件</span></span><br><span class="line">    lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>); <span class="comment">// 用this指代当前的触发源</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.innerHTML);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排他"><a href="#排他" class="headerlink" title="排他"></a>排他</h3><p>排他: 除了自己有特定效果之外 其他的都是默认样式</p><p>实现过程: 1. 所有元素都设置成默认样式</p><p>​        \2. 指定元素添加特定效果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取元素</span></span><br><span class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(lis);</span><br><span class="line"><span class="comment">// 2. 每一个</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++)&#123;</span><br><span class="line">    <span class="comment">// 3. 加事件</span></span><br><span class="line">    lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 先去清除所有的li的字体颜色</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; lis.length; j++)&#123;</span><br><span class="line">            lis[j].className = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 让当前的li的颜色变成黑色</span></span><br><span class="line">        <span class="comment">// 找到当前li</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>.className = <span class="string">&#x27;active&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>一般假定初始状态的时候 不会写太复杂的值 一般一个数字、或者 布尔值</p><p>假设内容 随意指定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(img);</span><br><span class="line"><span class="comment">// 不知道灯是什么状态 可以假设初始状态</span></span><br><span class="line"><span class="comment">// 一般假定初始状态的时候 不会写太复杂的值 一般一个数字、或者 布尔值</span></span><br><span class="line"><span class="comment">// 1--黑 2--亮  true--亮 false--黑</span></span><br><span class="line"><span class="keyword">var</span> tag = <span class="string">&#x27;dark&#x27;</span>; <span class="comment">// 假设内容 随意指定  dark--黑 light--亮</span></span><br><span class="line"><span class="comment">// 点击</span></span><br><span class="line">img.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.src); <span class="comment">// file:///Users/fushuangyu/Desktop/offcn/0712/day05/images/dark.jpg</span></span><br><span class="line">    <span class="keyword">if</span>(tag == <span class="string">&#x27;dark&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// 灯是黑的 变亮</span></span><br><span class="line">        img.src = <span class="string">&#x27;./images/bright.jpg&#x27;</span>;</span><br><span class="line">        <span class="comment">// 更新状态</span></span><br><span class="line">        tag = <span class="string">&#x27;light&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        img.src = <span class="string">&#x27;./images/dark.jpg&#x27;</span>;</span><br><span class="line">        tag = <span class="string">&#x27;dark&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h2><p>属性: 写在起始标签上的 除了标签以外的 都是属性<br>固有属性: 规定好作用的 class id alt src…<br>自定义属性: 由程序员自己去设定的属性 tag<br>操作属性:<br>​1. 获取属性的值:<br>​   var 变量 = 元素.属性;<br>​   var 变量 = 元素[属性];<br>​2. 设置属性的值:<br>​   元素.属性名 = 值;<br>​   元素[属性名] = 值;<br><strong>直接写在html页面中的自定义属性通过上述两种方式不能获取</strong><br><strong>通过js设置给元素的自定义属性，在页面中看不到, 但是在js中可以正常操作</strong><br>多个元素之间的同名的属性 互相不影响</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取属性值</span></span><br><span class="line"><span class="built_in">console</span>.log(div.id);</span><br><span class="line"><span class="built_in">console</span>.log(div.tag); <span class="comment">// undefined</span></span><br><span class="line"><span class="comment">// 2. 设置属性</span></span><br><span class="line">div.t = <span class="string">&#x27;abc123&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(div.t); <span class="comment">// abc123</span></span><br><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">img.t = <span class="string">&#x27;987654321&#x27;</span>;</span><br><span class="line"><span class="comment">// 多个元素之间的同名的属性 互相不影响</span></span><br><span class="line"><span class="built_in">console</span>.log(div.t, img.t);</span><br></pre></td></tr></table></figure><h2 id="自定义索引"><a href="#自定义索引" class="headerlink" title="自定义索引"></a>自定义索引</h2><p>在自定义属性中 存储下标 的行为 就是自定义索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2. 每一个</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++)&#123;</span><br><span class="line">    <span class="comment">// 存储自定义索引</span></span><br><span class="line">    btns[i].index = i;</span><br><span class="line">    <span class="comment">// 3. 加事件</span></span><br><span class="line">    btns[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 获取到对应的颜色</span></span><br><span class="line">        <span class="comment">// 颜色和按钮的关系: 5个 </span></span><br><span class="line">        <span class="comment">// 按钮和颜色: 一一对应  下标是一致</span></span><br><span class="line">        <span class="comment">// 获取当前按钮的下标 ---&gt; 当前按钮的index属性的值</span></span><br><span class="line">        <span class="comment">// console.log(i);</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.index);</span><br><span class="line">        <span class="comment">// 通过下标获取对应的arr中的颜色</span></span><br><span class="line">        <span class="built_in">console</span>.log(arr[<span class="built_in">this</span>.index]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 颜色设置给body  快速获取页面body的方式: document.body</span></span><br><span class="line">        <span class="comment">// console.log(document.body);</span></span><br><span class="line">        <span class="built_in">document</span>.body.style.background = arr[<span class="built_in">this</span>.index];</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第四天</title>
      <link href="2021/09/16/day4%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/16/day4%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第四天学习了函数，函数封装，作用域等等。</p><span id="more"></span><h1 id="day4"><a href="#day4" class="headerlink" title="day4"></a>day4</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>将具有独立功能的代码块整合命名的代码<br>作用：减少页面代码，提高页面的执行速度，页面结构更加清晰</p><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><p>函数：由事件驱动的或者在需要的时候被调用的代码块<br>函数只声明不调用的话，没有任何效果。</p><p>声明函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line">fn();</span><br><span class="line"><span class="comment">//字面量声明</span></span><br><span class="line"><span class="keyword">var</span> fn1 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br><span class="line">fn1();</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>函数名和变量名的命名规范是一致的。<br>区别：函数声明的方式调用可以在声明之前或者之后，字面量声明的方式调用只能在声明之后。</p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>当遇到不确定的值，就需要抽取成形参，在调用时，不同的数据传递进去。<br>形参：形式参数，写在function后边的()里，用来接收实际传递过来的数据。<br>实参：实际传递过来的数据，写在函数调用的()里。</p><p>arguments：存在于每一个函数中，是实参的集合</p><p>一般形参和实参一一对应。</p><h4 id="单个参数"><a href="#单个参数" class="headerlink" title="单个参数"></a>单个参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单个参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 求和</span></span><br><span class="line">    <span class="keyword">var</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 1 + 2 + 3 + 4 + ... + 100</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= a; i++)&#123;</span><br><span class="line">        <span class="comment">// s = s + i;</span></span><br><span class="line">        s += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(s);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">sum(<span class="number">100</span>);</span><br><span class="line">sum(<span class="number">1000</span>);</span><br><span class="line">sum(<span class="number">2000</span>);</span><br></pre></td></tr></table></figure><h4 id="多个参数"><a href="#多个参数" class="headerlink" title="多个参数"></a>多个参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 50-80  90-100 1000-10000</span></span><br><span class="line"><span class="comment">// 多个参数: 用,隔开</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum1</span>(<span class="params">start, end</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 求和</span></span><br><span class="line">    <span class="keyword">var</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 1 + 2 + 3 + 4 + ... + 100</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = start; i &lt;= end; i++)&#123;</span><br><span class="line">        <span class="comment">// s = s + i;</span></span><br><span class="line">        s += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(s);</span><br><span class="line">&#125;;</span><br><span class="line">sum1(<span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line">sum1(<span class="number">50</span>, <span class="number">80</span>);</span><br></pre></td></tr></table></figure><h4 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h4><p>如果参数个数不确定，形参和实参一个都不写，直接使用arguments。<br>它存在于每一个函数中，是实参的集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="comment">// 将arguments中的每个数据加起来</span></span><br><span class="line">    <span class="keyword">var</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[i]);</span><br><span class="line">        s += <span class="built_in">arguments</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(s);</span><br><span class="line">&#125;</span><br><span class="line">sum2(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>);</span><br><span class="line">sum2(<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>);</span><br></pre></td></tr></table></figure><h4 id="形参和arguments的关系"><a href="#形参和arguments的关系" class="headerlink" title="形参和arguments的关系"></a>形参和arguments的关系</h4><p>两者互相影响</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a, <span class="built_in">arguments</span>);</span><br><span class="line">    a = <span class="number">50</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(a, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="built_in">arguments</span>[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(a, <span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">fn(<span class="number">30</span>);</span><br></pre></td></tr></table></figure><h3 id="函数问题"><a href="#函数问题" class="headerlink" title="函数问题"></a>函数问题</h3><h4 id="形参实参不一一对应"><a href="#形参实参不一一对应" class="headerlink" title="形参实参不一一对应"></a>形参实参不一一对应</h4><p>形参&gt;实参：多余的形参就是undefined<br>实参&lt;形参：多余的实参不能通过形参获取。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a, b);</span><br><span class="line">&#125;;</span><br><span class="line">fn(<span class="number">10</span>); <span class="comment">// a = 10 b = undefined</span></span><br><span class="line">fn(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>); <span class="comment">// a = 10 b = 20</span></span><br></pre></td></tr></table></figure><h4 id="函数重名"><a href="#函数重名" class="headerlink" title="函数重名"></a>函数重名</h4><p>函数名重名：后边的覆盖前边的<br>函数和变量名重名：变量覆盖函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;a1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">a(); <span class="comment">// a1</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">30</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// b(); // b is not a function</span></span><br></pre></td></tr></table></figure><h4 id="函数封装"><a href="#函数封装" class="headerlink" title="函数封装"></a>函数封装</h4><ol><li>声明空函数</li><li>实现单个效果</li><li>调用</li><li>抽参</li><li>传参：把谁抽出来，把谁传进去</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getOdd</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 0--10</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= a; i++)&#123;</span><br><span class="line">        <span class="comment">// 偶数: 被2整除 取余等于0</span></span><br><span class="line">        <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">getOdd(<span class="number">10</span>);</span><br><span class="line">getOdd(<span class="number">66</span>);</span><br><span class="line">getOdd(<span class="number">100</span>);</span><br></pre></td></tr></table></figure><h3 id="参数的数据类型"><a href="#参数的数据类型" class="headerlink" title="参数的数据类型"></a>参数的数据类型</h3><p>所有的数据类型都可以作为参数，一般不用null和undefined作为参数，由于null和undefined不具有实际意义，所以一般不使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getType</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a, <span class="keyword">typeof</span> a);</span><br><span class="line">&#125;</span><br><span class="line">getType(<span class="number">10</span>);</span><br><span class="line">getType(<span class="string">&#x27;中公&#x27;</span>);</span><br><span class="line">getType(<span class="literal">true</span>);</span><br><span class="line">getType(<span class="literal">null</span>);</span><br><span class="line">getType(<span class="literal">undefined</span>);</span><br><span class="line"><span class="keyword">var</span> m = &#123;<span class="attr">a</span>: <span class="number">1</span>&#125;;</span><br><span class="line">getType(m);</span><br><span class="line">getType([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">getType(fn);</span><br></pre></td></tr></table></figure><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>作用：读（获取）、写（设置）<br>域：区域   作用域：变量和函数被读写的区域<br>es5中，作用域通过函数来划分，又叫做函数作用域。<br>全局作用域：script标签下，全局变量、全局函数、可以在整个js中被读写。<br>局部作用域：function的{}里。在局部作用域中，用var\function声明的变量和函数，叫做局部变量、局部函数，只在当前作用域起作用，如果出了{}会被销毁。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局作用域</span></span><br><span class="line"><span class="keyword">var</span> n = <span class="number">10</span>; <span class="comment">// 全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 全局函数</span></span><br><span class="line">    <span class="comment">// 局部作用域</span></span><br><span class="line">    <span class="built_in">console</span>.log(n); <span class="comment">// 10</span></span><br><span class="line">    <span class="keyword">var</span> z = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(z); <span class="comment">// 1</span></span><br><span class="line">&#125;</span><br><span class="line">fn();</span><br><span class="line"><span class="built_in">console</span>.log(z); <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><h2 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h2><p>js的一种查找机制，决定了变量和函数向上一级作用域查找的过程。<br>查找过程：先找自身作用域，如果自身作用域有，直接返回，如果自身没有，往上一级作用域查找，直到到全局作用域，如果全局作用域也没有，报错is not defined</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">10</span>; <span class="comment">// 全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 局部作用域</span></span><br><span class="line">    <span class="keyword">var</span> z = <span class="number">20</span>; <span class="comment">// 局部变量</span></span><br><span class="line">    <span class="built_in">console</span>.log(n, z);  </span><br><span class="line">&#125;</span><br><span class="line">fn();</span><br></pre></td></tr></table></figure><h2 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h2><p>js在解析代码的时候，不是按照单纯的从上到下的顺序来执行</p><ol><li>预解析：找var、function，将var声明的变量的声明提到最前，function声明的函数整个存储在内存中</li><li>逐行解析：从上到下的顺序一行行执行代码。</li></ol><p>函数的形参在函数被调用的第一行代码优先执行, 形参接收实参, 执行函数体<br>函数每调用形成一个新的局部作用域, 代码的解析过程遵循预解析过程</p><h3 id="var"><a href="#var" class="headerlink" title="var"></a>var</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    解析过程:</span></span><br><span class="line"><span class="comment">        var a;</span></span><br><span class="line"><span class="comment">        console.log(a);</span></span><br><span class="line"><span class="comment">        a = 10;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="function"><a href="#function" class="headerlink" title="function"></a>function</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// function</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;函数1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;函数2&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    解析过程: </span></span><br><span class="line"><span class="comment">    function sum() &#123;</span></span><br><span class="line"><span class="comment">        console.log(&#x27;函数1&#x27;);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    function sum() &#123;</span></span><br><span class="line"><span class="comment">        console.log(&#x27;函数2&#x27;);</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment">    console.log(sum); 函数2</span></span><br><span class="line"><span class="comment">    console.log(sum); 函数2</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="var和function"><a href="#var和function" class="headerlink" title="var和function"></a>var和function</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var function 函数声明 字面量声明的区别</span></span><br><span class="line"><span class="keyword">var</span> fn = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(fn);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    解析过程:</span></span><br><span class="line"><span class="comment">        var fn;</span></span><br><span class="line"><span class="comment">        function fn() &#123;</span></span><br><span class="line"><span class="comment">            console.log(1);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        fn = &#x27;abc&#x27;;</span></span><br><span class="line"><span class="comment">        console.log(fn); abc</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="形参"><a href="#形参" class="headerlink" title="形参"></a>形参</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传参</span></span><br><span class="line"><span class="comment">// 函数的形参在函数被调用的第一行代码优先执行, 形参接收实参, 执行函数体</span></span><br><span class="line"><span class="comment">// 函数每调用形成一个新的局部作用域, 代码的解析过程遵循预解析过程</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">30</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;;</span><br><span class="line">fun(<span class="number">10</span>);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    解析过程:</span></span><br><span class="line"><span class="comment">        function fun(a) &#123;</span></span><br><span class="line"><span class="comment">            console.log(a);</span></span><br><span class="line"><span class="comment">            var a = 30;</span></span><br><span class="line"><span class="comment">            console.log(a);</span></span><br><span class="line"><span class="comment">            解析过程:</span></span><br><span class="line"><span class="comment">                var a;--&gt;声明形参 </span></span><br><span class="line"><span class="comment">                var a;</span></span><br><span class="line"><span class="comment">                a = 10; ---&gt; 接收实参</span></span><br><span class="line"><span class="comment">                console.log(a); // 10</span></span><br><span class="line"><span class="comment">                a = 30;</span></span><br><span class="line"><span class="comment">                console.log(a); // 30</span></span><br><span class="line"><span class="comment">        &#125;;</span></span><br><span class="line"><span class="comment">        fun(10);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h3><p>函数在执行的时候 就像一个小黑屋 里面的数据不能直接出来 如果想要出来需要越狱</p><p>函数的返回值: 每个函数执行后都会有返回值, 默认返回值 undefined就是函数调用的结果<br>接收函数的返回值: var 变量 = 函数();<br>想要将函数内的数据 在函数外能使用 需要将函数内的数据设置成返回值返回回来<br>设置函数的返回值:函数最后: return value;</p><h3 id="接收返回值"><a href="#接收返回值" class="headerlink" title="接收返回值"></a>接收返回值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = a();</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br></pre></td></tr></table></figure><h3 id="设置返回值"><a href="#设置返回值" class="headerlink" title="设置返回值"></a>设置返回值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置返回值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> mn = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">return</span> mn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> q = fn();</span><br><span class="line"><span class="built_in">console</span>.log(q);</span><br></pre></td></tr></table></figure><h3 id="return作用"><a href="#return作用" class="headerlink" title="return作用"></a>return作用</h3><p>设置函数的返回值: 函数最后: return value;<br>return: 结束函数 return后面的代码不执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">    <span class="comment">// 不执行</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> m = fn1();</span><br><span class="line"><span class="built_in">console</span>.log(m); <span class="comment">// &#x27;abc&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="返回多个"><a href="#返回多个" class="headerlink" title="返回多个"></a>返回多个</h4><p>return设置返回值的时候 一次只能返回一个数据 如果用,返回多个,只会返回最后一个;如果想要返回多个数据, 建议数组或者对象, 更推荐用对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// return 10, 20, 30;</span></span><br><span class="line">    <span class="comment">// return [10, 20, 30];</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        a: <span class="number">10</span>,</span><br><span class="line">        b: <span class="number">20</span>,</span><br><span class="line">        c: <span class="number">30</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> mn = fn2();</span><br><span class="line"><span class="built_in">console</span>.log(mn);</span><br></pre></td></tr></table></figure><h4 id="使用情况"><a href="#使用情况" class="headerlink" title="使用情况"></a>使用情况</h4><ol><li>封装函数 函数的最后去到的是一个数据</li><li>操作的对象 返回回来</li><li>函数内的数据 要在 函数外面用到的时候</li></ol><h4 id="返回值数据类型"><a href="#返回值数据类型" class="headerlink" title="返回值数据类型"></a>返回值数据类型</h4><p>返回值的数据类型可以是一切数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rType</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">90</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>:<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="keyword">return</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = rType();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><h2 id="封装步骤"><a href="#封装步骤" class="headerlink" title="封装步骤"></a>封装步骤</h2><ol><li>实现单个效果</li><li>声明空函数</li><li>单个效果放在空函数里</li><li>调用</li><li>分析不确定的项, 抽取参数</li><li>传参</li><li>设置返回值</li><li>接收返回值</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMax</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 假设最大值</span></span><br><span class="line">    <span class="keyword">var</span> max = data[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 2. 用这个值和数组的每一个值进行比较</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">        <span class="comment">// 如果比假设值大</span></span><br><span class="line">        <span class="keyword">if</span> (max &lt; data[i]) &#123;</span><br><span class="line">            max = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log(max);</span></span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> m = getMax(arr);</span><br><span class="line"><span class="built_in">console</span>.log(m);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第三天</title>
      <link href="2021/09/15/day3%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/15/day3%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第三天学习了条件语句，循环语句，对象的基本概念等等。</p><span id="more"></span><h1 id="day3"><a href="#day3" class="headerlink" title="day3"></a>day3</h1><h2 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h2><p>流程控制语句：代码按照什么顺序执行的语句。<br>默认语句：默认从上到下执行。<br>条件语句：多条分支中选择if if-else if-else-if switch<br>循环语句：for while do-while for-in<br>其他语句：break continue</p><h2 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><p>判断条件是否执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> core = prompt(<span class="string">&#x27;请输入成绩&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(core);</span><br><span class="line">如果core大于<span class="number">60</span> 弹出及格</span><br><span class="line"><span class="keyword">if</span> (core &gt; <span class="number">60</span>) &#123;</span><br><span class="line">    alert(<span class="string">&#x27;及格&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if-else"><a href="#if-else" class="headerlink" title="if-else"></a>if-else</h3><p>if(条件){<br>    条件为真的时候执行的代码;</p><p>}else{<br>    条件为假时执行的代码;<br>}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果core大于60 弹出及格 否则弹出继续努力</span></span><br><span class="line"><span class="keyword">if</span> (core &gt; <span class="number">60</span>) &#123;</span><br><span class="line">    alert(<span class="string">&#x27;及格&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;继续努力&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if-else-if"><a href="#if-else-if" class="headerlink" title="if-else-if"></a>if-else-if</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (core &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">    alert(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (core &gt;= <span class="number">70</span> &amp;&amp; core &lt; <span class="number">80</span>) &#123;</span><br><span class="line">    alert(<span class="string">&#x27;B&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (core &gt;= <span class="number">60</span> &amp;&amp; core &lt; <span class="number">70</span>) &#123;</span><br><span class="line">    alert(<span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;D&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>适用于条件和结果都单一时。<br>条件：判断某一个变量或者是某一个具体的值。<br>结果：指向的是一个具体的值。<br>break：防止穿透，如果不加，当条件匹配到一个符合的结果后，后于的结果都不匹配时，也会执行后边的代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (条件) &#123;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">1</span>:</span><br><span class="line">        当条件符合结果<span class="number">1</span>执行的代码;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">2</span>:</span><br><span class="line">        当条件符合结果<span class="number">2</span>执行的代码;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">3</span>:</span><br><span class="line">        当条件符合结果<span class="number">3</span>执行的代码;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        以上结果都不符合的时候 执行的代码;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//例子</span></span><br><span class="line"><span class="keyword">switch</span> (str) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">10</span> + <span class="number">20</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">10</span> - <span class="number">20</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">10</span> * <span class="number">20</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">10</span> / <span class="number">20</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;超出运算范围了&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分支嵌套"><a href="#分支嵌套" class="headerlink" title="分支嵌套"></a>分支嵌套</h3><p>两个及以上分支语句嵌套使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 弹出输入框 输入成绩 0-100</span></span><br><span class="line"><span class="keyword">var</span> core = prompt(<span class="string">&#x27;请输入成绩&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断成绩的可选范围</span></span><br><span class="line"><span class="keyword">if</span> (core &gt;= <span class="number">0</span> &amp;&amp; core &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (core &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        alert(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (core &gt;= <span class="number">70</span> &amp;&amp; core &lt; <span class="number">80</span>) &#123;</span><br><span class="line">        alert(<span class="string">&#x27;B&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (core &gt;= <span class="number">60</span> &amp;&amp; core &lt; <span class="number">70</span>) &#123;</span><br><span class="line">        alert(<span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">&#x27;D&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    alert(<span class="string">&#x27;请输入0-100之间的数字&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>将一段代码重复多次执行。</p><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p>for(初始化变量; 循环结束条件; 变量更新){<br>    执行的代码<br>}<br>初始化变量：var 变量=起始值; 数字0 1循环的次数从几开始的<br>循环结束的条件：条件为真时 循环执行 条件为假时 循环结束<br>变量更新：变量++ 变量–<br>注意：当心陷入死循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1--100</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从50输出到0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">50</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 循环结束的条件必须可用的 否则形成死循环</span></span><br><span class="line"><span class="comment">// for(var i = 5; i &lt; 10; i--)&#123;</span></span><br><span class="line"><span class="comment">//     console.log(i);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><h3 id="变异for"><a href="#变异for" class="headerlink" title="变异for"></a>变异for</h3><p>初始化变量;<br>for(; 循环条件; ){<br>​    循环体;<br>​    变量更新;<br>}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> j = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (; j &lt;= <span class="number">5</span>;) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(j);</span><br><span class="line">    j++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ol><li>变异格式中的两个分号不能省略。</li><li>初始化的变量都是全局变量。</li><li>循环执行完成后，变量会留在循环结束后的数值。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> j = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (; j &lt;= <span class="number">5</span>;) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(j);</span><br><span class="line">    j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(j); <span class="comment">// 6</span></span><br></pre></td></tr></table></figure><h3 id="渲染页面"><a href="#渲染页面" class="headerlink" title="渲染页面"></a>渲染页面</h3><p>数据一般是通过数据请求的方式由后台返回给我们，页面的数据一般都不是固定的数据。<br>多个数据的时候，一般使用数组。<br>数组有长度有下标，通过下标的方式从数组中取出对应下标的值。<br>取值：数组[下标]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="number">1.</span> 先布局页面 --&gt;</span><br><span class="line">&lt;</span><br><span class="line">ol &gt;</span><br><span class="line">    &lt;</span><br><span class="line">    !--<span class="number">2.</span> 注释掉页面的组成部分 --&gt;</span><br><span class="line">    &lt;</span><br><span class="line">    !-- &lt; li &gt; <span class="number">31</span> 个省市... &lt; /li&gt; &lt;</span><br><span class="line">    li &gt; 中国队有望递补... &lt; /li&gt; &lt;</span><br><span class="line">    li &gt; 中国队有望递补... &lt; /li&gt; &lt;</span><br><span class="line">    li &gt; 中国队有望递补... &lt; /li&gt; &lt;</span><br><span class="line">    li &gt; 中国队有望递补... &lt; /li&gt; --&gt; &lt;</span><br><span class="line">    /ol&gt; &lt;</span><br><span class="line">    script &gt;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">        数据一般都是通过数据请求的方式 由后台返回给我们</span></span><br><span class="line"><span class="comment">        页面的数据一般都不是固定数据</span></span><br><span class="line"><span class="comment">        数组、对象</span></span><br><span class="line"><span class="comment">        多个数据的时候一般用数组 </span></span><br><span class="line"><span class="comment">        var 变量 = [值, 值1, 值2, ... 值n];</span></span><br><span class="line"><span class="comment">        有长度有下标 通过下标的方式从数组中取出对应下标的值</span></span><br><span class="line"><span class="comment">        取值: 数组[下标]</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="string">&#x27;31个省市区...&#x27;</span>, <span class="string">&#x27;中国队有望递补男子4*100米&#x27;</span>, <span class="string">&#x27;苹果13真香吗?&#x27;</span>, <span class="string">&#x27;郑州市民再乘地铁后称鼻子酸酸的&#x27;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将数组的每一个数据添加到ol中</span></span><br><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> ol = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;ol&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(ol);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将数组的每一个数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">// 数组的指定下标的数据</span></span><br><span class="line">    <span class="built_in">console</span>.log(arr[i]);</span><br><span class="line">    <span class="comment">// 将内容添加到ol的内容中</span></span><br><span class="line">    ol.innerHTML += <span class="string">&#x27;&lt;li&gt;&#x27;</span> + arr[i] + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span><br><span class="line">&#125; &lt;</span><br><span class="line">/script&gt;</span><br></pre></td></tr></table></figure><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>初始化变量;<br>while(条件){<br>​    循环体;<br>​    变量更新;<br>}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while"><a href="#do-while" class="headerlink" title="do-while"></a>do-while</h3><p>初始化变量;<br>do{<br>​    循环体;<br>​    变量更新;<br>}whlie(循环条件);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> j = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(j, <span class="string">&#x27;j&#x27;</span>);</span><br><span class="line">    j++;</span><br><span class="line">&#125; <span class="keyword">while</span> (j &lt;= <span class="number">5</span>);</span><br></pre></td></tr></table></figure><h3 id="for和while"><a href="#for和while" class="headerlink" title="for和while"></a>for和while</h3><p>for明确循环次数，知道长度。<br>while不明确循环次数。</p><h3 id="while和do-while"><a href="#while和do-while" class="headerlink" title="while和do-while"></a>while和do-while</h3><p>while先判断后执行。<br>do-while先执行后判断。</p><h2 id="其他语句"><a href="#其他语句" class="headerlink" title="其他语句"></a>其他语句</h2><p>break防止穿透，结束整个循环；<br>continue结束本次循环，开始下一次循环。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 水饺: 20</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">5</span>) &#123;</span><br><span class="line">        <span class="comment">// break; // 吃到虫子 1-4</span></span><br><span class="line">        <span class="keyword">continue</span>; <span class="comment">// 掉到地上 1-4 6-20</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h2><p>for(外层初始化变量; 外层判断条件; 外层变量更新){<br>​    for(内层初始化变量; 内层判断条件; 内层变量更新){<br>​        内层循环体;<br>​    }<br>}<br>外层循环执行一次，内层循环执行一轮。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 行循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 列循环</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= <span class="number">5</span>; j++) &#123;</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">&#x27;⭐️&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 行结束之前添加换行</span></span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>用来储存无长度、无顺序的数据，一般用来做前后台交互。<br>{键: 值, 键: 值}  键值对<br>键建议加引号，不加也能用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;杨洋&#x27;</span>,</span><br><span class="line">    age: <span class="number">33</span>,</span><br><span class="line">    <span class="string">&#x27;height&#x27;</span>: <span class="number">188</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(user);</span><br><span class="line"><span class="comment">// 取值: 对象.键</span></span><br><span class="line"><span class="built_in">console</span>.log(user.name);</span><br><span class="line"><span class="comment">// console.log(user.&#x27;name&#x27;); // .后面不能直接加字符串</span></span><br><span class="line"><span class="comment">// 在js中 .相当于白勺的 .后面本身就是字符串 在整个js中都适用</span></span><br><span class="line"><span class="comment">// 取值: 对象[&#x27;键&#x27;/变量]</span></span><br><span class="line"><span class="built_in">console</span>.log(user[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;name&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(user[a]);</span><br><span class="line"><span class="comment">// 存值: 对象.键 = 值; 对象[&#x27;键&#x27;/变量] = 值;</span></span><br><span class="line">user.girlFriend = <span class="string">&#x27;迪丽热巴&#x27;</span>;</span><br><span class="line">user[<span class="string">&#x27;gf1&#x27;</span>] = <span class="string">&#x27;古力娜扎&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(user);</span><br></pre></td></tr></table></figure><h2 id="for-in"><a href="#for-in" class="headerlink" title="for-in"></a>for-in</h2><p>for(var 变量 in 数据){<br>​    变量: 键<br>​    数据[变量]: 值<br>}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> user) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key, user[key]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// forin不仅仅可以遍历对象 也可以遍历数组、集合</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> arr) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i, arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第二天</title>
      <link href="2021/09/14/day2%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/14/day2%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第二天学习了算数运算符、赋值运算符、比较运算符、逻辑运算符、获取元素的方法、鼠标事件、操作元素内容、操作属性、操作样式等知识。</p><span id="more"></span><h1 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h1><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><h3 id="基本的几个"><a href="#基本的几个" class="headerlink" title="基本的几个"></a>基本的几个</h3><p>基础就是加（+）减（-）乘（*）除（/）还有一个余（%）运算。</p><h3 id=""><a href="#" class="headerlink" title="++"></a>++</h3><p>在自身的基础上加1，可以放在变量的前边也可以放在变量的后边。z<br>前：先自加再执行其他的运算。<br>后：先执行其他的运算再自加。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">a++; <span class="comment">// 10 + 1 = 11 --&gt; a</span></span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 11</span></span><br><span class="line">++a; <span class="comment">// 11 + 1 --&gt; 12 --&gt; a</span></span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 12</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ++和其他运算放在一起的时候, ++在前, 先自加, 在执行其他运算, ++在后, 先运行其他运算, 在自加</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(b++); <span class="comment">// 输出和++放在一起 先输出b=10 在自加10+1=11</span></span><br><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(++c); <span class="comment">// 输出和++放在一起, 先自加10+1=11 在输出c=11</span></span><br><span class="line"><span class="built_in">console</span>.log(c); <span class="comment">// 11</span></span><br></pre></td></tr></table></figure><h3 id="–"><a href="#–" class="headerlink" title="–"></a>–</h3><p>在自身的基础上减1，可以放在变量的前边也可以放在变量的后边。<br>前：先自减再执行其他的运算。<br>后：先执行其他的运算再自减。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// --: 自减 可以放在前面可以放在后面</span></span><br><span class="line"><span class="keyword">var</span> d = <span class="number">10</span>;</span><br><span class="line">d--;</span><br><span class="line"><span class="built_in">console</span>.log(d); <span class="comment">// 9</span></span><br><span class="line">--d;</span><br><span class="line"><span class="built_in">console</span>.log(d); <span class="comment">// 8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// --和其他运算在一起的时候, --在前, 先自减, 在执行其他运算; --在后, 先执行其他运算, 在自减</span></span><br><span class="line"><span class="keyword">var</span> m = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(m--); <span class="comment">// 输出和-- 先输出m=10 再自减m=9</span></span><br><span class="line"><span class="built_in">console</span>.log(m); <span class="comment">// 9</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> n = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(--n); <span class="comment">// 先自减 m = 9  再输出m=9</span></span><br></pre></td></tr></table></figure><h3 id="隐式转换规则"><a href="#隐式转换规则" class="headerlink" title="隐式转换规则"></a>隐式转换规则</h3><p>隐式转化主要发生在算数运算符之间</p><ul><li>有字符串的加法就是字符串拼接。</li><li>没有字符串的加法的其他运算，尽可能的将数据类型都转换成数值类型后在计算，隐式调用Number方法。</li><li>数值之间正常计算</li><li>遇到复杂的数据类型，会先调用数据的toString方法转换成字符串之后，再遵循上述的规则。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> + <span class="string">&#x27;a&#x27;</span>); <span class="comment">// 1a</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;a&#x27;</span> + <span class="literal">true</span>); <span class="comment">// atrue</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;a&#x27;</span> + <span class="literal">null</span>); <span class="comment">// anull</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;a&#x27;</span> - <span class="number">10</span>); <span class="comment">// NaN - 10 = NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> * <span class="number">100</span>); <span class="comment">// 1 * 100 = 100</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">100</span> / <span class="literal">null</span>); <span class="comment">// 100 / 0 = Infinity</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;a&#x27;</span> + &#123;&#125;); <span class="comment">// a[object Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;a&#x27;</span> + [<span class="number">1</span>, <span class="number">2</span>]); <span class="comment">// a1,2</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;10&#x27;</span>;</span><br><span class="line">a++;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 11</span></span><br></pre></td></tr></table></figure><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>常见的有= += -= *= /= %=<br>将等号右边的值赋值给等号左边。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; <span class="comment">// 将10给了a</span></span><br><span class="line"><span class="comment">// a+=b: a = a + b;</span></span><br><span class="line">a += <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 110</span></span><br><span class="line">a -= <span class="number">20</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 90</span></span><br><span class="line">a *= <span class="number">2</span>; <span class="comment">// a = a * 2;</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">a /= <span class="number">3</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 60</span></span><br><span class="line">a %= <span class="number">50</span>; <span class="comment">// a = a % 50; </span></span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>常见的有：&gt; &gt;= &lt; &lt;=</p><p>用左右两边的数据进行比较判断，如等式成立，返回true，否则返回false。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> &gt; <span class="number">2</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">2</span> &gt;= <span class="number">1</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> &lt; <span class="number">2</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> &lt;= <span class="number">2</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>== ===用于数据的比较判断<br>== 只比较数值是否相等<br>=== 比较值的同时，还比较数据类型是否一致。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// == ===用于数据的比较判断</span></span><br><span class="line"><span class="comment">// == 只比较值是否相等</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> == <span class="number">1</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> == <span class="string">&#x27;1&#x27;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="comment">// === 比较值是否相等 比较数据类型是否一致</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> === <span class="string">&#x27;1&#x27;</span>); <span class="comment">// 值相等 数据类型不等 false</span></span><br></pre></td></tr></table></figure><p>!= 比较值是否不相等，不比较类型<br>！== 比较值是否不相等，同时比较数据类型是否不一致</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// !=: 只比较值是否不相等 </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> != <span class="string">&#x27;1&#x27;</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> != <span class="number">2</span>); <span class="comment">// true</span></span><br><span class="line"><span class="comment">// !==: 比较值是否不相等 比较数据类型是否不一致</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> !== <span class="number">1</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> !== <span class="string">&#x27;1&#x27;</span>); <span class="comment">// 数值1 !== 字符串1 值相等 数据类型不等 true</span></span><br></pre></td></tr></table></figure><p>字符串的比较：从左往右依次比较每一个字符的ASCII码</p><p>‘’空字符串–0<br>‘0’–48<br>‘9’–57<br>‘A’–65<br>‘Z’–90<br>‘a’–97<br>‘z’–122</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;10000&#x27;</span> &lt; <span class="string">&#x27;2&#x27;</span>); <span class="comment">// true 49 &lt; 50 ? true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;1000&#x27;</span> &lt; <span class="string">&#x27;1&#x27;</span>); <span class="comment">// 48 &lt; 0 ? false</span></span><br></pre></td></tr></table></figure><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>&amp;&amp; || ! 这三种</p><h3 id="amp-amp"><a href="#amp-amp" class="headerlink" title="&amp;&amp;"></a>&amp;&amp;</h3><p>左右两边各自有一个判断条件，如果两个条件都为真，返回true，如果有一个为假，返回false。（全真为真，一假为假）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> &amp;&amp; <span class="literal">false</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> &lt; <span class="number">2</span> &amp;&amp; <span class="number">2</span> &lt; <span class="number">3</span>); <span class="comment">// true &amp;&amp; true true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> &gt; <span class="number">2</span> &amp;&amp; <span class="number">2</span> &lt; <span class="number">3</span>); <span class="comment">// false &amp;&amp; true false</span></span><br></pre></td></tr></table></figure><h3 id="-1"><a href="#-1" class="headerlink" title="||"></a>||</h3><p>左右两边各自有一个判断条件，如果两个条件都为假，返回false，有一个为真返回true。（全假为假，一真为真）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> || <span class="literal">false</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> &lt; <span class="number">2</span> || <span class="number">2</span> &gt; <span class="number">3</span>); <span class="comment">// true || false true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> &gt; <span class="number">2</span> || <span class="number">2</span> &gt; <span class="number">3</span>); <span class="comment">// false || false false</span></span><br></pre></td></tr></table></figure><h3 id="-2"><a href="#-2" class="headerlink" title="!"></a>!</h3><p>原来是true则返回false，原来是false则返回true。<br>0 NaN 空字符串 null undefined为假</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(!<span class="string">&#x27;&#x27;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(!<span class="number">1</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(!&#123;&#125;); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="短路运算"><a href="#短路运算" class="headerlink" title="短路运算"></a>短路运算</h3><p>两个值选择一个值进行运算</p><h4 id="逻辑与短路"><a href="#逻辑与短路" class="headerlink" title="逻辑与短路"></a>逻辑与短路</h4><p>如果第一个添加为假，则第二个条件不执行，如果第一个条件为真，则执行第二个条件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>,</span><br><span class="line">    b = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> c = --a &amp;&amp; --b; <span class="comment">// --a a = 0 0是假</span></span><br><span class="line"><span class="built_in">console</span>.log(c, a, b);</span><br><span class="line"><span class="keyword">var</span> m = <span class="number">1</span>,</span><br><span class="line">    n = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> d = m-- &amp;&amp; n--; <span class="comment">// 1 1是真 (m--: m =0)  1 &amp;&amp; n-- n = 1 d = 1 n-1 = 0</span></span><br><span class="line"><span class="built_in">console</span>.log(d, m, n); <span class="comment">// 1 0 0</span></span><br></pre></td></tr></table></figure><h4 id="逻辑或短路"><a href="#逻辑或短路" class="headerlink" title="逻辑或短路"></a>逻辑或短路</h4><p>如果第一个条件为真，则第二个条件不执行，如果第二个条件为假，则执行第二个条件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = <span class="number">1</span>,</span><br><span class="line">    p = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> mn = o-- || p--; <span class="comment">// o-- --在后 1 || p-- o=0  1 || p-- 1为真 p--不执行</span></span><br><span class="line"><span class="built_in">console</span>.log(mn, o, p); <span class="comment">// 1 0 1</span></span><br></pre></td></tr></table></figure><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><p>条件? 条件为真时执行的代码: 代码为假时执行的代码。<br>代码只能有一句。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> &gt; <span class="number">2</span> ? alert(<span class="string">&#x27;哇、1你牛了啊&#x27;</span>) : alert(<span class="string">&#x27;还是2厉害&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><h3 id="通过id获取"><a href="#通过id获取" class="headerlink" title="通过id获取"></a>通过id获取</h3><p>通过id得到的是一个可以直接用的单独的一个元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="通过标签获取"><a href="#通过标签获取" class="headerlink" title="通过标签获取"></a>通过标签获取</h3><p>通过标签取得的是一个集合，不能直接使用(任何时候)。<br>集合：类数组，有下表，有长度，不能用数组的方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取li</span></span><br><span class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(lis); <span class="comment">// HTMLCollection(5) [li, li, li#box, li, li, box: li#box]</span></span><br><span class="line"><span class="built_in">console</span>.log(lis.length); <span class="comment">// 5个</span></span><br><span class="line"><span class="built_in">console</span>.log(lis[<span class="number">0</span>]); <span class="comment">// 得到第一个li</span></span><br><span class="line"><span class="comment">// 获取ul</span></span><br><span class="line"><span class="keyword">var</span> uls = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(uls); <span class="comment">// HTMLCollection [ul]</span></span><br><span class="line"><span class="built_in">console</span>.log(uls[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;ul&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(ul);</span><br><span class="line"><span class="comment">// 获取ul中的li</span></span><br><span class="line"><span class="keyword">var</span> lis1 = ul.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(lis1); <span class="comment">// HTMLCollection(5) [li, li, li#box, li, li, box: li#box]</span></span><br></pre></td></tr></table></figure><h3 id="通过类名获取"><a href="#通过类名获取" class="headerlink" title="通过类名获取"></a>通过类名获取</h3><p>通过标签取得的是一个集合，不能直接使用(任何时候)。<br>此方法在ie8+时适用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过one获取元素</span></span><br><span class="line"><span class="keyword">var</span> ones = ul.getElementsByClassName(<span class="string">&#x27;one&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(ones);</span><br></pre></td></tr></table></figure><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><h3 id="三部曲"><a href="#三部曲" class="headerlink" title="三部曲"></a>三部曲</h3><ol><li>找元素，获取到需要操作的元素。</li><li>加事件</li><li>具体要做的操作</li></ol><p>如果获取到的是一个集合的话，需要通过下标得到具体的元素以后才能添加具体的事件，否则没有效果。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取 div</span></span><br><span class="line"><span class="comment">// 集合一定要通过下标获取到具体的元素之后 才能添加事件 否则没有效果</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(div);</span><br><span class="line"><span class="comment">// 2. 加事件</span></span><br><span class="line">div.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 3. 具体要做的操作</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;点击&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="鼠标-事件"><a href="#鼠标-事件" class="headerlink" title="鼠标-事件"></a>鼠标-事件</h3><ol><li>单击：onclick</li><li>双击：ondblclick</li><li>划入：onmouseenter onmouserover</li><li>划出：onmouseleave onmouserout</li><li>按下：onmousedown</li><li>抬起：onmouseup</li><li>移动：onmousemove</li><li>右键菜单：oncontextmenu</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取 div</span></span><br><span class="line"><span class="comment">// 集合一定要通过下标获取到具体的元素之后 才能添加事件 否则没有效果</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(div);</span><br><span class="line"><span class="comment">// 2. 加事件</span></span><br><span class="line">div.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 3. 具体要做的操作</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;点击&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">div.ondblclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;双击&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 划入</span></span><br><span class="line">div.onmouseenter = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;enter&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">div.onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;over&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 划出</span></span><br><span class="line">div.onmouseleave = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;leave&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">div.onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;out&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 按下</span></span><br><span class="line">div.onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;down&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">div.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;up&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 移动</span></span><br><span class="line">div.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;move&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 右键</span></span><br><span class="line">div.oncontextmenu = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;menu&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="over和enter的区别"><a href="#over和enter的区别" class="headerlink" title="over和enter的区别"></a>over和enter的区别</h4><p>enter：子元素不会触发父元素身上的事件<br>over：子元素会触发父元素身上的事件<br>leave和out也一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取元素</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(div);</span><br><span class="line"><span class="comment">// 2. 加事件 元素.事件 = function()&#123;&#125;</span></span><br><span class="line">div.onmouseenter = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;enter&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">div.onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;over&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="操作元素内容"><a href="#操作元素内容" class="headerlink" title="操作元素内容"></a>操作元素内容</h2><h3 id="单标签"><a href="#单标签" class="headerlink" title="单标签"></a>单标签</h3><p>单表签中只有表单有元素的内容，写在value中。<br>获取：var 变量=元素.value;<br>设置：元素.value=值;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取输入框</span></span><br><span class="line"><span class="keyword">var</span> inp = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(inp);</span><br><span class="line"><span class="comment">// 2. 获取:  var 变量 = 元素.value;</span></span><br><span class="line"><span class="keyword">var</span> txt = inp.value;</span><br><span class="line"><span class="built_in">console</span>.log(txt);</span><br><span class="line"><span class="comment">// 3. 设置: 元素.value = 值;</span></span><br><span class="line">inp.value = <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="comment">// 4. 操作下拉列表</span></span><br><span class="line"><span class="comment">// 通过select的value直接拿到当前选中值</span></span><br><span class="line"><span class="keyword">var</span> sel = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;select&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(sel);</span><br><span class="line"><span class="keyword">var</span> city = sel.value;</span><br><span class="line"><span class="built_in">console</span>.log(city);</span><br><span class="line">sel.value = <span class="string">&#x27;广州&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="双标签"><a href="#双标签" class="headerlink" title="双标签"></a>双标签</h3><p>获取：var 变量名=元素.innerHTML/InnerText;<br>设置：变量名.innerHTML/InnerText=值</p><p>innerHTML可以识别标签，另一个不可以，都是操作闭合标签，后边的会覆盖前边的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取div</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(div);</span><br><span class="line"><span class="comment">// 2. 获取内容</span></span><br><span class="line"><span class="keyword">var</span> txt = div.innerText;</span><br><span class="line"><span class="built_in">console</span>.log(txt);</span><br><span class="line"><span class="keyword">var</span> html = div.innerHTML;</span><br><span class="line"><span class="built_in">console</span>.log(html);</span><br><span class="line"><span class="comment">// 3. 设置内容</span></span><br><span class="line"><span class="comment">// div.innerText = &#x27;&lt;i&gt;这是一个斜体标签&lt;/i&gt;&#x27;;</span></span><br><span class="line"><span class="comment">// div.innerHTML = &#x27;&lt;i&gt;这是一个斜体标签1111&lt;/i&gt;&#x27;;</span></span><br><span class="line"><span class="comment">// 4. 基于原有内容基础上来设置 元素.innerHTML/innerText = 原内容 + 新内容;</span></span><br><span class="line">div.innerText = txt + <span class="string">&#x27;&lt;i&gt;这是斜体标签&lt;/i&gt;&#x27;</span>;</span><br><span class="line">div.innerHTML = html + <span class="string">&#x27;&lt;i&gt;这是斜体标签111&lt;/i&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="操作属性"><a href="#操作属性" class="headerlink" title="操作属性"></a>操作属性</h2><p>获取：var 变量名=元素.属性名;<br>设置：元素.属性名=值;<br>所有的属性都可以用上述的方式操作，其中class例外，由于class关键字，不能直接使用，使用className。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取元素</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(div);</span><br><span class="line"><span class="comment">// 2. 获取</span></span><br><span class="line"><span class="keyword">var</span> id = div.id;</span><br><span class="line"><span class="built_in">console</span>.log(id);</span><br><span class="line"><span class="built_in">console</span>.log(div.title); <span class="comment">// div</span></span><br><span class="line"><span class="built_in">console</span>.log(div.className); <span class="comment">// one</span></span><br><span class="line"><span class="comment">// 3. 设置 元素.属性名 = 值;</span></span><br><span class="line">div.id = <span class="string">&#x27;wrap&#x27;</span>;</span><br><span class="line"><span class="comment">// 4. 在轮播图中 设置当前被选中</span></span><br><span class="line">div.className = <span class="string">&#x27;active&#x27;</span>;</span><br><span class="line"><span class="comment">// 获取img</span></span><br><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(img);</span><br><span class="line"><span class="comment">// 设置地址</span></span><br><span class="line">img.src = <span class="string">&#x27;./img/2.jpg&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="操作样式"><a href="#操作样式" class="headerlink" title="操作样式"></a>操作样式</h2><h3 id="单个样式操作"><a href="#单个样式操作" class="headerlink" title="单个样式操作"></a>单个样式操作</h3><p>只做设置不做获取<br>通过js设置的样式都是行内样式。<br>元素.style.属性名=值;<br>在js中，连字符不能使用，用驼峰命名法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取div</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(div);</span><br><span class="line"><span class="comment">// 2. 设置样式</span></span><br><span class="line">div.style.width = <span class="string">&#x27;200px&#x27;</span>;</span><br><span class="line">div.style.height = <span class="string">&#x27;200px&#x27;</span>;</span><br><span class="line">div.style.background = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line">div.style.fontSize = <span class="string">&#x27;30px&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="批量设置样式"><a href="#批量设置样式" class="headerlink" title="批量设置样式"></a>批量设置样式</h3><p>元素.style.cssText=’属性名:属性值,属性名:属性值’<br>此方法会覆盖原来标签上的行内样式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div.style.cssText = <span class="string">&#x27;width: 300px;height: 300px; background: skyblue; font-size: 50px;&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习第一天</title>
      <link href="2021/09/13/day1%E8%87%AA%E6%80%BB/"/>
      <url>2021/09/13/day1%E8%87%AA%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>第一天初步了解了js的相关知识，有数据类型，变量，类型转换，隐式转换方法，运算符等等。</p><span id="more"></span><h1 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h1><h2 id="JavaScript和ECMScript的关系"><a href="#JavaScript和ECMScript的关系" class="headerlink" title="JavaScript和ECMScript的关系"></a>JavaScript和ECMScript的关系</h2><p>前者是后者的体现，后者是前者的语法标准。</p><h2 id="DOM与BOM"><a href="#DOM与BOM" class="headerlink" title="DOM与BOM"></a>DOM与BOM</h2><p>DOM：Doucment Object Modal文档对象模型。<br>BOM：Borwser Object Modal浏览器对象模型。</p><h2 id="JS的概念与特点"><a href="#JS的概念与特点" class="headerlink" title="JS的概念与特点"></a>JS的概念与特点</h2><ul><li>概念：js是基于对象和事件驱动的解释性脚本语言。</li><li>特点：</li><li><ul><li>基于对象：一切皆为对象，可以使用自己创建出来的对象。</li></ul></li><li><ul><li>事件驱动：以事件作为驱动</li></ul></li><li><ul><li>解释性：相对于编译性来说，不需要打包编译直接在浏览器中执行</li></ul></li><li><ul><li>跨平台：只要浏览器支持js就行，与电脑系统无关。</li></ul></li><li><ul><li>相对安全：同源策略限制</li></ul></li></ul><h2 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h2><h3 id="行内"><a href="#行内" class="headerlink" title="行内"></a>行内</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">&#x27;alert(&quot;hello wrold&quot;)&#x27;</span>&gt;</span>点我出现弹窗<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>alert为浏览器弹窗。</p><h3 id="内嵌"><a href="#内嵌" class="headerlink" title="内嵌"></a>内嵌</h3><p>使用script双标签，写在页面任何位置都可以。当前学习阶段建议写在body的结束标签之前。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;box&#x27;</span>)</span></span><br><span class="line"><span class="javascript">    box.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        box.style.backgroundColor = <span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外链"><a href="#外链" class="headerlink" title="外链"></a>外链</h3><p>使用script双标签，在开始标签中使用src属性，给定.js文件的路径。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js的引入.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：标签内部写代码，代码不会被执行。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>块注释：/* 块注释内容 */<br>快捷键为 ctrl+shift+/。但是我的电脑为alt+shift+A。</p><p>行注释：// 注释内容<br>快捷键为 ctrl+/</p><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>分为输出调试和断点调试。</p><blockquote><p>输出调试</p></blockquote><ol><li><p>alert警告框</p></li><li><p>prompt带有输入框的对话框。输入内容为返回值，返回值为string。点击取消的话返回值为null。</p></li><li><p>document.write()直接输出在页面，多个值用逗号隔开。</p></li><li><p>cosole.log()输出在控制台，多个值用逗号隔开。此方法最常用。</p></li></ol><blockquote><p>断点调试</p></blockquote><p>浏览器右键 –&gt; source —&gt; 打开要调试的文件 —&gt; 行数前点一下 (蓝色箭头、红色圆点) —&gt; 刷新 –&gt; 点击三角箭头。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>用来储存数据的容器，使用var声明。</p><h3 id="声明方式"><a href="#声明方式" class="headerlink" title="声明方式"></a>声明方式</h3><h4 id="先声明，后赋值"><a href="#先声明，后赋值" class="headerlink" title="先声明，后赋值"></a>先声明，后赋值</h4><p>var 变量名；<br>变量名=值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num;</span><br><span class="line">num = <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="声明同时赋值"><a href="#声明同时赋值" class="headerlink" title="声明同时赋值"></a>声明同时赋值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">34</span>;</span><br></pre></td></tr></table></figure><h4 id="多个声明"><a href="#多个声明" class="headerlink" title="多个声明"></a>多个声明</h4><p>var 变量名1=值, 变量名2=值, 变量名3=值, …,</p><h4 id="连等声明"><a href="#连等声明" class="headerlink" title="连等声明"></a>连等声明</h4><p>var 变量名1=变量名2=值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n1 = n2 = <span class="number">34</span>;</span><br></pre></td></tr></table></figure><h3 id="声明注意"><a href="#声明注意" class="headerlink" title="声明注意"></a>声明注意</h3><p>要注意命名规范，不能使用数字开头，不能使用关键字，不能与已存在的变量名重复，遵循驼峰命名法，使用有语义化的名字。</p><p>只声名不赋值输出为undefined，不用var声明的为全局变量。既不声明，也不赋值，直接报错。</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>五大基础：number，string，boolean，null，undefined。<br>一个复杂：object，array，function。</p><p>判断数据类型：<br>typeof 数据</p><h3 id="number"><a href="#number" class="headerlink" title="number"></a>number</h3><ul><li>整型：整数，正整数，负整数，0。</li><li>浮点数：小数点后至少有一位非0数字。</li><li>NaN：Not a Number 非数字。</li><li>进制数</li><li>特殊值</li></ul><p>NaN的特性：<br>    typeof NaN 返回值为number<br>    NaN 不等于任何值，包括本身。<br>    NaN 与任何值计算结构都是NaN</p><p>小数计算：<br>    当小数做计算时，由于计算机储存精度的问题，会出现偏差。</p><h3 id="string"><a href="#string" class="headerlink" title="string"></a>string</h3><p>字符串：使用成对引号包裹的内容。<br>当字符串赋值时，如果太长需要换行，使用反斜杠转义。<br>str.length可以得到字符串的字符个数。 浏览器右键 –&gt; source —&gt; 打开要调试的文件 —&gt; 行数前点一下 (蓝色箭头、红色圆点) —&gt; 刷新 –&gt; 点击三角箭头<br>str.charAt(index)可以得到第index+1位的字符。index为下标。从0开始。<br>str[index]方法同上，但是只有IE8+才能使用。<br>字符串拼接，如下代码为例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f1 = <span class="string">&#x27;21&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> f = <span class="string">&#x27;俺今年已经岁了&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> f2 = f1 + <span class="string">&#x27;俺今年已经&#x27;</span> + f1 + <span class="string">&#x27;岁了&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(f2)</span><br></pre></td></tr></table></figure><h3 id="boolean"><a href="#boolean" class="headerlink" title="boolean"></a>boolean</h3><p>此类型的值只有true（真）和false（假）。<br>通常在if判断中使用。</p><h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><p>只有一个值就是它本身</p><h3 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h3><p>未定义，声明未赋值时出现。<br>js中，null==undefined</p><h2 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h2><h3 id="强制转换number"><a href="#强制转换number" class="headerlink" title="强制转换number"></a>强制转换number</h3><blockquote><p>Number()</p></blockquote><p>可以null(0)和布尔值(true 1  false 0)以及字符串中的空字符、空格字符(0)、纯数字字符, 其他的都会被转成NaN</p><blockquote><p>parseInt()</p></blockquote><p>从左往右依次转换每一个字符, 遇到不能转换的或者到结尾就会结束转换, 保留整数当第一个字符就不能转换的时候返回NaN。</p><blockquote><p>parseFloat</p></blockquote><p>从左往右依次转换每一个字符, 遇到不能转换的或者到结尾就会结束转换, 保留小数当第一个字符就不能转换的时候 返回NaN。</p><h3 id="强制转换string"><a href="#强制转换string" class="headerlink" title="强制转换string"></a>强制转换string</h3><blockquote><p>toString()</p></blockquote><p>将其他数据类型，转成字符串 null和undefined不能转换.</p><blockquote><p>String()</p></blockquote><p>转换一切数据</p><blockquote><p>区别在于能否转换null和undefined</p></blockquote><h3 id="强制转换-boolean"><a href="#强制转换-boolean" class="headerlink" title="强制转换-boolean"></a>强制转换-boolean</h3><ul><li>正负数为true</li><li>0为false</li><li>NaN为false</li><li>空字符串（注意不是null）为false</li><li>空格符为true</li><li>字符串为true</li><li>null为false</li><li>undefined为fasle</li></ul><h2 id="隐式转换方法"><a href="#隐式转换方法" class="headerlink" title="隐式转换方法"></a>隐式转换方法</h2><h3 id="isNaN"><a href="#isNaN" class="headerlink" title="isNaN()"></a>isNaN()</h3><p>判断数据是否为非数字<br>隐式调用 Number 方法 如果Number转出来的不是NaN 返回false  是NaN 返回true</p><h3 id="toFixed"><a href="#toFixed" class="headerlink" title="toFixed()"></a>toFixed()</h3><p>保留小数，参数为保留几整数位，四舍五入。</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li>用来实现程序执行计算的符号 一般操作两个操作数及以上的符号</li><li>算术运算符: + - * / %(模) ++(自加) –(自减)</li><li>赋值运算符: = += -= *= /= %=</li><li>比较运算符: &gt; &gt;= &lt; &lt;= == === != !==</li><li>逻辑运算符: &amp;&amp;(与) ||(或) !(取反)</li><li>三目(元)运算符: 条件 ? 条件为真执行的代码 : 条件为假执行的代码;</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2d和3d</title>
      <link href="2021/09/06/2d%E4%B8%8E3d/"/>
      <url>2021/09/06/2d%E4%B8%8E3d/</url>
      
        <content type="html"><![CDATA[<p>本偏记录了2d和3d的相关使用</p><span id="more"></span><h1 id="2D与3D动画"><a href="#2D与3D动画" class="headerlink" title="2D与3D动画"></a>2D与3D动画</h1><h2 id="2d"><a href="#2d" class="headerlink" title="2d"></a>2d</h2><h3 id="过度动画"><a href="#过度动画" class="headerlink" title="过度动画"></a>过度动画</h3><p>css3的 <strong>transition</strong>允许css的属性值在一定的时间区间内平滑地过渡。这种效果可以在鼠标单击、获得焦点、被点击或对元 素任何改变中触发，并圆滑地以动画效果改变CSS的属性值 分别属性设置  </p><ul><li>transition­-property：检索或设置对象中的参与过渡的属性</li><li>transition-­duration：检索或设置对象过渡的持续时间</li><li>transition­-delay：检索或设置对象延迟过渡的时间</li><li>transition-­timing-­function：检索或设置对象中过渡的动 画类型, 默认ease</li></ul><p>transition-timing -function取值：</p><ul><li>linear 规定以相同速度开始至结束的过渡效果。</li><li>ease 规定慢速开始，然后变快，然后慢速结束的过渡效果。</li><li>ease-in 规定以慢速开始的过渡效果。</li><li>ease-out 规定以慢速结束的过渡效果。</li><li>ease-in-out 规定以慢速开始和结束的过渡效果。</li></ul><p>简写 :</p><ul><li>transition:all/具体属性值  运动时间s/ms  延迟时间s/ms  动画类型</li></ul><p>最简写</p><ul><li>transition: 运动时间s/ms</li></ul><h3 id="变换属性transform"><a href="#变换属性transform" class="headerlink" title="变换属性transform"></a>变换属性transform</h3><h4 id="位移"><a href="#位移" class="headerlink" title="位移"></a>位移</h4><p>相当于position:relative的效果</p><ul><li>translate(x, y) 同时向x轴y轴位移</li><li>translateX(x) 只向x轴位移，y轴不变</li><li>translateY(y) 只向y轴位移，x轴不变</li></ul><h4 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h4><ul><li>scale(x, y) x, y代表缩放的倍数, 小数代表缩小, 大于1代表放大, 如果只有一个值, 代表是x, y同时缩放一样的倍数</li><li>scaleX(x)</li><li>scaleY(y)</li></ul><h4 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h4><ul><li>rotateX(ndeg) 以x轴旋转（3d）</li><li>rotateY(ndeg) 以轴旋转（3d）</li><li>rotate(ndeg)以自身的一个点，2d旋转</li></ul><h4 id="斜切"><a href="#斜切" class="headerlink" title="斜切"></a>斜切</h4><ul><li>skewX(ndeg)</li><li>skewY(ndeg)</li><li>skew(xdeg, ydeg)</li></ul><h3 id="改变变形原点的位置"><a href="#改变变形原点的位置" class="headerlink" title="改变变形原点的位置"></a>改变变形原点的位置</h3><p>语法 : transform­-origin : x y</p><ul><li>方向关键字: left top right center bottom</li><li>百分比</li><li>length</li></ul><h2 id="3d"><a href="#3d" class="headerlink" title="3d"></a>3d</h2><h3 id="transform-­style"><a href="#transform-­style" class="headerlink" title="transform-­style"></a>transform-­style</h3><p>其中flat值为默认值，表示所有子元素在2D平面呈现。<br>preserve­-3d表示所有子元素在3D空间中呈现。<br>3d不能搭配overflow:hidden使用, 如果使用overflow:hidden, 相当于值是flat。</p><h3 id="景深"><a href="#景深" class="headerlink" title="景深"></a>景深</h3><p>语法 : perspective() 取值一般为500px-1200px<br>程序中实现的方法 perspective 元素距离 视线的距离（物体和眼睛的距离越小，近大远小的效果越明显）。</p><h3 id="transform"><a href="#transform" class="headerlink" title="transform"></a>transform</h3><h4 id="3d位移"><a href="#3d位移" class="headerlink" title="3d位移"></a>3d位移</h4><ul><li>translate3d(x, y, z)</li><li>translateZ(z)</li></ul><h4 id="3d旋转"><a href="#3d旋转" class="headerlink" title="3d旋转"></a>3d旋转</h4><p>rotate3d(x, y, z, a)(x, y, z建议取值0或1)</p><ul><li>x：是一个0到１之间的数值，主要用来描述元素围绕X轴旋转的矢量值；</li><li>y：是一个０到１之间的数值，主要用来描述元素围绕Y轴旋转的矢量值；</li><li>z：是一个０到１之间的数值，主要用来描述元素围绕Z轴旋转的矢量值；</li><li>a：是一个角度值，主要用来指定元素在3D空间旋转的角度，如果其值为正值，元素顺时针旋转，反之元素逆 时针旋转。</li></ul><h4 id="3d缩放"><a href="#3d缩放" class="headerlink" title="3d缩放"></a>3d缩放</h4><ul><li>scaleZ(z)</li><li>scale3d(x, y, z)</li></ul><p>注：scaleZ()和scale3d()函数单独使用时没有任何效果， 需要配合其他的变形函数一起使用才会有效果</p><h2 id="帧动画"><a href="#帧动画" class="headerlink" title="帧动画"></a>帧动画</h2><p>第一步: 制作运动动画的轨迹 , 需要配合animation绑定到选择器一起使用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> run(动画名称) &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">400px</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">如果插入两帧可以用 <span class="selector-tag">from</span> <span class="selector-tag">to</span>关键字 还可以用<span class="number">0%</span> <span class="number">100%</span>,</span><br><span class="line">如果插入多帧,</span><br><span class="line">用百分比</span><br></pre></td></tr></table></figure><h3 id="第一步-调用动画轨迹"><a href="#第一步-调用动画轨迹" class="headerlink" title="第一步 : 调用动画轨迹"></a>第一步 : 调用动画轨迹</h3><p>1.animation-­name 检索或设置对象所应用的动画名称</p><p>2.animation­-duration 检索或设置对象动画的持续时间</p><p>3.animation-­timing­-function 检索或设置对象动画的过渡类型</p><p>​linear/ease/ease­in/ease­out</p><p>4.animation-­delay 检索或设置对象动画延迟的时间</p><ul><li>正值的时候是停了多久开始运动</li><li>负值是立刻开始运动，且进行到设定时间的位置</li></ul><p>5.animation­-iteration-­count 检索或设置对象动画的循环次数</p><ul><li>number | infinite(无限次)</li></ul><p>6.animation­-direction 检索或设置对象动画在循环中是否反向运动</p><ul><li>normal：正常方向</li><li>reverse：反方向运行</li><li>alternate：动画先正常运行再反方向运行，并持续交替运行</li><li>alternate-­reverse：动画先反运行再正方向运行，并持续 交替运行</li></ul><h3 id="复合写法"><a href="#复合写法" class="headerlink" title="复合写法"></a>复合写法</h3><p>animation: name duration timing­function delay iteration­ count direction fill­mode;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>先了解less</title>
      <link href="2021/08/31/less%E7%9A%84%E5%88%9D%E4%BD%BF%E7%94%A8/"/>
      <url>2021/08/31/less%E7%9A%84%E5%88%9D%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>此篇文章记录了对less的基本了解，后续还会深入学习。</p><span id="more"></span><h1 id="less"><a href="#less" class="headerlink" title="less"></a>less</h1><p>less预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为css增加了一些编程的特性。</p><p>将css作为目标生成文件，然后开发者就只要使用这种语言进行编码工作。</p><p>使用css预处理器语言，可以让css更加简洁，适应性更强， 可读性更佳，更容易代码的维护等诸多好处。</p><h2 id="less定义变量"><a href="#less定义变量" class="headerlink" title="less定义变量"></a>less定义变量</h2><p>@变量名 : 值;</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@likeColor:</span><span class="number">#0f0</span>;</span><br><span class="line"><span class="variable">@fangX:</span>left;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="variable">@likeColor</span>;</span><br><span class="line"><span class="comment">// float: @fangTwo;</span></span><br><span class="line"><span class="selector-tag">margin-</span><span class="variable">@&#123;fangX&#125;</span>: <span class="selector-tag">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>备注: 变量作为属性名的一部分, **要加{}**;</p><h2 id="less导入其他的css文件"><a href="#less导入其他的css文件" class="headerlink" title="less导入其他的css文件"></a>less导入其他的css文件</h2><p>语法 : <code>@import &quot;reset.css&quot; ;</code></p><h2 id="less混入写法"><a href="#less混入写法" class="headerlink" title="less混入写法"></a>less混入写法</h2><p>混入可以将一个定义好的 class A 引入到另一个 class B 中，从而实现 class B 继承 class A 中的所有属性。</p><p>定义好的classA可以放参数</p><p>写一个类名a, 类型b里 引入 类名a;</p><p>那么b里面就有a的代码啦 类名a可以加一个参数可以加多个参数, 参数可以有默认值</p><p>// 不带参数 </p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.a</span>&#123;</span><br><span class="line"> <span class="attribute">width</span>:<span class="number">100px</span>; </span><br><span class="line"><span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="selector-class">.b</span>&#123;</span><br><span class="line"><span class="selector-class">.a</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>带一个参数的, 没有给默认值</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>(<span class="variable">@size</span>)&#123; </span><br><span class="line"><span class="attribute">border-radius</span>: <span class="variable">@size</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.b</span>&#123;</span><br><span class="line"><span class="comment">//使用的时候必须给参数  </span></span><br><span class="line">.<span class="selector-class">.border</span>(<span class="number">30px</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>带一个参数的, 并且还给了默认值</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>(<span class="variable">@size</span>:<span class="number">20px</span>)&#123; </span><br><span class="line"><span class="attribute">border-radius</span>: <span class="variable">@size</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.b</span>&#123;</span><br><span class="line"><span class="selector-class">.border</span><span class="comment">//第一种写法不给参数，默认为20px</span></span><br><span class="line"><span class="selector-class">.border</span>(<span class="number">50px</span>)<span class="comment">//第二种写法可以自己给一个参数，替换掉默认的20px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>// 带多个参数, 并且还给了默认值 多个参数用 @arguments</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.shadow</span>(<span class="variable">@x</span>:<span class="number">0</span>,<span class="variable">@y</span>:<span class="number">0</span>,<span class="variable">@blur</span>:<span class="number">1px</span>,<span class="variable">@color</span>:<span class="number">#f00</span>)&#123; </span><br><span class="line"><span class="attribute">box-shadow</span>:<span class="variable">@arguments</span>; </span><br><span class="line">&#125;  </span><br><span class="line"><span class="selector-class">.b</span>&#123;</span><br><span class="line"><span class="selector-class">.shadow</span>;<span class="comment">//使用给的默认值</span></span><br><span class="line"><span class="selector-class">.shadow</span>(<span class="number">5px</span>,<span class="number">5px</span>,<span class="number">5px</span>,<span class="number">5px</span>,<span class="number">#333</span>)<span class="comment">//也可以自己设置属性值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h2><p>&amp;: 表示承接上一级元素</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">     <span class="comment">// width: 100px;</span></span><br><span class="line">     <span class="attribute">width</span>: <span class="number">200px</span>-<span class="number">20</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">     <span class="attribute">background-color</span>: yellow;</span><br><span class="line">     <span class="selector-tag">span</span>&#123;</span><br><span class="line">         <span class="attribute">color</span>: blue;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="selector-tag">a</span>&#123;</span><br><span class="line">         <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">         <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">             <span class="attribute">color</span>: green;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="less继承"><a href="#less继承" class="headerlink" title="less继承"></a>less继承</h2><p>好处 : 类似群组选择器 语法 : &amp;:extend(. 类名)</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="variable">@likeColor</span>;</span><br><span class="line"><span class="selector-tag">margin-</span><span class="variable">@&#123;fangX&#125;</span>: <span class="selector-tag">50px</span>;</span><br><span class="line"><span class="selector-tag">margin-bottom</span>: <span class="selector-tag">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法一</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box2</span>&#123;</span><br><span class="line"><span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.box);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二 :</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box2</span>:<span class="selector-tag">extend</span>(.box)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="less中注释问题"><a href="#less中注释问题" class="headerlink" title="less中注释问题"></a>less中注释问题</h2><p>// 单行注释 编译后会忽略掉<br>/**/ 多行注释 编译后仍会保留</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>弹性布局</title>
      <link href="2021/08/31/%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90/"/>
      <url>2021/08/31/%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p>此文章记录了弹性布局的使用方法</p><span id="more"></span><h1 id="弹性布局"><a href="#弹性布局" class="headerlink" title="弹性布局"></a>弹性布局</h1><h2 id="弹性盒"><a href="#弹性盒" class="headerlink" title="弹性盒"></a>弹性盒</h2><p>弹性盒子是css3新的布局模式<br>引入弹性盒布局模型的目的是提供一种更加有效的方式 来对一个容器的子元素进行排版、对齐和分配空间。<br>应用场景 : 移动端。</p><h2 id="display-flex-inline-­flex"><a href="#display-flex-inline-­flex" class="headerlink" title="display: flex/inline-­flex"></a>display: flex/inline-­flex</h2><p>让当前盒子成为弹性盒子,控制子元素(项目)的布局,让子元素(项目)沿着主轴的方向进行对齐 ,默认的主轴是x轴 ,子元素类似于行内块元素,子元素的float,clear,vertical­align属性将失效。</p><h2 id="flex­-direction"><a href="#flex­-direction" class="headerlink" title="flex­-direction"></a>flex­-direction</h2><p>设置主轴的方向 </p><ul><li>row(x轴)</li><li>column(y轴)</li><li>row­-reverse 反转x轴</li><li>column- ­reverse 反转y轴</li></ul><p>备注: 主轴不一定是x轴,还可以是y轴,有一边是主轴,另外一边就是交叉轴（侧轴）。</p><h2 id="justify­-content"><a href="#justify­-content" class="headerlink" title="justify­-content"></a>justify­-content</h2><p>设置主轴的对齐方式</p><blockquote><ul><li>flex­-start : 主轴顶端对齐</li><li>flex-­end : 主轴的末端对齐</li><li>center 居中对齐</li><li>space-around : 平均分配 ，项目与项目之间的距离是项目与容器边界的距离的一倍，关键一倍</li><li>space-between :两端对齐</li><li>space-evenly :平均分配，没有那个一倍</li></ul></blockquote><h2 id="align-­items"><a href="#align-­items" class="headerlink" title="align-­items"></a>align-­items</h2><p>设置交叉轴（侧轴）的对齐方式</p><blockquote><ul><li>flex­-start : 侧轴顶端对齐</li><li>flex-­end : 侧轴的末端对齐</li><li>center 侧轴居中对齐</li><li>stretch : 如果子元素没有设置高,默认子元素的高会拉伸,和父元素的高一样</li><li>baseline 基线对齐</li></ul></blockquote><h2 id="flex­-wrap"><a href="#flex­-wrap" class="headerlink" title="flex­-wrap"></a>flex­-wrap</h2><p>控制子元素折行</p><blockquote><ul><li>nowrap 默认值(不折行)</li><li>wrap 折行</li><li>wrap­-reverse 反转折行</li></ul></blockquote><p>备注 : flex­-flow : flex-­direction flex­-wrap,的简写</p><h2 id="align­-content-扩展"><a href="#align­-content-扩展" class="headerlink" title="align­-content (扩展)"></a>align­-content (扩展)</h2><p>折行，行与行之间有间隙，去除间隙，控制侧轴对齐方式</p><blockquote><ul><li>flex­-start：顶端对齐，没有行间距</li><li>flex-­end：底对齐，没有行间距</li><li>center 居中，没有行间距</li><li>space­-between：两端对齐，中间自动分配</li><li>space-­around：自动分配距离</li></ul></blockquote><h2 id="align-­self"><a href="#align-­self" class="headerlink" title="align-­self"></a>align-­self</h2><p>调整自身在侧轴的对齐方式</p><blockquote><ul><li>flex­-start</li><li>flex­-end</li><li>center</li><li>stretch</li></ul></blockquote><h3 id="order"><a href="#order" class="headerlink" title="order"></a>order</h3><blockquote><p>定义项目的排列顺序。数值越小，排列越靠前，默认值为 0</p></blockquote><h2 id="flex­-grow"><a href="#flex­-grow" class="headerlink" title="flex­-grow"></a>flex­-grow</h2><blockquote><p>定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。</p></blockquote><h2 id="flex-­shrink属性"><a href="#flex-­shrink属性" class="headerlink" title="flex-­shrink属性"></a>flex-­shrink属性</h2><blockquote><p>定义项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多列布局</title>
      <link href="2021/08/09/%E5%A4%9A%E5%88%97%E5%B8%83%E5%B1%80/"/>
      <url>2021/08/09/%E5%A4%9A%E5%88%97%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<p>记录了多列布局的使用方法。</p><span id="more"></span><h2 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h2><ul><li><p>通过CSS3, 能够创建多个列来对文本进行布局一就像报纸那样</p></li><li><ul><li>column-count 规定元素应该被分隔的列数</li></ul><ul><li><p>column-width  该属性指定一个长度值，用于规定每个栏目的宽度</p></li><li><p>column-gap  规定列之间的间隔</p></li><li><p>column-rule  属性设置列之间的分隔线</p></li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">column-count</span>: <span class="number">3</span>;</span><br><span class="line">    <span class="attribute">column-width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">column-gap</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">column-rule</span>: <span class="number">1px</span> dashed red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>浏览器的私有前缀</title>
      <link href="2021/08/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%A7%81%E6%9C%89%E5%89%8D%E7%BC%80/"/>
      <url>2021/08/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%A7%81%E6%9C%89%E5%89%8D%E7%BC%80/</url>
      
        <content type="html"><![CDATA[<p>记录了浏览器的私有前缀，顺带记录了calc函数</p><span id="more"></span><h3 id="浏览器的私有前缀"><a href="#浏览器的私有前缀" class="headerlink" title="浏览器的私有前缀"></a><strong>浏览器的私有前缀</strong></h3><table><thead><tr><th>内核</th><th>私有前缀</th><th>浏览器</th></tr></thead><tbody><tr><td>Gecko</td><td>-moz-</td><td>火狐</td></tr><tr><td>Webkit</td><td>-webkit-</td><td>Chrome、Safari</td></tr><tr><td>Presto</td><td>-o-</td><td>Opera</td></tr><tr><td>Trident</td><td>-ms-</td><td>IE</td></tr></tbody></table><ul><li>-moz-border-radius:50px; 火狐浏览器识别</li><li>-webkit-border-radius:50px;谷歌浏览器识别</li><li>-o-border-radius:50px;欧朋浏览器识别</li><li>-ms-border-radius: 50%;IE浏览器识别</li><li>border-radius:50px;正常浏览器识别</li></ul><h3 id="calc函数-（实现不同单位之间换算）"><a href="#calc函数-（实现不同单位之间换算）" class="headerlink" title="calc函数 （实现不同单位之间换算）"></a>calc函数 （实现不同单位之间换算）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 缺点：兼容性差 */</span></span><br><span class="line"><span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">500px</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css选择器使用手册</title>
      <link href="2021/08/09/css%E7%9A%84%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>2021/08/09/css%E7%9A%84%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>此文档作为查找手册使用。</p><span id="more"></span><h1 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器"></a>css选择器</h1><table><thead><tr><th>选择器</th><th>例子</th><th>例子描述</th><th>CSS</th></tr></thead><tbody><tr><td>.class</td><td>.intro</td><td>选择class=”intro”的所有元素</td><td>1</td></tr><tr><td>#id</td><td>#firstname</td><td>选择id=”firstname”的所有元素</td><td>1</td></tr><tr><td>*</td><td>*</td><td>选择所有元素</td><td>2</td></tr><tr><td>element</td><td>p</td><td>选择所有p元素</td><td>1</td></tr><tr><td>element，element</td><td>div,p</td><td>选择所有div元素和所有p元素</td><td>1</td></tr><tr><td>element element</td><td>div p</td><td>选择div元素内部的所有p元素</td><td>1</td></tr><tr><td>element&gt;element</td><td>div&gt;p</td><td>选择父元素为div元素的所有p元素</td><td>2</td></tr><tr><td>element+element</td><td>div+p</td><td>选择紧接在div元素之后的p元素</td><td>2</td></tr><tr><td>[attribute]</td><td>[target]</td><td>选择带有target属性所有元素</td><td>2</td></tr><tr><td>[attribute=value]</td><td>[target=_blank]</td><td>选择target=”_blank”的所有元素</td><td>2</td></tr><tr><td>:link</td><td>a:link</td><td>选择所有未被访问的链接</td><td>1</td></tr><tr><td>:visited</td><td>a:visited</td><td>选择所有已被访问的链接</td><td>1</td></tr><tr><td>:active</td><td>a:active</td><td>选择点击那一刻的链接</td><td>1</td></tr><tr><td>:hover</td><td>a:hover</td><td>选择鼠标指针位于其上的链接</td><td>1</td></tr><tr><td>:focus</td><td>input:focus</td><td>选择获得焦点的input元素</td><td>2</td></tr><tr><td>:first-letter</td><td>p:first-letter</td><td>选择每个p元素的首字母</td><td>1</td></tr><tr><td>:first-line</td><td>p:first-line</td><td>选择每个p元素的首行</td><td>1</td></tr><tr><td>:first-child</td><td>li:first-child</td><td>选择属于父元素的第一个子元素的每个li元素</td><td>2</td></tr><tr><td>:before</td><td>p:before</td><td>在每个p元素的内容之前插入内容</td><td>2</td></tr><tr><td>:after</td><td>p:after</td><td>在每个p元素的内容之后插入内容</td><td>2</td></tr><tr><td>element1~element2</td><td>div~p</td><td>选择前面有div元素的p元素</td><td>3</td></tr><tr><td>[attribute^=value]</td><td>a[src^=”https”]</td><td>选择其src属性值以“https”开头的每个a元素</td><td>3</td></tr><tr><td>[attribute$=value]</td><td>a[src$=”.pdf”]</td><td>选择其src属性以“pdf”结尾的所有a元素</td><td>3</td></tr><tr><td>[attribute*=value]</td><td>a[src*=”abc”]</td><td>选择其src属性中包含“abc”子串的每个a元素</td><td>3</td></tr><tr><td>:nth-child(n)</td><td>p:nth-child(n)</td><td>选择属于其父元素的第二个子元素的每个p元素</td><td>3</td></tr><tr><td>:nth-last-child(n)</td><td>p:nth-last-child(n)</td><td>同上，从最后一个子元素开始计数</td><td>3</td></tr><tr><td>:nth-of-type(n)</td><td>p:nth-of-type(n)</td><td>选择属于其父元素第二个p元素的每个p元素</td><td>3</td></tr><tr><td>:nth-last-of-type(n)</td><td>p:nth-last-of-type(n)</td><td>同上，但是从最后一个子元素开始计数</td><td>3</td></tr><tr><td>:last-child</td><td>li:last-child</td><td>选择属于其父元素最后一个子元素每个li元素</td><td>3</td></tr><tr><td>:root</td><td>:root</td><td>选择文档的根元素</td><td>3</td></tr><tr><td>:empty</td><td>p:empty</td><td>选择没有子元素的每个p元素（包括文本节点，空格，换行也不可以）</td><td>3</td></tr><tr><td>:target</td><td>#news:target</td><td>选择当前活动的#news元素</td><td>3</td></tr><tr><td>:enabled</td><td>input:enabled</td><td>选择每个启用的input元素</td><td>3</td></tr><tr><td>:disabled</td><td>input:disabled</td><td>选择每个禁用的input元素</td><td>3</td></tr><tr><td>:checked</td><td>input:checked</td><td>选择每个被选中的input元素</td><td>3</td></tr><tr><td>:not(selector)</td><td>:not(p)</td><td>选择非p元素的每个元素，需要设定p元素属性</td><td>3</td></tr><tr><td>::selection</td><td>::selection</td><td>选择被用户选取的元素部分</td><td>3</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式常用的一些</title>
      <link href="2021/08/09/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9B%B8%E5%85%B3/"/>
      <url>2021/08/09/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>此文档作为查找手册使用。</p><span id="more"></span><ul><li><ul><li><strong>校验数字的表达式</strong></li></ul><ul><li>1 数字：^[0-9]*$</li><li>2 n位的数字：^\d{n}$</li><li>3 至少n位的数字：^\d{n, }$</li><li>4 m-n位的数字：^\d{m, n}$</li><li>5 零和非零开头的数字：^(0|[1-9][0-9]*)$</li><li>6 非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1, 2})?$</li><li>7 带1-2位小数的正数或负数：^(-)?\d+(.\d{1, 2})?$</li><li>8 正数、负数、和小数：^(-|+)?\d+(.\d+)?$</li><li>9 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$</li><li>10 有1~3位小数的正实数：^[0-9]+(.[0-9]{1, 3})?$</li><li>11 非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]<em>){1, 3}$ 或 ^+?[1-9][0-9]</em>$</li><li>12 非零的负整数：^-[1-9][]0-9”<em>$ 或 ^-[1-9]\d</em>$</li><li>13 非负整数：^\d+$ 或 ^[1-9]\d*|0$</li><li>14 非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$</li><li>15 非负浮点数：^\d+(.\d+)?$ 或 ^[1-9]\d<em>.\d</em>|0.\d*[1-9]\d*|0?.0+|0$</li><li>16 非正浮点数：^((-\d+(.\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\d<em>.\d</em>|0.\d*[1-9]\d*))|0?.0+|0$</li><li>17 正浮点数：^[1-9]\d<em>.\d</em>|0.\d*[1-9]\d*$ 或 ^(([0-9]+.[0-9]<em>[1-9][0-9]</em>)|([0-9]<em>[1-9][0-9]<em>.[0-9]+)|([0-9]</em>[1-9][0-9]</em>))$</li><li>18 负浮点数：^-([1-9]\d<em>.\d</em>|0.\d*[1-9]\d*)$ 或 ^(-(([0-9]+.[0-9]<em>[1-9][0-9]</em>)|([0-9]<em>[1-9][0-9]<em>.[0-9]+)|([0-9]</em>[1-9][0-9]</em>)))$</li><li>19 浮点数：^(-?\d+)(.\d+)?$ 或 ^-?([1-9]\d<em>.\d</em>|0.\d*[1-9]\d*|0?.0+|0)$</li></ul></li><li><ul><li><strong>校验字符的表达式</strong></li></ul><ul><li>1 汉字：^[\u4e00-\u9fa5]{0, }$</li><li>2 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4, 40}$</li><li>3 长度为3-20的所有字符：^.{3, 20}$</li><li>4 由26个英文字母组成的字符串：^[A-Za-z]+$</li><li>5 由26个大写英文字母组成的字符串：^[A-Z]+$</li><li>6 由26个小写英文字母组成的字符串：^[a-z]+$</li><li>7 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$</li><li>8 由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3, 20}$</li><li>9 中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$</li><li>10 中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2, 20}$</li><li>11 可以输入含有^%&amp;’, ; =?$&quot;等字符：[^%&amp;’, ; =?$\x22]+</li><li>12 禁止输入含有<del>的字符：[^</del>\x22]+</li></ul></li><li><ul><li><strong>特殊需求表达式</strong></li></ul><ul><li>1 Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)<em>.\w+([-.]\w+)</em>$</li><li>2 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0, 62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0, 62})+/.?</li><li>3 InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+.)+[\w-]+(/[\w-./?%&amp;=]*)?$</li><li>4 手机号码：^(13[0-9]|14[0-9]|15[0-9]|16[0-9]|17[0-9]|18[0-9]|19[0-9])\d{8}$ (由于工信部放号段不定时，所以建议使用泛解析 ^([1][3, 4, 5, 6, 7, 8, 9])\d{9}$)</li><li>5 电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^((\d{3, 4}-)|\d{3.4}-)?\d{7, 8}$</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>圣杯与双飞翼</title>
      <link href="2021/08/09/%E5%9C%A3%E6%9D%AF%E5%B8%83%E5%B1%80%E4%B8%8E%E5%8F%8C%E9%A3%9E%E7%BF%BC%E5%B8%83%E5%B1%80/"/>
      <url>2021/08/09/%E5%9C%A3%E6%9D%AF%E5%B8%83%E5%B1%80%E4%B8%8E%E5%8F%8C%E9%A3%9E%E7%BF%BC%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<p>此文档记录了两种经典的布局。。</p><span id="more"></span><h2 id="圣杯布局和双飞翼布局"><a href="#圣杯布局和双飞翼布局" class="headerlink" title="圣杯布局和双飞翼布局"></a>圣杯布局和双飞翼布局</h2><ul><li>圣杯布局和双飞翼布局目的都是用来实现三栏布局，左右两栏固定宽，中间栏自适应的效果</li><li>实现思路：</li></ul><p>​      设置 .left .center .right 三列</p><p>​      顺序： 为了使主体内容优先加载，需要把.center放在最前面</p><p>   圣杯布局</p><p>​            1.三个盒子，左侧固定，右侧固定，中间自适应100%，中间部分先解析,加浮动</p><p>​            2.左侧盒子设置margin-left:-100%;右侧盒子设置margin-left:-自身宽度;</p><p>​            3.给父标签加左右padding: 0 300px 0 200px;，再给左右侧盒子加相对定位。</p><p>​        缺点：当缩小到中间部分宽度小于左侧部分时候，布局会发生混乱</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    * &#123;</span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .center &#123;</span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: <span class="number">#009</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .left &#123;</span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: <span class="number">#909</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">      <span class="attribute">left</span>: -<span class="number">200px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .right &#123;</span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">       <span class="attribute">background-color</span>: <span class="number">#009009</span>;</span></span><br><span class="line"><span class="css">       <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">       <span class="attribute">margin-left</span>: -<span class="number">300px</span>;</span></span><br><span class="line"><span class="css">       <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">       <span class="attribute">left</span>: <span class="number">300px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .clearfix:after &#123;</span><br><span class="line"><span class="css">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">      <span class="attribute">clear</span>: both;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .wrap &#123;</span><br><span class="line"><span class="css">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">300px</span> <span class="number">0</span> <span class="number">200px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap clearfix&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span>center<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 双飞翼布局</p><p>​            1.三个盒子，左侧固定，右侧固定，中间自适应100%，中间先解析，加浮动</p><p>​            2.左侧设置margin-left:-100%;右侧设置margin-left:-自身宽度;</p><p>​            3. 给中间.center添加一层子元素 .inner给其添加外边距 margin:0 300px 0 200px;</p><p>​        缺点：相对于圣杯布局多嵌套一层标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    * &#123;</span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .center &#123;</span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: <span class="number">#090</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .left &#123;</span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: <span class="number">#009</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .right &#123;</span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: <span class="number">#909</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin-left</span>: -<span class="number">300px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .clearfix:after &#123;</span><br><span class="line"><span class="css">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">      <span class="attribute">clear</span>: both;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .inner &#123;</span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">300px</span> <span class="number">0</span> <span class="number">200px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap clearfix&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span>center<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css Hack</title>
      <link href="2021/08/09/CSS%20Hack/"/>
      <url>2021/08/09/CSS%20Hack/</url>
      
        <content type="html"><![CDATA[<p>此东西不常用，但是需要了解。</p><span id="more"></span><h2 id="CSS-Hack"><a href="#CSS-Hack" class="headerlink" title="CSS Hack"></a>CSS Hack</h2><ul><li><p>条件Hack</p></li><li><ul><li><p>大于：gt</p></li><li><p>大于或等于：gte</p></li><li><p>小于：lt</p></li><li><p>小于或等于：lte</p><p>​    &lt;!–[if IE]&gt;</p><p>​    &lt;![endif]–&gt;</p></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!--[if IE]&gt;</span></span><br><span class="line"><span class="comment">       &lt;style&gt;</span></span><br><span class="line"><span class="comment">         div </span></span><br><span class="line"><span class="comment">         &#123;</span></span><br><span class="line"><span class="comment">           width: 200px;</span></span><br><span class="line"><span class="comment">           height: 200px;</span></span><br><span class="line"><span class="comment">           border: 1px solid;</span></span><br><span class="line"><span class="comment">         &#125;</span></span><br><span class="line"><span class="comment">          &lt;/style&gt;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只有IE6以上，才能看到应用了test类的标签是红色文本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if gt IE 6]&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;style&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">​        .test &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">​              color:red;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">​        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">​      &lt;/style&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure><p><strong>IE10以上已经将条件注释移除，使用时要注意</strong></p><ul><li><p>属性级Hack</p></li><li><ul><li><ul><li>_ 下划线：选择IE6及以下</li><li>*：选择IE7及以下</li><li>\0：选择ie8以上</li></ul></li></ul></li><li><ul><li><p>color:red;//所有浏览器可识别 </p></li><li><p>_color:red;//仅IE6识别</p></li><li><p>*color:red;//IE6、IE7识别 </p></li><li><p>color:red\0;//IE8、IE9识别</p></li></ul></li><li><p>选择符级Hack</p></li><li><ul><li>*html .box {     background:red; }//只有在IE6显示红色 </li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IE兼容相关</title>
      <link href="2021/08/09/IE%E5%B8%B8%E8%A7%81%E7%9A%84%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/"/>
      <url>2021/08/09/IE%E5%B8%B8%E8%A7%81%E7%9A%84%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>该文档记录了常见的IE兼容问题。</p><span id="more"></span><h2 id="兼容"><a href="#兼容" class="headerlink" title="兼容"></a>兼容</h2><p><strong>IE 浏览器常见兼容问题</strong></p><ul><li><p>兼容问题</p></li><li><ul><li>ie中图片边框问题</li></ul></li><li><ul><li>图片放在a标签中</li></ul><ul><li>img {<br>border:none</li></ul><p>}</p></li><li><p>ie8以下浏览器中背景复合属性的写法问题</p></li><li><ul><li>.bg {</li></ul><p> background:url(“./images/bg.jpg”)no-repeat center</p></li></ul><p>}</p><ul><li><p>解决方案：在url和no-repeat 直接加上空格</p><p>.bg {</p><p>   background:url(“./images/bg.jpg”) no-repeat center</p><p>}</p></li></ul><h3 id="其他ie低版本兼容问题"><a href="#其他ie低版本兼容问题" class="headerlink" title="其他ie低版本兼容问题"></a>其他ie低版本兼容问题</h3><ul><li><p>在IE6及更早浏览器中定义小高度的容器</p></li><li><p>#test {</p><p>overflow:hidden; </p><p>   height:1px;</p><p>   font-size:0;</p><p>   line-height:0;</p><p>}</p></li><li><p>IE7及更早浏览器下子标签相对定位时父标签overflow属性的hidden失效的问题</p><ul><li>解决方案：给父标签也设置相对定位position:relative; </li></ul></li><li><p>块转行内块 ie7 不在一行显示</p><ul><li><p>解决方案：</p></li><li><p>div {<br>display:inline-block;</p><p>*display:inline;</p><p>*zoom:1;</p></li></ul><p>}</p></li><li><p>ie7 及以下浏览器 清浮动问题</p></li><li><p>/* : 单冒号兼容性更好，不推荐用双冒号 :: */</p><p>​     .clearfix:after {</p><p>​         content: ‘’; </p><p>​         display: block; </p><p>​         clear: both; </p><p>​    }</p></li></ul><p>​     /* 兼容 ie7 及以下浏览器 清浮动问题 */</p><p>​     .clearfix {</p><p>​        *zoom: 1; </p><p>​    }</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>与项目命名有关的东西</title>
      <link href="2021/08/09/%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3/"/>
      <url>2021/08/09/%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>该文档记录了项目命名的相关内容。</p><span id="more"></span><h1 id="目录结构参考"><a href="#目录结构参考" class="headerlink" title="目录结构参考"></a>目录结构参考</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">---&#x2F;html&#x2F;</span><br><span class="line">|---- &#x2F;user&#x2F;                    与用户相关的页面  </span><br><span class="line">|---- &#x2F;user&#x2F;login.html          登录页</span><br><span class="line">---&#x2F;css&#x2F;</span><br><span class="line">|---- &#x2F;reset.css                 重置浏览器样式    </span><br><span class="line">|---- &#x2F;page                        其他页面的css</span><br><span class="line">|---- &#x2F;page&#x2F;pagename.css         单独某个页面的css</span><br><span class="line">|---- &#x2F;common.css                  css通用样式库</span><br><span class="line">---&#x2F;js&#x2F;</span><br><span class="line">|---- &#x2F;lib                      公用组件</span><br><span class="line">|---- &#x2F;lib&#x2F;jquery.2.2.3.min.js  调用jq库文件 </span><br><span class="line">|---- &#x2F;page                          其他页面的js</span><br><span class="line">|---- &#x2F;page&#x2F;pagename.js         单独书写的js</span><br><span class="line">|---- &#x2F;common.js                公用方法</span><br><span class="line">---&#x2F;img&#x2F;</span><br><span class="line">|---- &#x2F;page                     其他页面对应的图片</span><br><span class="line">|---- &#x2F;page&#x2F;wap                 手机端图片夹</span><br><span class="line">|---- &#x2F;page&#x2F;wap&#x2F;wap_icon.png    手机端图标</span><br><span class="line">|---- &#x2F;logo.png                 公用图片</span><br></pre></td></tr></table></figure><h2 id="引入连接需要注意："><a href="#引入连接需要注意：" class="headerlink" title="引入连接需要注意："></a>引入连接需要注意：</h2><h4 id="第三方的先引入，共通的重置样式表或者公共样式表，最后是自己页面的css"><a href="#第三方的先引入，共通的重置样式表或者公共样式表，最后是自己页面的css" class="headerlink" title="第三方的先引入，共通的重置样式表或者公共样式表，最后是自己页面的css"></a>第三方的先引入，共通的重置样式表或者公共样式表，最后是自己页面的css</h4><h2 id="类名命名参考"><a href="#类名命名参考" class="headerlink" title="类名命名参考"></a>类名命名参考</h2><p>main    页面主体<br>tag    标签<br>msg message    提示信息<br>tips    小技巧<br>vote    投票<br>friendlink友情链接<br>title    标题<br>summary    摘要<br>login_bar    登录条<br>search_input    搜索输入框<br>hot    热门热点<br>search    搜索<br>search_output    搜索输出和搜索结果相似<br>search_bar    搜索条<br>search_results    搜索结果<br>copyright    版权信息<br>branding    商标<br>logo    网站LOGO标志<br>site_info    网站信息<br>site_info_legal    法律声明<br>site_info_credits    信誉<br>join_us    加入我们<br>partner    合作伙伴<br>service    服务<br>regsiter    注册<br>arr arrow    箭头<br>guild    指南<br>site_map    网站地图<br>list    列表<br>home_page    首页<br>sub_page    二级页面子页面<br>tool, toolbar    工具条<br>drop    下拉<br>dorp_menu    下拉菜单<br>status    状态<br>scroll    滚动<br>tab    标签页<br>left right center    居左、中、右<br>news    新闻<br>download    下载</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文本溢出处理</title>
      <link href="2021/08/09/%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E5%A4%84%E7%90%86/"/>
      <url>2021/08/09/%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>该文档记录了文本溢出处理的方法。</p><span id="more"></span><h1 id="文本溢出处理"><a href="#文本溢出处理" class="headerlink" title="文本溢出处理"></a>文本溢出处理</h1><ul><li><p><strong>单行文本溢出显示省略号</strong></p></li><li><p><strong>white-space</strong></p></li><li><p>normal  默认。空白会被浏览器忽略。</p><ul><li>pre  空白会被浏览器保留。</li><li>nowrap  文本不会换行，文本会在在同一行上继续，直到遇到 br 标签为止。</li><li>pre-wrap  保留空白符序列，但是正常地进行换行。</li><li>pre-line  合并空白符序列，但是保留换行符。</li></ul></li><li><p><strong>text-overflow</strong></p><ul><li><p>clip  修剪文本。</p></li><li><p>ellipsis  显示省略符号来代表被修剪的文本。</p></li><li><p>[string]  使用给定的字符串来代表被修剪的文本。 <strong>目前只在Firefox下有效。</strong></p></li></ul></li><li><p>p {     </p><p>​        width:200px;    */限定盒子的宽度/     *</p><p>​        overflow:hidden;    /给元素设置溢出隐藏属性/  *</p><p>​        text-overflow: ellipsis;    /文本溢出显示省略号/*   </p><p>​        white-space:nowrap; /* 文本不换行 */ </p><p>} </p></li><li><p><strong>多行文本溢出显示省略号</strong></p><ul><li>用WebKit的CSS扩展属性（只有-webkit-内核才有作用）</li></ul></li><li><p>p{    </p><p>​        width:200px;    */限定盒子的宽度/   </p><p>​        overflow: hidden; /给元素设置溢出隐藏属性/    </p><p>​        text-overflow: ellipsis; /文本溢出显示省略号/    </p><p>​        display: -webkit-box; /将对象作为弹性伸缩盒子模型显示/     </p><p>​        -webkit-line-clamp: 2;/用来限制在一个块元素显示的文本的行数，这是一个不规范的属性，它没有出现在CSS规范草案中。/     </p><p>​      -webkit-box-orient: vertical;/设置或检索伸缩盒对象的子元素的排列方式/ </p><p>}</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>等高布局</title>
      <link href="2021/08/09/%E7%AD%89%E9%AB%98%E5%B8%83%E5%B1%80/"/>
      <url>2021/08/09/%E7%AD%89%E9%AB%98%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<p>该文档记录了两种等高布局的方法。</p><span id="more"></span><h1 id="等高布局"><a href="#等高布局" class="headerlink" title="等高布局"></a><strong>等高布局</strong></h1><p><strong>方法一</strong>：</p><ul><li><p>伪等高：</p><p>第一步：一个大盒子套三个盒子，大盒子不设置高度，由内容撑开</p><p>第二步：三个盒子左浮动，盒子不设置高度，由内容撑开</p><p>第三步：给三个盒子加padding-bottom: 9999px; margin-bottom: -9999px; 内外边距相消</p><p>第四步：给大盒子加overflow：hidden</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    * &#123;</span><br><span class="line"><span class="css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .wrap &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="css">        <span class="attribute">border</span>: <span class="number">5px</span> dashed lightgreen;</span></span><br><span class="line"><span class="css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.wrap</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: lightpink;</span></span><br><span class="line"><span class="css">        <span class="attribute">padding-bottom</span>: <span class="number">9999px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin-bottom</span>: -<span class="number">9999px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .center &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">235</span>, <span class="number">11</span>, <span class="number">44</span>);</span></span><br><span class="line"><span class="css">        <span class="attribute">padding-bottom</span>: <span class="number">9999px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin-bottom</span>: -<span class="number">9999px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .right &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">120</span>, <span class="number">118</span>, <span class="number">224</span>);</span></span><br><span class="line"><span class="css">        <span class="attribute">padding-bottom</span>: <span class="number">9999px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin-bottom</span>: -<span class="number">9999px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .clearfix:after &#123;</span><br><span class="line"><span class="css">        <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">        <span class="attribute">clear</span>: both;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、方法二：</p><ul><li><p>​     真等高:</p><p>​       第一步：三个嵌套的盒子，第三个盒子里写三个同级小盒子</p><p>​       第二步：给三个嵌套的盒子固定宽度</p><p>​       第三步：给三个小盒子设置固定宽度，用相对定位把第一个小盒子定位到相应的位置</p><p>​       第四步：给第二个和第三个同级盒子加margin-left: 负值盒子的宽度 给第一个同级盒子加overflow:hidden </p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">235</span>, <span class="number">104</span>, <span class="number">104</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.b</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">159</span>, <span class="number">224</span>, <span class="number">98</span>);</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">300px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">180</span>, <span class="number">163</span>, <span class="number">241</span>);</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">600px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span>:after &#123;</span><br><span class="line">    content: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css鼠标样式</title>
      <link href="2021/08/09/css%E9%BC%A0%E6%A0%87%E6%A0%B7%E5%BC%8F/"/>
      <url>2021/08/09/css%E9%BC%A0%E6%A0%87%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>通过在CSS中，cursor属性指定鼠标指针放在一个元素边界范围内时所用的光标形状，此文档主要为查看文档。</p><span id="more"></span><p>常用值</p><p>默认值：    auto<br>  default    默认光标（通常是一个箭头）<br>  auto    默认。浏览器设置的光标。<br>  crosshair    光标呈现为十字线。<br>  pointer    光标呈现为指示链接的指针（一只手）<br>  move    此光标指示某对象可被移动。<br>  e-resize    此光标指示矩形框的边缘可被向右（东）移动。<br>  ne-resize    此光标指示矩形框的边缘可被向上及向右移动（北/东）。<br>  nw-resize    此光标指示矩形框的边缘可被向上及向左移动（北/西）。<br>  n-resize    此光标指示矩形框的边缘可被向上（北）移动。<br>  se-resize    此光标指示矩形框的边缘可被向下及向右移动（南/东）。<br>  sw-resize    此光标指示矩形框的边缘可被向下及向左移动（南/西）。<br>  s-resize    此光标指示矩形框的边缘可被向下移动（南）。<br>  w-resize    此光标指示矩形框的边缘可被向左移动（西）。<br>  text    此光标指示文本。<br>  wait    此光标指示程序正忙（通常是一只表或沙漏）。<br>  help    此光标指示可用的帮助（通常是一个问号或一个气球）。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>get与post的区别</title>
      <link href="2021/08/09/get%E4%B8%8Epost/"/>
      <url>2021/08/09/get%E4%B8%8Epost/</url>
      
        <content type="html"><![CDATA[<p>form表单中，method属性，get 与post的区别是什么。</p><span id="more"></span><h1 id="method属性"><a href="#method属性" class="headerlink" title="method属性"></a>method属性</h1><ul><li><p>作用：规定发送表单数据的 HTTP 方法</p></li><li><p>取值：get(默认)/post</p></li><li><p>get 方法：将表单中数据的按照 variable=value 的形式，添加到 action 所指向的【 URL 后面，并且两者使用“?”连接】，而各个变量之间使用“&amp;”连接</p></li><li><p>post方法：将表单中的【数据放在 form 的数据体】中，按照变量和值相对应的方式，传递到 action 所指向 URL。</p></li><li><p>get 和 post 区别（了解）<br>简单阐述，当前阶段不作为重点</p><ul><li>用途：get 从指定的资源请求数据,是用来从服务器上【获得数据】，而 POST - 向指定的资源提交要被处理的数据,是用来向服务器【上传递数据】</li></ul></li><li><p>安全性：【get 是不安全的】，因为【规定发送表单数据的 HTTP 方法（get 或 post）】，一些系统内部消息将会一同显示在用户面前。【post 的所有操作对用户来说都是不可见的】</p><ul><li>数据量：【get 传输的数据量小】，这主要是因为受 URL 长度限制；而 post 可以传输大量的数据，所以上传文件只能使用 post。</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bfc相关</title>
      <link href="2021/08/03/bfc/"/>
      <url>2021/08/03/bfc/</url>
      
        <content type="html"><![CDATA[<p>面试题：bfc相关。主要有是什么、怎样生成、特性、解决的问题。</p><span id="more"></span><h1 id="BFC-Block-Formatting-Context-块级格式化上下文"><a href="#BFC-Block-Formatting-Context-块级格式化上下文" class="headerlink" title="BFC (Block Formatting Context) 块级格式化上下文"></a>BFC (Block Formatting Context) 块级格式化上下文</h1><ul><li>什么是bfc？</li><li><ul><li>Formatting  Context：指页面中的一个渲染区域，并且拥有一套渲染规则，他决定了 其子标签如何定位，以及与其他标签的相互关系和作用。</li></ul><ul><li>BFC块级格式化上下文，它是指一个独立的块级渲染区域，只有Block-level BOX参与， 该区域拥有一套渲染规则来约束块级盒子的布局，且与区域外部无关。</li></ul></li><li>怎样生成<strong>BFC</strong></li><li><ul><li>根标签</li></ul><ul><li>float的值不为none</li><li>overflow 的值不为 visible </li><li>display 的值为 inline-block</li><li>position 的值为 absolute 或 fixed</li></ul></li><li><strong>BFC</strong>的特性<ul><li>垂直方向上的距离由margin决定，属于同一个BFC的两个相邻标签的margin会发生重叠。</li><li>每个标签的左外边距与包含块的左边界相接触（从左向右），即使浮动标签也是如此。</li><li>BFC 的区域不会与 float 的标签区域重叠。(不包括固定定位方法)</li><li>计算BFC的髙度时，浮动子标签也参与计算。</li><li>BFC就是页面上的一个隔离的独立容器，容器里面的子标签不会影响到外面标签， 反之亦然。</li></ul></li><li><strong>BFC</strong>解决的问题</li><li><ul><li>外边距塌陷</li></ul><ul><li>清浮动</li><li>两栏或者三栏自适应布局 （只能用overflow：hidden）</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>html定位</title>
      <link href="2021/08/03/%E5%AE%9A%E4%BD%8D%E7%9B%B8%E5%85%B3/"/>
      <url>2021/08/03/%E5%AE%9A%E4%BD%8D%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>这里记录了html中，定位的相关知识。还有定位技巧与层级关系，以及浮动与定位的对比。</p><span id="more"></span><h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a><strong>定位</strong></h1><h2 id="定位的应用场景和基本原理"><a href="#定位的应用场景和基本原理" class="headerlink" title="定位的应用场景和基本原理"></a><strong>定位的应用场景和基本原理</strong></h2><p><strong>定位的原理</strong></p><ul><li>在本文流中 , 任何一个标签都被文本流所限制了自身的位置 , 但是通过 CSS 我们依然使得这些标签可以改变 自己的位置 , 我们可以通过 float 来让标签浮动 , 我们也可以通过 margin 来让标签产生位置移动。 CSS 定位属性，允许定义标签框相对于其正常位置应该出现的位置，或者相对于父标签、 另一个标签甚至浏览器窗口本身的位置。标签可以使用顶部、底部、左侧和右侧属性定义具体的位置</li></ul><p><strong>position</strong></p><ul><li>static 默认 静态定位</li><li><ul><li>默认的定位位置，不写就是静态定位</li></ul></li><li>relative  相对定位</li><li><ul><li>相对于自己本身移动(原来的位置保持不变，也不占用新的位置，不会影响页面布局）</li></ul></li><li>absolute 绝对定位</li><li><ul><li>子绝父相（当找不到父标签有相对定位的时候，就会继续向上找）</li></ul><ul><li>相对于父标签（父标签相对定位，子标签绝对定位）</li><li>脱离文档流也脱离文本流，也就是说图片，文字，输入框会到绝对定位下面</li></ul></li><li>fixed  固定定位</li><li><ul><li>相对于浏览器窗口</li></ul><ul><li>不会随着滚动条滚动</li></ul></li></ul><p><strong>总结一下position</strong></p><table><thead><tr><th>定位</th><th>是否脱标</th><th>参考点</th><th>参数</th></tr></thead><tbody><tr><td>static</td><td>否</td><td>无</td><td></td></tr><tr><td>relative</td><td>否</td><td>自己本身</td><td>left, right, top, bottom</td></tr><tr><td>absolute</td><td>是</td><td>父标签（子绝父相）</td><td>left, right, top, bottom</td></tr><tr><td>fixed</td><td>是</td><td>浏览器窗口</td><td>left, right, top, bottom</td></tr></tbody></table><h2 id="定位的技巧与层级关系"><a href="#定位的技巧与层级关系" class="headerlink" title="定位的技巧与层级关系"></a><strong>定位的技巧与层级关系</strong></h2><p><strong>居中技巧</strong></p><ul><li>1、方案 1： top:50% left:50%    margin-top: 当前盒子高度的一半 margin-left : 当前盒子宽度的一半</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .wrap &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">border</span>: <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .box &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: lightblue;</span></span><br><span class="line"><span class="css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">        <span class="comment">/* top:50% left:50%    margin-top:当前盒子高度的一半 margin-left :当前盒子宽度的一半*/</span></span></span><br><span class="line"><span class="css">        <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin-top</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin-left</span>: -<span class="number">100px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>2、方案 2 margin:auto 实现绝对定位元素的居中（该方法兼容 ie8 以上浏览器）。 此方案代码关键点： （1）上下左右均 0 位置定位； （2）margin: auto。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* 上下左右值为0，加上  margin: auto; */</span></span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="浮动和定位的对比"><a href="#浮动和定位的对比" class="headerlink" title="浮动和定位的对比"></a><strong>浮动和定位的对比</strong></h2><ul><li>浮动的元素脱离文档流，但是不会脱离文本流（文字、图片、表单元素不会被浮动元素覆盖，会围绕浮动的元素排列）</li><li>定位的元素既脱离文档流，又脱离文本流，可以实现元素之间真正的层级关系</li></ul><h2 id="脱离文档流的元素的特点"><a href="#脱离文档流的元素的特点" class="headerlink" title="脱离文档流的元素的特点"></a><strong>脱离文档流的元素的特点</strong></h2><ul><li>float:left;</li><li>float:right;</li><li>position:absolute;</li><li>position:fixed;</li><li>脱离文档流的元素不再区分行内或者块级，默认宽度都由内容撑开，都可以设置宽高及所有盒模型属性</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css精灵</title>
      <link href="2021/08/03/css%E7%B2%BE%E7%81%B5%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/"/>
      <url>2021/08/03/css%E7%B2%BE%E7%81%B5%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>这里记录了css精灵的优缺点。</p><span id="more"></span><h1 id="css精灵优缺点"><a href="#css精灵优缺点" class="headerlink" title="css精灵优缺点"></a>css精灵优缺点</h1><p>优点：</p><ul><li>减少网页的 http 请求，从而大大的提高页面的性能；</li><li>图片命名上的困扰；</li><li>更换风格方便。</li></ul><p>缺点：</p><ul><li>必须要限定容器大小符合背景图元素位置，需要计算</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css滑动门技术</title>
      <link href="2021/08/03/css%E6%BB%91%E5%8A%A8%E9%97%A8%E6%8A%80%E6%9C%AF/"/>
      <url>2021/08/03/css%E6%BB%91%E5%8A%A8%E9%97%A8%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>此篇记录了如何使用css滑动门技术</p><span id="more"></span><h1 id="CSS滑动门技术"><a href="#CSS滑动门技术" class="headerlink" title="CSS滑动门技术"></a>CSS滑动门技术</h1><ul><li>滑动门核心技术就是利用 CSS 精灵（主要是背景位置）和盒子 padding 撑开宽度 , 以便能适应不同字数的导 航栏。</li><li>先给一个 a 标签，用来装背景图的左边圆角，a 不给宽度，由文字撑开宽度，再在 a 里面加一个 span 盒子， span 盒子还是用之前的背景图的，但是是装背景图 的右边圆角，字写在 span 里面的，span 又是属于 a 的， 里面装上字就会把它的宽度撑开。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    * &#123;</span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .clearfix:after &#123;</span><br><span class="line"><span class="css">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">      <span class="attribute">clear</span>: both;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">33px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../课堂案例/images/wx02.png</span>);</span></span><br><span class="line"><span class="css">      <span class="attribute">line-height</span>: <span class="number">33px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding-left</span>: <span class="number">15px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">33px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">line-height</span>: <span class="number">33px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../课堂案例/images/wx02.png</span>);</span></span><br><span class="line"><span class="css">      <span class="attribute">background-position</span>: right;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .wrap &#123;</span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../课堂案例/images/wx01.jpg</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../课堂案例/images/wx03.png</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../课堂案例/images/wx03.png</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>帮助与反馈<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>公众平台<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>表情开放平台<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>表情开放平台表情开放平台<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>清除浮动的几种方法</title>
      <link href="2021/08/03/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
      <url>2021/08/03/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>这里记录了集中清理浮动的方法，顺便提及伪元素</p><span id="more"></span><h1 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h1><p><strong>浮动的问题</strong></p><p>标签浮动以后，脱离的正常文档流，导致父标签无法被撑开，会影响后续正常布局</p><p><strong>清浮动的几种方法</strong></p><ul><li>给浮动标签的父标签固定高度（不够灵活） </li><li>给父标签加overflow属性，overflow为visible以外的其他值时可以帮助实现</li><li>在浮动标签的最后加一个div（块标签），标签本身不符动，且添加样式 clear:both; (代码冗余)</li><li>推荐方法：给浮动标签的父标签添加 .clearfix</li><li><ul><li>.clearfix {</li></ul><ul><li>*zoom:1; //这是针对于IE6/7的</li><li>}</li><li>.clearfix:after {</li><li>content:””; </li><li>clear:both; </li><li>display:block; </li><li>}</li></ul></li></ul><p><strong>伪元素</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 单冒号的兼容性比双冒号好 */</span></span><br><span class="line"><span class="comment">/* :before 在当前元素的第一个子元素的前面添加一个伪元素 */</span></span><br><span class="line"><span class="selector-class">.wrap</span>:before &#123;</span><br><span class="line">    content: <span class="string">&#x27;111&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#009</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* :after 在当前元素的最后一个子元素的后面添加一个伪元素 */</span></span><br><span class="line"><span class="selector-class">.wrap</span>:after &#123;</span><br><span class="line">    content: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css三大特性</title>
      <link href="2021/08/03/css%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7/"/>
      <url>2021/08/03/css%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>面试题：css三大特性</p><span id="more"></span><h1 id="css三大特性"><a href="#css三大特性" class="headerlink" title="css三大特性"></a>css三大特性</h1><h2 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h2><ul><li>样式冲突就近原则，也就是后引入生效</li><li>样式不冲突的代码不会受影响</li></ul><h2 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h2><ul><li>子标签继承父标签的样式</li><li>文本字体属性都会继承，text-, line- , font-, color</li></ul><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><table><thead><tr><th>选择器类型</th><th>权值</th></tr></thead><tbody><tr><td>通配符选择器</td><td>0</td></tr><tr><td>标签选择器</td><td>1</td></tr><tr><td>类选择器，伪类选择器</td><td>10</td></tr><tr><td>ID选择器</td><td>100</td></tr></tbody></table><ul><li>复合选择器的权值计算方式：组成其所有单一选择器的权值之和  ul&gt;li .red  1+1+10=12</li><li>行内样式优先：权值1000</li><li>！important  无限权重</li><li>继承样式的权值为最低，甚至比通配符选择器还低</li><li>注意：无数个class比不上一个id, 无数个标签比不上一个类<br>复合选择器权值等于组成所有单一选择器之和，不包括群组</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>行内块标签的一些特殊用法</title>
      <link href="2021/08/03/%E8%A1%8C%E5%86%85%E5%9D%97%E6%A0%87%E7%AD%BE%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E6%AE%8A%E7%94%A8%E6%B3%95/"/>
      <url>2021/08/03/%E8%A1%8C%E5%86%85%E5%9D%97%E6%A0%87%E7%AD%BE%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E6%AE%8A%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>行内块标签的一些特殊用法，居中，空白间隙。</p><span id="more"></span><h1 id="行内块标签的一些特殊用法"><a href="#行内块标签的一些特殊用法" class="headerlink" title="行内块标签的一些特殊用法"></a>行内块标签的一些特殊用法</h1><h2 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h2><p>行内块居中需要给父元素添加text-align:center; 给自身添加margin:0 auto无效</p><h2 id="行内块下多出的空白间隙"><a href="#行内块下多出的空白间隙" class="headerlink" title="行内块下多出的空白间隙"></a>行内块下多出的空白间隙</h2><p>解决方法：<br>1、 把图片转换成块级<br>2、 给行内块父级设置font-size:0; line-height:0;<br>3、 给行内块设置vertical-align:middle; 设置为任意不为 baseline 的值都可以</p><h2 id="行内块之间的空白问题"><a href="#行内块之间的空白问题" class="headerlink" title="行内块之间的空白问题"></a>行内块之间的空白问题</h2><ul><li>因为标签之间的换行符会识别成一个空格</li></ul><p>解决方法：</p><ul><li>给父元素添加font-size:0;</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>标签的分类以及转换</title>
      <link href="2021/08/03/%E6%A0%87%E7%AD%BE%E5%88%86%E7%B1%BB/"/>
      <url>2021/08/03/%E6%A0%87%E7%AD%BE%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>标签的分类以及转换。</p><span id="more"></span><h1 id="标签的分类"><a href="#标签的分类" class="headerlink" title="标签的分类"></a>标签的分类</h1><h2 id="块级标签"><a href="#块级标签" class="headerlink" title="块级标签"></a>块级标签</h2><ul><li>div h1-h6 p ul li ol li dl dt dd</li><li>独立成行</li><li>高度、行高、外边距以及内边距都可以控制</li><li>宽度默认是容器的100%</li><li>可以容纳内联标签和其他块级标签</li></ul><h2 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h2><ul><li>strong b em i  del s span</li><li>在一行排列，超出才会折行</li><li>高、宽无效，但水平方向的margin可以设置，垂直方向的margin无效</li><li>默认宽度就是它本身内容的宽度</li><li>行内标签只能容纳文本或者其他行内标签</li></ul><h2 id="行内块标签"><a href="#行内块标签" class="headerlink" title="行内块标签"></a>行内块标签</h2><ul><li>img input td</li><li>和相邻的行内标签在一行，但之间会有白色缝隙</li><li>默认宽度就是它本身内容的宽度</li><li>高度、行高、外边距以及内边距都可以控制</li></ul><h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><ul><li>块转行内：display : inline;</li><li>行内转块 ： display : block;</li><li>块、行内转行内块 ： display : inline-block;</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>边框实现小三角</title>
      <link href="2021/08/03/%E8%BE%B9%E6%A1%86%E5%AE%9E%E7%8E%B0%E5%B0%8F%E4%B8%89%E8%A7%92/"/>
      <url>2021/08/03/%E8%BE%B9%E6%A1%86%E5%AE%9E%E7%8E%B0%E5%B0%8F%E4%B8%89%E8%A7%92/</url>
      
        <content type="html"><![CDATA[<p>面试相关问题。边框实现小三角</p><span id="more"></span><h1 id="实用小技巧-边框实现小三角"><a href="#实用小技巧-边框实现小三角" class="headerlink" title="实用小技巧: 边框实现小三角"></a>实用小技巧: 边框实现小三角</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="comment">/* width: 200px;</span></span><br><span class="line"><span class="comment">      height: 200px; */</span></span><br><span class="line">    <span class="comment">/* background-color: pink; */</span></span><br><span class="line">    <span class="comment">/* border:100px solid red */</span></span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="comment">/* 透明色：transparent */</span></span><br><span class="line">    <span class="attribute">border-color</span>: transparent transparent transparent lightgreen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>外边距塌陷</title>
      <link href="2021/08/03/%E5%A4%96%E8%BE%B9%E8%B7%9D%E5%A1%8C%E9%99%B7%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>2021/08/03/%E5%A4%96%E8%BE%B9%E8%B7%9D%E5%A1%8C%E9%99%B7%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>面试相关问题。外边距塌陷问题及解决办法</p><span id="more"></span><h1 id="外边距经典塌陷问题-2种-以及解决办法"><a href="#外边距经典塌陷问题-2种-以及解决办法" class="headerlink" title="外边距经典塌陷问题(2种)以及解决办法"></a>外边距经典塌陷问题(2种)以及解决办法</h1><h2 id="父子关系塌陷"><a href="#父子关系塌陷" class="headerlink" title="父子关系塌陷"></a>父子关系塌陷</h2><ul><li>给父级设置边框或内边距</li><li>给父级设置溢出隐藏 overflow:hidden,实际上是触发BFC</li></ul><h2 id="兄弟关系塌陷"><a href="#兄弟关系塌陷" class="headerlink" title="兄弟关系塌陷"></a>兄弟关系塌陷</h2><p>+给任何一个标签套一个父标签 加overflow:hidden。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>语义化的问题</title>
      <link href="2021/08/03/%E8%AF%AD%E4%B9%89%E5%8C%96/"/>
      <url>2021/08/03/%E8%AF%AD%E4%B9%89%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>面试相关：记录了什么是语义化</p><span id="more"></span><h1 id="语义化"><a href="#语义化" class="headerlink" title="语义化"></a>语义化</h1><ul><li><p>概念：运用合适的标签和特定的属性去格式化文档（合适的场合用合适的标签和属性，合适的标签和属性用在合适的场合）</p></li><li><p>优点：</p></li><li><p>易于开发和维护</p></li><li><p>用户体验比较好</p></li><li><p>易于seo, 易于爬虫抓取关键字，能和搜索引擎建立良好的沟通</p></li><li><p>即使在没有css样式的情况下，也能呈现良好的效果</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js随笔记下篇</title>
      <link href="2021/06/23/js-2/"/>
      <url>2021/06/23/js-2/</url>
      
        <content type="html"><![CDATA[<p>此文档记录了js的最基础的用法（下）</p><span id="more"></span><h1 id="下篇"><a href="#下篇" class="headerlink" title="下篇"></a>下篇</h1><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><h3 id="1-什么是面向对象"><a href="#1-什么是面向对象" class="headerlink" title="1. 什么是面向对象"></a>1. 什么是面向对象</h3><ul><li>类：模板 原型对象</li><li>对象：具体的实例</li></ul><blockquote><p>原型</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Student = &#123;</span><br><span class="line">    name: <span class="literal">null</span>,</span><br><span class="line">    age: <span class="literal">null</span>,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + <span class="string">&quot; run.....&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Bigstone = &#123;</span><br><span class="line">    name: <span class="string">&#x27;shi&#x27;</span>,</span><br><span class="line">    age: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 不写下边这一段文字的话，Bigstone无法调用run方法。</span></span><br><span class="line">Bigstone.__proto__ = Student;</span><br></pre></td></tr></table></figure><h3 id="2-类"><a href="#2-类" class="headerlink" title="2. 类"></a>2. 类</h3><blockquote><p>以前定义类的方法（可抛弃）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 给Student新增加一个方法</span></span><br><span class="line">Student.prototype.hello = <span class="function"><span class="keyword">function</span> </span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;Hello&#x27;</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>es6以后</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个学生的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 属性</span></span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    <span class="function"><span class="title">hello</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        alret(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"><span class="keyword">var</span> xiaoming = <span class="keyword">new</span> Student(<span class="string">&#x27;xiaoming&#x27;</span>);</span><br><span class="line">xiaoming.hello()</span><br></pre></td></tr></table></figure><blockquote><p>继承</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个学生的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 属性</span></span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    <span class="function"><span class="title">hello</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        alret(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hong</span> <span class="keyword">extends</span> <span class="title">Studnet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name, age</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">mygrade</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        alter(<span class="string">&#x27;德玛西亚！！！！&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> xiaoming = <span class="keyword">new</span> Student(<span class="string">&#x27;xiaoming&#x27;</span>);</span><br><span class="line">xiaoming.hello()</span><br><span class="line"><span class="keyword">var</span> jiejie = <span class="keyword">new</span> hong(<span class="string">&#x27;shi&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">jiejie.mygrade()</span><br></pre></td></tr></table></figure><p>本质：查看对象原型。</p><h2 id="操作BOM对象"><a href="#操作BOM对象" class="headerlink" title="操作BOM对象"></a>操作BOM对象</h2><h3 id="js和浏览器的关系"><a href="#js和浏览器的关系" class="headerlink" title="js和浏览器的关系"></a>js和浏览器的关系</h3><p>js诞生就是为了让他在浏览器中运行。</p><p>BOM: 浏览对象模型</p><ul><li>IE 6~11</li><li>Chrome</li><li>Safari</li><li>FireFox</li><li>Opera</li></ul><h3 id="window"><a href="#window" class="headerlink" title="window"></a>window</h3><p>window代表代表浏览器窗口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.innerHeight <span class="comment">// 内部高度</span></span><br><span class="line"><span class="built_in">window</span>.innerWidth <span class="comment">// 内部宽度</span></span><br><span class="line"><span class="built_in">window</span>.outerHeight <span class="comment">// 外部高度</span></span><br><span class="line"><span class="built_in">window</span>.outerWidth <span class="comment">// 外部宽度</span></span><br></pre></td></tr></table></figure><h3 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen.width <span class="comment">// 检测屏幕宽度</span></span><br><span class="line">screen.height <span class="comment">// 检测屏幕高度</span></span><br></pre></td></tr></table></figure><h3 id="location"><a href="#location" class="headerlink" title="location"></a>location</h3><p>代表当前页面的URL信息。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">host <span class="comment">// 主机</span></span><br><span class="line">href <span class="comment">// 当前指向位置</span></span><br><span class="line">protocol <span class="comment">// 协议</span></span><br><span class="line">reload <span class="comment">// 重新加载，刷新网页。设置新的位置</span></span><br><span class="line">location.assign(<span class="string">&#x27;&#x27;</span>) <span class="comment">// 转向新页面</span></span><br></pre></td></tr></table></figure><h3 id="document"><a href="#document" class="headerlink" title="document"></a>document</h3><p>document代表当前的页面，HTML DOM文档树</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.title <span class="comment">//获取标题</span></span><br><span class="line"><span class="comment">// 可以为其重新赋值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElemenById(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="comment">// 可以通过ID获取节点信息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.cookie <span class="comment">// 获取cookie</span></span><br></pre></td></tr></table></figure><h3 id="history"><a href="#history" class="headerlink" title="history"></a>history</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">history.back() <span class="comment">// 后退</span></span><br><span class="line">history.forward() <span class="comment">// 前进</span></span><br></pre></td></tr></table></figure><h2 id="操作DOM对象"><a href="#操作DOM对象" class="headerlink" title="操作DOM对象"></a>操作DOM对象</h2><p>DOM：文档对象模型，浏览器网页就是一个DOM树形结构。</p><ul><li>更新：更新DOM节点</li><li>遍历dom节点：得到dom节点</li><li>删除：删除一个dom节点</li><li>添加：添加一个新的dom节点</li></ul><h3 id="获得节点"><a href="#获得节点" class="headerlink" title="获得节点"></a>获得节点</h3><p>要想操作一个dom节点就必须先活得这个dom节点。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对应css选择器</span></span><br><span class="line"><span class="keyword">var</span> h1 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;h1&#x27;</span>); <span class="comment">// 根据标签的名字</span></span><br><span class="line"><span class="keyword">var</span> p1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;p1&#x27;</span>); <span class="comment">// 通过ID查找</span></span><br><span class="line"><span class="keyword">var</span> p2 = <span class="built_in">document</span>.getElementClassName(<span class="string">&#x27;p2&#x27;</span>); <span class="comment">// 通过class查找</span></span><br><span class="line"><span class="keyword">var</span> chlidren = father.children; <span class="comment">// 获取父节点下所有子节点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// father.firstChild 第一个子节点</span></span><br><span class="line"><span class="comment">// father.lastChild 最后一个子节点</span></span><br></pre></td></tr></table></figure><p>以上都是原生代码，之后尽量使用jQuery</p><h3 id="更新节点"><a href="#更新节点" class="headerlink" title="更新节点"></a>更新节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 操作文本</span></span><br><span class="line">名字.innerThext <span class="comment">//修改文本的值</span></span><br><span class="line">名字.innerHTML = <span class="string">&#x27;&lt;strong&gt;123&lt;/strong&gt;&#x27;</span> <span class="comment">//可解析HTML文本标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//操作Js</span></span><br><span class="line">名字.style.color = <span class="string">&#x27;&#x27;</span>; <span class="comment">// 设置颜色</span></span><br><span class="line">名字.style.fontSize = <span class="string">&#x27;&#x27;</span>; <span class="comment">// 设置字体大小，带-的换成驼峰命名</span></span><br><span class="line">名字.style.padding = <span class="string">&#x27;&#x27;</span>; <span class="comment">//  设置内间距</span></span><br></pre></td></tr></table></figure><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><p>步骤：先获取父节点，再通过父节点删除自己。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> self = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;p1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> father = self.parentElement;</span></span><br><span class="line">        father.removeChild(self);</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 删除是一个动态的过程</span></span></span><br><span class="line">        father.removeChild(father.children[0])</span><br><span class="line">        father.removeChild(father.children[1])</span><br><span class="line">        father.removeChild(father.children[2])</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>删除多个节点时，children是在时刻变化的，删除时一定要注意！</p><h3 id="插入结点"><a href="#插入结点" class="headerlink" title="插入结点"></a>插入结点</h3><p>我们获得了某个Dom节点, 假设这个dom节点是空的, 我们通过innerHTML就可以增加一个元素了，但是这个DOM节点已经存在元素了，我们就不能这么干了! 因为会产生覆盖。</p><blockquote><p>追加</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;js&quot;</span>&gt;</span> JavaScript <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;se&quot;</span>&gt;</span> JavaSE <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;ee&quot;</span>&gt;</span> JavaEE <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;me&quot;</span>&gt;</span> JavaME <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> js = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;js&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> list = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;list&#x27;</span>);</span></span><br><span class="line">        list.appendChild(js);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>创建一个新的标签，实现插入</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;js&quot;</span>&gt;</span> JavaScript <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;se&quot;</span>&gt;</span> JavaSE <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;ee&quot;</span>&gt;</span> JavaEE <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;me&quot;</span>&gt;</span> JavaME <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> js = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;js&#x27;</span>); <span class="comment">// 已经存在的节点</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> list = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;list&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 通过js创建一个新的节点</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> newp = <span class="built_in">document</span>.createElement(<span class="string">&#x27;p&#x27;</span>); <span class="comment">// 创建一个p标签</span></span></span><br><span class="line"><span class="javascript">        newp.id = <span class="string">&#x27;newp&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        newp.innerText = <span class="string">&#x27;hello world&#x27;</span></span></span><br><span class="line"><span class="javascript">        list.appendChild(newp); <span class="comment">// 创建之后追加上去</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//创建一个标签节点(通过这个属性可以设置任意的值)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> big = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        big.setAttribute(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/javascript&#x27;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//可以创建一个style标签</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ms = <span class="built_in">document</span>.createElement(<span class="string">&#x27;style&#x27;</span>; ms.setAttribute(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/css&#x27;</span>); <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>].appendChild(ms)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>insert</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;js&quot;</span>&gt;</span> JavaScript <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;se&quot;</span>&gt;</span> JavaSE <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;ee&quot;</span>&gt;</span> JavaEE <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;me&quot;</span>&gt;</span> JavaME <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> js = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;js&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> list = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;list&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ee = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;ee&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//要包含的节点.instertBefore(newNode,targetNode)</span></span></span><br><span class="line">        list.insertBefore(js, ee);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="操作表单"><a href="#操作表单" class="headerlink" title="操作表单"></a>操作表单</h2><p>表单：form DOM树的节点 目的：提交信息</p><ul><li>文本框 text</li><li>下拉框 select</li><li>单选框 radio</li><li>多选框 checkbox</li><li>隐藏域 hidden</li><li>密码域 password</li></ul><blockquote><p>获得要提交的信息</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;uname&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span> <span class="attr">id</span>=<span class="string">&quot;boy&quot;</span>&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;women&quot;</span> <span class="attr">id</span>=<span class="string">&quot;girl&quot;</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> in_text = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;uname&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ra_boy = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;boy&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ra_girl = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;girl&#x27;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        in_text.value <span class="comment">// 得到输入框的值</span></span></span><br><span class="line"><span class="javascript">        in_text.value = <span class="string">&#x27;&#x27;</span> <span class="comment">//修改输入框的值</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//对于单选框，多选框等固定的值 .value只能获取当前的值</span></span></span><br><span class="line"><span class="javascript">        ra_boy.checked; <span class="comment">//查看返回的结果，是否为true，如果为true，则被选中</span></span></span><br><span class="line"><span class="javascript">        ra_boy.checked = <span class="literal">true</span> <span class="comment">// 可以赋值，手动的选择</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>md5 加密的链接：</p><blockquote><p><a href="https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js">https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js</a></p></blockquote><p>提交表单，md5加密密码（优化）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        表单绑定提交事件</span></span><br><span class="line"><span class="comment">        onsubmit=绑定一个提交检测的函数，true，false</span></span><br><span class="line"><span class="comment">        将这个结果返回给表单，使用onsubmit接受</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return bigstone()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">id</span>=<span class="string">&quot;md5pwd&quot;</span> <span class="attr">name</span>=<span class="string">&quot;md5pwd&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">bigstone</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> uname = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;uname&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pwd = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pwd&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> md5pwd = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;md5pwd&#x27;</span>);</span></span><br><span class="line">            pwd.value = md5(pwd.value);</span><br><span class="line">            md5pwd.value = md5(pwd.value);</span><br><span class="line"><span class="javascript">            <span class="comment">// 可以校验判断表单内容，true就是通过提交，false就是阻止提交。</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><p>jQuery库，里边存在大量的JavaScript函数</p><p>引入，可以使用cdn，也可以下载到本地使用（建议使用下载的，直接搜索jQuery即可）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 不使用jQuery</span></span></span><br><span class="line">        /** var t=document.getElementById(&#x27;text&#x27;);</span><br><span class="line">        t.click();</span><br><span class="line">        **/</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 使用jQuery，公式$(selector).action()。</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#test&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&#x27;外币巴卜？&#x27;</span>);</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>选择器</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 原生js选择器</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementsByTagName(); <span class="comment">// 根据标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementsByClassName(); <span class="comment">// 根据class</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(); <span class="comment">// 根据Id</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//jQuery css中的选择器他全部都能用</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&#x27;p&#x27;</span>).click(); <span class="comment">// 标签选择器</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&#x27;#id1&#x27;</span>).click(); <span class="comment">// id选择器</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&#x27;.class1&#x27;</span>).click(); <span class="comment">// class选择器</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>事件</p></blockquote><p>鼠标事件，键盘事件，其他事件…</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;mM&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">        外币巴卜？</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//当网页加载完毕之后，响应事件：$(douction).ready(function()&#123;&#125;)，但是可以简写</span></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;#test&#x27;</span>).mousemove(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">&#x27;#mM&#x27;</span>).text(<span class="string">&#x27;x&#x27;</span> + e.pageX + <span class="string">&#x27;y&#x27;</span> + e.pageY);</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>操作DOM</p></blockquote><p>节点文本操作</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&#x27;test_ul&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&#x27;li1&#x27;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">name</span>=<span class="string">&#x27;li2&#x27;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#test_ul li[name=li2]&#x27;</span>).text(<span class="string">&#x27;bigstone&#x27;</span>); <span class="comment">// 设置or修改值</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#test_ul li[class=li1]&#x27;</span>).text(); <span class="comment">// 获取值</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#test_ul&#x27;</span>).html(); <span class="comment">// 获取值</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#test_ul&#x27;</span>).html(<span class="string">&#x27;&lt;strong&gt;123&lt;/strong&gt;&#x27;</span>); <span class="comment">// 设置or修改值</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css的操作</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&#x27;test_ul&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&#x27;li1&#x27;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">name</span>=<span class="string">&#x27;li2&#x27;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;test_ul&#x27;</span>) li[name = li2 <span class="string">&#x27;]).css(&#123;&quot;color&quot;,&quot;yellow&quot;&#125;)</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>元素的显示隐藏： 本质 display:none；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&#x27;test_ul&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&#x27;li1&#x27;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">name</span>=<span class="string">&#x27;li2&#x27;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;test_ul&#x27;</span>) li[name = li2 <span class="string">&#x27;]).show() // 显示</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">&#x27;test_ul&#x27;</span>) li[name = li2 <span class="string">&#x27;]).hide() // 隐藏</span></span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&#x27;test_ul&#x27;</span>) li[name = li2 <span class="string">&#x27;]).toggle() // 切换</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>$(window).width() // 获得宽</p></blockquote><p>$(window).height() // 获得高</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>canvas随笔记</title>
      <link href="2021/04/23/canvas%E8%AE%B0%E5%BF%86/"/>
      <url>2021/04/23/canvas%E8%AE%B0%E5%BF%86/</url>
      
        <content type="html"><![CDATA[<p>此文档记录了html中canvas的最基础的用法</p><span id="more"></span><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>这个玩意就是一个画布。长久以来，web上的动画都是Flash，比如动画广告、游戏的等等，基本上都是flash实现的。flash是有缺点的，比如要安装插件，漏洞多，重量比较大。卡顿不流畅等等。</p><p>canvas是一个轻量级的画布，不需要额外的插件，性能好，不卡顿，手机也流畅</p><p>HTML5提出了一个新的canvas标签，颠覆了Flash的主导地位。</p><h2 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1 基本使用"></a>1 基本使用</h2><p>在代码前添加下边这一行代码就会出现代码提示</p><blockquote><p>/** @type {HTMLCanvasElement} */</p></blockquote><h3 id="1-1-标签基本属性"><a href="#1-1-标签基本属性" class="headerlink" title="1.1 标签基本属性"></a>1.1 标签基本属性</h3><p>在页面中设置一个canvas标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">    你看到了我~看到了我~<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只有两个属性，width和height。<br>注意canvas的width和height不要用设置css样式设置，如果的话会失真，会变形。</p><p>标签对的文字是用来提示低版本浏览器的，高浏览器是看不到的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;mc&quot;</span>) <span class="comment">//得到标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>); <span class="comment">//得到画布的上下文，所有的绘画控制都是通过ctx属性或者方法设置的，和标签没有关系。</span></span></span><br><span class="line"><span class="javascript">    ctx.fillStyle = <span class="string">&#x27;green&#x27;</span> <span class="comment">//设置颜色，要先设置颜色再绘制图形</span></span></span><br><span class="line"><span class="javascript">    ctx.fillRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">20</span>, <span class="number">20</span>); <span class="comment">//前两个参数是x y坐标，后两个参数是长和宽，左上角为（0，0）</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过上边的代码我们需要知道一些重要的功能属性</p><h3 id="1-2-Canvas的像素画"><a href="#1-2-Canvas的像素画" class="headerlink" title="1.2 Canvas的像素画"></a>1.2 Canvas的像素画</h3><p>使用canvas绘制了一个图形，一旦成功，就像素化了他们。canvas没有能力从画布上再次得到这个图形，也就是说我们没有能力去修改已经在画布上的内容。这个就是canvas比较轻量的原因，Flash重的原因就是它可以得到已经在画布上的内容然后再次绘制。</p><p>如果我们想要在这个canvas图形移动，必须按照清屏-更新-渲染的逻辑思想进行编程，总之就是重新再画一次。</p><h3 id="1-3-的动画思想"><a href="#1-3-的动画思想" class="headerlink" title="1.3 的动画思想"></a>1.3 的动画思想</h3><p>面向对象的动画思想就是清屏-更新-渲染，这个思想就可以为canvas的动画思想<br>canvas上画布的元素，就被像素化了，所以不能通过style.left方法进行修改，而是必须重新绘制。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;mc&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600&quot;</span>&gt;</span>你看到了我~看到了我~<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;mc&quot;</span>) <span class="comment">//得到标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>); <span class="comment">//得到画布的上下文，所有的绘画控制都是通过ctx属性或者方法设置的，和标签没有关系。</span></span></span><br><span class="line"><span class="javascript">    ctx.fillStyle = <span class="string">&#x27;green&#x27;</span> <span class="comment">//设置颜色，要先设置颜色再绘制图形</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> left = <span class="number">100</span>; <span class="comment">//信号量</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">600</span>, <span class="number">600</span>) <span class="comment">//清除画布，0 0代表从什么位置开始清除，600 600代表清除的高度和宽度</span></span></span><br><span class="line">        if (left &lt;= 600) &#123;</span><br><span class="line"><span class="javascript">            left++; <span class="comment">// 更新信号量</span></span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line">            left = 100</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        ctx.fillRect(left, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>) <span class="comment">//重新绘制</span></span></span><br><span class="line"><span class="javascript">    &#125;, <span class="number">30</span>) <span class="comment">//计时器</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实际上就是生成的相关静态画面连续播放了。我们把每一次绘制的静态画面叫做<strong>一帧</strong>，那个30是什么时间间隔执行一次function，单位毫秒。</p><h3 id="1-4-面型对象思维实现canvas动画"><a href="#1-4-面型对象思维实现canvas动画" class="headerlink" title="1.4 面型对象思维实现canvas动画"></a>1.4 面型对象思维实现canvas动画</h3><p>因为canvas不能的带已经上屏的对象，所以我们要维持对象的状态。在2canvas动画中，我们都是用面向.<br>对象来进行编程，因为我们可以使用面向对象的方式来维持canvas需要的属性和状态。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;mc&quot;</span>) <span class="comment">//得到标签</span></span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>); <span class="comment">//得到画布的上下文，所有的绘画控制都是通过ctx属性或者方法设置的，和标签没有关系。</span></span><br><span class="line"><span class="comment">// 此类的定义只适用于es6之后</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">x, y, w, h, color</span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 维护状态，初始化</span></span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.w = w;</span><br><span class="line">        <span class="built_in">this</span>.h = h;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义更新方法</span></span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义渲染方法</span></span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ctx.fillStyle = <span class="built_in">this</span>.color;</span><br><span class="line">        ctx.fillRect(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.w, <span class="built_in">this</span>.h)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> r1 = <span class="keyword">new</span> rec(<span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">50</span>, <span class="string">&quot;purple&quot;</span>)</span><br><span class="line"><span class="keyword">var</span> r2 = <span class="keyword">new</span> rec(<span class="number">0</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="string">&quot;orange&quot;</span>)</span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height) <span class="comment">//清除画布，0 0代表从什么位置开始清除，后边代表清除的高度和宽度</span></span><br><span class="line">    r1.update();</span><br><span class="line">    r1.render();</span><br><span class="line">    r2.update();</span><br><span class="line">    r2.render();</span><br><span class="line">&#125;, <span class="number">10</span>)</span><br></pre></td></tr></table></figure><h2 id="2-绘制功能"><a href="#2-绘制功能" class="headerlink" title="2 绘制功能"></a>2 绘制功能</h2><h3 id="2-1-绘制矩形"><a href="#2-1-绘制矩形" class="headerlink" title="2.1 绘制矩形"></a>2.1 绘制矩形</h3><p>填充一个矩形</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ctx.fillStyle = <span class="string">&#x27;green&#x27;</span> <span class="comment">//设置颜色，要先设置颜色再绘制图形</span></span><br><span class="line">ctx.fillRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">20</span>, <span class="number">20</span>); <span class="comment">//绘制填充矩形</span></span><br><span class="line">ctx.strokeStyle = <span class="string">&quot;red&quot;</span>; <span class="comment">//绘制边框色</span></span><br><span class="line">ctx.strokeRect(<span class="number">10</span>, <span class="number">10</span>, <span class="number">220</span>, <span class="number">220</span>) <span class="comment">//绘制边框矩形，也就是边框</span></span><br><span class="line">ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">600</span>, <span class="number">600</span>) <span class="comment">//擦除画布</span></span><br></pre></td></tr></table></figure><p>参数含义：分别代表坐标x、坐标y、宽度、高度</p><h3 id="2-2-绘制路径"><a href="#2-2-绘制路径" class="headerlink" title="2.2 绘制路径"></a>2.2 绘制路径</h3><p>绘制路径作用是为了设置一个不规则的多边形形态<br>路径是闭合的，使用路径进行绘制的时候需要既定的步骤</p><ol><li>需要设置路径的起点</li><li>使用绘制命令画出路径</li><li>封闭路径</li><li>填充或者绘制已经封闭的流经的形状</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span></span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;mc&quot;</span>) <span class="comment">//得到标签</span></span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>); <span class="comment">//得到画布的上下文，所有的绘画控制都是通过ctx属性或者方法设置的，和标签没有关系。</span></span><br><span class="line">ctx.beginPath() <span class="comment">//创建绘制点</span></span><br><span class="line">ctx.moveTo(<span class="number">100</span>, <span class="number">145</span>) <span class="comment">//移动绘制点</span></span><br><span class="line"><span class="comment">// 描述行进路径</span></span><br><span class="line">ctx.lineTo(<span class="number">178</span>, <span class="number">257</span>)</span><br><span class="line">ctx.lineTo(<span class="number">224</span>, <span class="number">479</span>)</span><br><span class="line">ctx.lineTo(<span class="number">477</span>, <span class="number">597</span>)</span><br><span class="line"><span class="comment">// 封闭路径</span></span><br><span class="line">ctx.closePath();</span><br><span class="line"><span class="comment">// 绘制这个路径</span></span><br><span class="line">ctx.strokeStyle = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">ctx.stroke();</span><br></pre></td></tr></table></figure><h3 id="2-3-圆弧"><a href="#2-3-圆弧" class="headerlink" title="2.3 圆弧"></a>2.3 圆弧</h3><blockquote><p>arc(x, y, radius, startAngle, endAngle, anticlockwise)</p></blockquote><p>画一个以（x，y）为圆心，以radius为园半径的圆弧（圆），从starAngle开始到endAngle结束，按照anticolckwise给定的的方向（默认顺时针 false）来生成。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ctx.beginPath() <span class="comment">//创建绘制点</span></span><br><span class="line">ctx.arc(<span class="number">200</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="literal">false</span>) <span class="comment">//顺时针，从0到1的位置来绘制开始和结束的位置，数字代表一个圆弧的弧度（一个圆的弧度时Math.PI*2，约等于7个弧度），所以两个参数的差为7，并且是顺时针方向。200 200为起始坐标 100为圆心半径。</span></span><br><span class="line">ctx.stroke()</span><br><span class="line">ctx.globalAlpha = <span class="string">&#x27;0.2&#x27;</span> <span class="comment">//透明度，这个范围在0-1之间。</span></span><br></pre></td></tr></table></figure><h3 id="2-4-透明度"><a href="#2-4-透明度" class="headerlink" title="2.4 透明度"></a>2.4 透明度</h3><blockquote><p>ctx.globalAlpha=’0.2’ //透明度，这个范围在0-1之间。</p></blockquote><h3 id="2-5-线型"><a href="#2-5-线型" class="headerlink" title="2.5 线型"></a>2.5 线型</h3><p>我们可以利用lineWidth设置线的粗细，属性值必须是数字，默认是1.0，没有单位。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ctx.beginPath();</span><br><span class="line">ctx.strokeStyle = <span class="string">&quot;orange&quot;</span></span><br><span class="line">ctx.moveTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.lineTo(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">ctx.lineTo(<span class="number">300</span>, <span class="number">100</span>);</span><br><span class="line">ctx.lineWidth = <span class="number">20</span></span><br><span class="line">ctx.stroke();</span><br></pre></td></tr></table></figure><p>lineCAP属性决定了每一条线段末端的属性，一共有三个属性值，分别是butt、round和square，默认是butt。<br>round是圆形，butt是方形，square是多出了一个矩形区域。</p><p>lineJoin决定了图形中两段连接处显示的样子，三个属性值，round、bevel、miter。<br>miter默认的，round圆的，bevel平的。</p><p>我们可以使用setLineDash方法来定义虚线的样式，内部接受一个数组（数组内部是虚线交替状态）</p><blockquote><p>ctx.setLineDash([10, 20])</p></blockquote><p>数组的内部可以为一组的状态，最少两个参数，也可以传多个<br>比如：</p><blockquote><p>ctx.setLineDash([10, 20, 30, 40, 50])</p></blockquote><p>还可以使用lineDashOffset来设置虚线的起始偏移量。</p><h3 id="2-6-文本"><a href="#2-6-文本" class="headerlink" title="2.6 文本"></a>2.6 文本</h3><p>我们可以在画布上绘制文字内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctx.font = <span class="string">&#x27;30px 微软雅黑&#x27;</span></span><br><span class="line">ctx.fillText(<span class="string">&quot;你好，我是微软雅黑&quot;</span>, <span class="number">100</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><p>设置文字的对齐方式textAlign  star（默认）, end, left, right或center.<br>需要注意的是文本的对齐方式的属性，注意，该对齐是基于CanvasRenderingContext2D.fillText方法的x的值。</p><h3 id="2-7-渐变"><a href="#2-7-渐变" class="headerlink" title="2.7 渐变"></a>2.7 渐变</h3><p>提供两种渐变方式，一种是线性渐变，一种是镜像渐变。<br>方法需要指定四个参数，分别表示渐变线段的开始和结束点。</p><blockquote><p>ctx.createLinearGradient(x0, y0, x1, y1)</p></blockquote><p>线性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> liner = ctx.createLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line">liner.addColorStop(<span class="number">0</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">liner.addColorStop(<span class="number">0.3</span>, <span class="string">&quot;blue&quot;</span>);</span><br><span class="line">liner.addColorStop(<span class="number">0.5</span>, <span class="string">&quot;yellow&quot;</span>);</span><br><span class="line">liner.addColorStop(<span class="number">1</span>, <span class="string">&quot;orange&quot;</span>);</span><br><span class="line">ctx.fillStyle = liner;</span><br><span class="line">ctx.fillRect(<span class="number">10</span>, <span class="number">10</span>, <span class="number">200</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><p>addColorStop内部接受两个参数，第一个参数是当前渐变的位置（0-1之间的小数），第二个参数是颜色。</p><p>径向渐变：</p><blockquote><p>createRadialGradient(x0, y0, r0, x1, y1, r1)</p></blockquote><p>x0开始圆形的x坐标，y0开始圆形的y坐标，r0开始圆形的半径。<br>x1结束圆形的x坐标，y1结束圆形的y坐标，r1结束圆形的半径。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> liner = ctx.createRadialGradient(<span class="number">95</span>, <span class="number">25</span>, <span class="number">15</span>, <span class="number">102</span>, <span class="number">20</span>, <span class="number">40</span>)</span><br><span class="line">liner.addColorStop(<span class="number">0</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">liner.addColorStop(<span class="number">0.3</span>, <span class="string">&quot;blue&quot;</span>);</span><br><span class="line">liner.addColorStop(<span class="number">0.5</span>, <span class="string">&quot;yellow&quot;</span>);</span><br><span class="line">liner.addColorStop(<span class="number">1</span>, <span class="string">&quot;orange&quot;</span>);</span><br><span class="line">ctx.fillStyle = liner;</span><br><span class="line">ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><h3 id="2-8-阴影"><a href="#2-8-阴影" class="headerlink" title="2.8 阴影"></a>2.8 阴影</h3><p>我们可以在画布中设置阴影状态</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ctx.shadowOffsetX = <span class="number">1</span>; <span class="comment">//阴影左右偏移的距离</span></span><br><span class="line">ctx.shadowOffsetY = <span class="number">1</span>; <span class="comment">//阴影上下偏移的距离</span></span><br><span class="line">ctx.shadowBlur = <span class="number">1</span>; <span class="comment">//模糊状态</span></span><br><span class="line">ctx.shadowColor = <span class="string">&#x27;blue&#x27;</span></span><br><span class="line">ctx.font = <span class="string">&quot;30px 宋体&quot;</span>;</span><br><span class="line">ctx.fillText(<span class="string">&quot;我是石头&quot;</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br></pre></td></tr></table></figure><h2 id="3-使用图片"><a href="#3-使用图片" class="headerlink" title="3 使用图片"></a>3 使用图片</h2><p>canvas中使用drawImage来绘制图片，主要是把外部的图片导入进来绘制到画布上。</p><p>一个简单过程</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> image = <span class="keyword">new</span> Image();</span><br><span class="line">image.src = <span class="string">&quot;./01.jpg&quot;</span>;</span><br><span class="line"><span class="comment">// 必须要在onload之后再进行绘制图片，否则不会渲染</span></span><br><span class="line">image.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx.drawImage(image, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果我们设置的参数一共是两个（不包含第一个image参数），表示的是图片的加载位置。<br>如果有四个参数，分别表示位置和宽高。<br>如果有八个参数，代表是切片在图片上切下一块内容之后在画布中进行渲染。前四个参数指的是你在图片中设置切片的宽度和高度，以及切片的位置，后四个参数指的是切片在画布上的位置和切片的宽高。</p><h2 id="4-资源管理器"><a href="#4-资源管理器" class="headerlink" title="4 资源管理器"></a>4 资源管理器</h2><p>我们在开发游戏的时候，有一些静态资源是需要请求回来的，否则如果直接开始，某些静态资源就没有，会报错，或者空白，比如我们的游戏背景图，如果没有请求回来就直接开始，页面会有空白现象。</p><p>资源管理器就是当游戏需要资源全部加载完毕的时候，再开始游戏<br>我们现在主要是图片资源，所以我们要在canvas渲染过程中进行对图片资源的加载。</p><h3 id="4-1-获取对象属性中的长度"><a href="#4-1-获取对象属性中的长度" class="headerlink" title="4.1 获取对象属性中的长度"></a>4.1 获取对象属性中的长度</h3><p>在下边一个JSON（对象），此时我们想获取当前这个JSON属性数量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.R = &#123;</span><br><span class="line">    <span class="string">&quot;i1&quot;</span>: <span class="string">&quot;./01.jpg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;i2&quot;</span>: <span class="string">&quot;./02.jpg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;i3&quot;</span>: <span class="string">&quot;./03.jpg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;i4&quot;</span>: <span class="string">&quot;./04.jpg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;i5&quot;</span>: <span class="string">&quot;./05.jpg&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时如果我们使用this. R。length是得不到的，因为当前的this. R.length指的是获取R对象的length属性，而不是获取当前对象的属性个数，所以会返回undefin<br>正确方法是使用object.keys()来获取当前属性key列表，然后通过这个列表获取长度，策略就是曲线救国。</p><h3 id="4-2-资源管理器的封装"><a href="#4-2-资源管理器的封装" class="headerlink" title="4.2 资源管理器的封装"></a>4.2 资源管理器的封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dom = <span class="built_in">document</span>.querySelector(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.ctx = <span class="built_in">this</span>.dom.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.R = &#123;</span><br><span class="line">            <span class="string">&quot;i1&quot;</span>: <span class="string">&quot;./01.jpg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;i2&quot;</span>: <span class="string">&quot;./02.jpg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;i3&quot;</span>: <span class="string">&quot;./03.jpg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;i4&quot;</span>: <span class="string">&quot;./04.jpg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;i5&quot;</span>: <span class="string">&quot;./05.jpg&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> imglenth = <span class="built_in">Object</span>.keys(<span class="built_in">this</span>.R).length;</span><br><span class="line">        <span class="keyword">var</span> count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> <span class="built_in">this</span>.R) &#123;</span><br><span class="line">            <span class="keyword">var</span> src = <span class="built_in">this</span>.R[k];</span><br><span class="line">            <span class="built_in">this</span>.R[k] = <span class="keyword">new</span> Image();</span><br><span class="line">            <span class="built_in">this</span>.R[k].src = src;</span><br><span class="line">            <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">            <span class="built_in">this</span>.R[k].onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                self.ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">600</span>, <span class="number">400</span>)</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;this&#x27;</span> + <span class="built_in">this</span>)</span><br><span class="line">                <span class="built_in">console</span>.log(self)</span><br><span class="line">                count++;</span><br><span class="line">                self.ctx.font = <span class="string">&quot;16px Arial&quot;</span>;</span><br><span class="line">                self.ctx.fillText(<span class="string">&quot;图片已加载：&quot;</span> + count + <span class="string">&quot;/&quot;</span> + imglenth, <span class="number">0</span>, <span class="number">20</span>)</span><br><span class="line">                <span class="keyword">if</span> (count == imglenth) &#123;</span><br><span class="line">                    self.start()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ctx.drawImage(<span class="built_in">this</span>.R[<span class="string">&quot;i1&quot;</span>], <span class="number">0</span>, <span class="number">50</span>, <span class="number">600</span>, <span class="number">350</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> Game()</span><br></pre></td></tr></table></figure><h2 id="5-变形"><a href="#5-变形" class="headerlink" title="5. 变形"></a>5. 变形</h2><p>canvas是可以变形的，但是变形的不是元素，而是ctx，ctx就是整个画布的渲染区域，整个画布变形，我们需要在画布变形前，进行保存和回复。</p><blockquote><p>save()保存画布（canvas）的所有状态<br>restore()方法是用来保存和恢复状态的</p></blockquote><p>都没有参数。Canvas的状态就是当前画面应用的所有样式和变形的一个快照。</p><blockquote><p>translate(x,y) 移动变形<br>restore() 旋转变形<br>scale(x,y) 缩放变形</p></blockquote><p>我们可以使用他们的综合写法：<br>transform(z,b,c,d,e,f)<br>a代表水平方向缩放，b代表竖直方向的倾斜偏移，c代表水平方向的倾斜偏移，d代表水平方向的缩放，e代表水平方向移动，f代表竖直方向移动。</p><h2 id="6-合成"><a href="#6-合成" class="headerlink" title="6. 合成"></a>6. 合成</h2><p>合成其实就是我们常见的蒙版状态，本质就是如何进行压盖，如何进行显示。<br>我们可以通过globalCompositeOperation来设置压盖顺序。<br>比如我们此时画了一个方和一个圆，第一次画的是方，第二次画的是圆，所以会出现园压盖方的现象。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue随笔记</title>
      <link href="2021/04/23/vue%E7%9B%B8%E5%85%B3/"/>
      <url>2021/04/23/vue%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>此文档记录了vue的最基础的用法</p><span id="more"></span><h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><p>Soc原则：关注点分离原则<br>只负责视图层：HTML+CSS+JS</p><blockquote><p>使用CDN导入：<a href="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js">https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 不刷新页面就能修改值</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&quot;#a&quot;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                message: <span class="string">&quot;hello,vue!&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>v-bind 鼠标放上去可以提示信息</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">&#x27;message&#x27;</span>&gt;</span></span><br><span class="line">            外币巴卜？</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&quot;#a&quot;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                message: <span class="string">&quot;外币外币？&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>v-if v-else-if v-else</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;message===&#x27;外币外币？&#x27;&quot;</span>&gt;</span>外币巴卜？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>你说啥？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&quot;#a&quot;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                message: <span class="string">&quot;外币外币？&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>v-for</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(lpl, index) in bigstone&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;lpl.rng&#125;&#125;---&#123;&#123;index&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#a&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            bigstone: [&#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;xiaohu&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;wei&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;crying&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;gala&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;ming&#x27;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>v-on 绑定事件，必须写在methods中</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;Newb&quot;</span>&gt;</span>你敢点我吗<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#a&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            me: <span class="string">&#x27;外币巴卜？&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            Newb: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.me);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>v-model</p></blockquote><p>v-model会忽略所有表单元素的value、checked、selected特性的初始值而总是将Vue实例的数据作为数据来源。你应该通过JavaScript在组件的data选项中声明初始值。</p><blockquote><p>vue组件</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aa&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bigstone</span> <span class="attr">v-for</span>=<span class="string">&quot;lol in lpl&quot;</span> <span class="attr">v-bind:shi</span>=<span class="string">&quot;lol&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bigstone</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 注册一个组件</span></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;bigstone&quot;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 接受参数</span></span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&#x27;shi&#x27;</span>],</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 模板</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: &#x27;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">shi</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&#x27;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#aa&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            lpl: [&#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;xiaohu&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;wei&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;crying&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;gala&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    rng: <span class="string">&#x27;ming&#x27;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>axios 的CDN</p></blockquote><p><a href="https://unpkg.com/axios/dist/axios.min.js">https://unpkg.com/axios/dist/axios.min.js</a></p><blockquote><p>axios异步通信</p></blockquote><p>JSON文件内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;狂神说java&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://baidu.com&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;page&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isNonProfit&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;address&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;street&quot;</span>: <span class="string">&quot;含光门&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;city&quot;</span>: <span class="string">&quot;陕西西安&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;country&quot;</span>: <span class="string">&quot;中国&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;links&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;B站&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://www.bilibili.com/&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;4399&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://www.4399.com/&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;百度&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://www.baidu.com/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aa&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;info.name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#aa&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 请求的返回参数合适，必须和json字符串一样</span></span></span><br><span class="line">                info: &#123;</span><br><span class="line"><span class="javascript">                    name: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">                    url: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">                    page: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">                    isNonProfit: <span class="literal">null</span>,</span></span><br><span class="line">                    address: &#123;</span><br><span class="line"><span class="javascript">                        street: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">                        city: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">                        country: <span class="literal">null</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            axios.get(<span class="string">&#x27;./test.json&#x27;</span>).then(<span class="function"><span class="params">response</span> =&gt;</span> (<span class="built_in">this</span>.info = response.data))</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解决 <strong>Cross origin requests are only supported for protocol schemes: http, data, chrome-extension, edge, https, chrome-untrusted</strong>. 错误的方法：<br>在vsc中下载一个link-server的插件即可。</p><blockquote><p>计算属性</p></blockquote><p>它就是一个能够将计算结果缓存起来的属性（将行为转化成为了静态的属性），可以想想成为内存。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aa&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;NowTime()&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span> // 这个是methods里定义的，是方法。</span><br><span class="line">    &#123;&#123;NowTime2&#125;&#125; // 这个是computed里定义的，是属性。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#aa&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            message: <span class="string">&#x27;外币巴卜？&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">// methods：定义方法，调用方法要带括号</span></span></span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            NowTime: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">Date</span>.now();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">// computed：定义计算属性，不带括号</span></span></span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            NowTime2: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.message; <span class="comment">// 为了能够让NowTime2观察到数据的变化而变化</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">Date</span>.now();</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 如果在方法中的值发生了变化，缓存会自动刷新。</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>slot的使用</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aa&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lookmybook</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tt</span> <span class="attr">slot</span>=<span class="string">&quot;booktitle&quot;</span> <span class="attr">:title</span>=<span class="string">&#x27;ti&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span> <span class="attr">slot</span>=<span class="string">&quot;bookname&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;books in BookList&quot;</span> <span class="attr">:book</span>=<span class="string">&#x27;books&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">lookmybook</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;lookmybook&#x27;</span>, &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;booktitle&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                            <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;bookname&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">           `</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;tt&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&#x27;title&#x27;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: &#x27;<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">title</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>&#x27;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;list&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&#x27;book&#x27;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: &#x27;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">book</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&#x27;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#aa&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            ti: <span class="string">&#x27;大石头的游戏秘籍&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            BookList: [<span class="string">&#x27;推塔与补兵&#x27;</span>, <span class="string">&#x27;身法与压枪&#x27;</span>, <span class="string">&#x27;明代城乡规划&#x27;</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>自定义事件内容分发</p></blockquote><p>删除数组中的元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aa&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lookmybook</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tt</span> <span class="attr">slot</span>=<span class="string">&quot;booktitle&quot;</span> <span class="attr">:title</span>=<span class="string">&#x27;ti&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span> <span class="attr">slot</span>=<span class="string">&quot;bookname&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(books,index) in BookList&quot;</span> <span class="attr">:book</span>=<span class="string">&#x27;books&#x27;</span> <span class="attr">v-bind:index</span>=<span class="string">&#x27;index&#x27;</span> <span class="attr">v-on:remove</span>=<span class="string">&#x27;deleteIt(index)&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">lookmybook</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;lookmybook&#x27;</span>, &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;booktitle&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                            <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;bookname&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">           `</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;tt&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&#x27;title&#x27;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: &#x27;<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">title</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>&#x27;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;list&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&#x27;book&#x27;</span>, <span class="string">&#x27;index&#x27;</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: &#x27;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">index</span>&#125;&#125;</span><span class="xml">、</span><span class="template-variable">&#123;&#123;<span class="name">book</span>&#125;&#125;</span><span class="xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;remove&quot;</span>&gt;</span>爷不要了<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&#x27;,</span></span></span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            remove: <span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$emit(<span class="string">&quot;remove&quot;</span>, index); <span class="comment">// 自定义事件分发</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#aa&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            ti: <span class="string">&#x27;大石头的游戏秘籍&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            BookList: [<span class="string">&#x27;推塔与补兵&#x27;</span>, <span class="string">&#x27;身法与压枪&#x27;</span>, <span class="string">&#x27;明代城乡规划&#x27;</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="comment">// 注意！！！这个地方一定要使用驼峰命名法！！！</span></span></span><br><span class="line"><span class="javascript">            deleteIt: <span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;删除&#x27;</span> + <span class="built_in">this</span>.BookList[index] + <span class="string">&#x27;完事了。&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.BookList.splice(index, <span class="number">1</span>); <span class="comment">// splice是万能的，增删改都可以，pn是下标位置，1指的是从他开始往后1个</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>—————我是一条分割线——————</p><blockquote><p>Vue实例的作用范围</p></blockquote><p>Vue会管理el选项命中的元素及其内部的后代元素。</p><blockquote><p>选择器的使用</p></blockquote><p>Id、Class、标签名选择器都可以使用，但是建议使用ID选择器</p><blockquote><p>DOM元素设置</p></blockquote><p>可以使用其他的双标签，不能能使用HTML和BODY</p><blockquote><p>内容绑定，事件绑定</p></blockquote><ul><li>v-text</li><li>v-html</li><li>v-on基础</li></ul><blockquote><p>切换显示，属性绑定</p></blockquote><ul><li>v-show</li><li>v-if</li><li>v-bind</li></ul><blockquote><p>列表循环，表单元素绑定</p></blockquote><ul><li>v-for</li><li>v-on补充</li><li>v-model</li></ul><blockquote><p>v-text</p></blockquote><p>作用：设置标签的内容（textContent）<br>默认的写法会替换全部内容，使用差值表达式可以替换指定内容。<br>内部支持写表达式</p><blockquote><p>v-html</p></blockquote><p>作用：设置元素的innerHTML。<br>内容中又HTML结构会被解析为标签。<br>v-text指令无论内容是什么，只会解析为文本。<br>解析文本使用v-text，需要解析HTML结构使用v-html。</p><blockquote><p>v-on</p></blockquote><p>作用：为元素绑定事件。<br>事件名不需要写on，指令可以简写为@<br>绑定的方法定义在methods属性中<br>方法的内部通过this关键字可以访问定义在data中数据<br>补充：事件绑定的方法卸车哦那个函数调用的形式，可以传入自定义参数<br>定义方法时需要定义形参来接收传入的实参<br>事件的后边跟上.修饰符可以对事件进行限制</p><blockquote><p>v-show</p></blockquote><p>作用：根据真假切换元素的显示状态。<br>原理是修改元素的display，实现显示隐藏。<br>指令后边的内容最终都会解析为布尔值。<br>值为true元素显示，值为false元素隐藏。<br>数值改变之后，对应元素显示状态会同步刷新。</p><blockquote><p>v-if</p></blockquote><p>作用：根据表达式的真假切换元素的显示状态<br>本质是通过操纵dom元素来切换显示状态。<br>表达式的值为true，元素存在于dom树中。值为false时，从dom树中移除。<br>频繁的切换用v-show，反之使用v-if，前者切换消耗小。</p><blockquote><p>v-bind</p></blockquote><p>作用：为元素绑定属性<br>完整写法是v-bind:属性名<br>简写的话可以直接省略v-bind，只保留:属性名。<br>需要动态的增删class建议使用对象的方式（另一种为三目运算符）。</p><blockquote><p>v-for</p></blockquote><p>作用：根据数据生成列表结构<br>数组经常和v-for结合使用<br>语法是(item,index) in 数据<br>item和index可以结合其他指令一起使用<br>数组长度的更新会同步到页面上，是响应式的。</p><blockquote><p>v-model</p></blockquote><p>作用：便捷的设置和获取表单元素的值<br>绑定的数据会和表单元素值相关联<br>绑定的数据和表单元素的值是双向绑定的</p><blockquote><p>axios</p></blockquote><p>功能强大的网络请求库<br>axios.get(地址?ket=value&amp;key2=value2).then(function(response)){},function(err){})<br>axios.post(地址,{key:value,key2:value2}).then(function){},function(err){})</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js随笔记上篇</title>
      <link href="2021/04/23/js/"/>
      <url>2021/04/23/js/</url>
      
        <content type="html"><![CDATA[<p>此文档记录了js的最基础的用法</p><span id="more"></span><h1 id="上篇"><a href="#上篇" class="headerlink" title="上篇"></a>上篇</h1><h2 id="HTML引入js"><a href="#HTML引入js" class="headerlink" title="HTML引入js"></a>HTML引入js</h2><ul><li>js可以写在HTML的&lt;script&gt;标签内，任何位置都可以，但不建议放在最后。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    js语句</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>js也可以单独的写在一个.js文件内部。但是要在HTML中导入</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;路径&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><ul><li>严格区分大小写</li><li>定义一个变量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类名 变量名&#x3D;变量值</span><br></pre></td></tr></table></figure><h2 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h2><h3 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h3><p>也就是if语句，可以嵌套，else if也适用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;您未成年&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (age == <span class="number">18</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;您将将成年&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;确实成年了&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其用法与java一样</p><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>有while和do while两种</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//while循环</span></span><br><span class="line"><span class="keyword">while</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">    age = age + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//do while循环</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    age = age + <span class="number">1</span></span><br><span class="line">&#125; <span class="keyword">while</span> (age &lt; <span class="number">30</span>)</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>有for循环，foreach循环, for in循环还有for of循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//for循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//foreach循环</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">55</span>, <span class="number">68</span>, <span class="number">74</span>, <span class="number">546</span>, <span class="number">20</span>, <span class="number">15</span>, <span class="number">84</span>, <span class="number">32</span>, <span class="number">14</span>];</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span> <span class="title">aa</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;) <span class="comment">//这样可以遍历出数组的每个元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//for in循环</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">55</span>, <span class="number">68</span>, <span class="number">74</span>, <span class="number">546</span>, <span class="number">20</span>, <span class="number">15</span>, <span class="number">84</span>, <span class="number">32</span>, <span class="number">14</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> aa <span class="keyword">in</span> arr) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arr[aa]);</span><br><span class="line">&#125; <span class="comment">//这样也可以遍历数组的每个元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">of</span>和<span class="keyword">for</span> <span class="keyword">in</span>用法一样， 只不过<span class="keyword">for</span> <span class="keyword">in</span>返回结果为索引值， 而<span class="keyword">for</span> <span class="keyword">of</span>返回结果为元素。</span><br></pre></td></tr></table></figure><p><strong>在浏览器中</strong>.</p><ul><li>elements 元素，爬网站会用到</li><li>console 控制 调试js代码时会用到</li><li>sources 原码 打断点时会用</li><li>network 网络</li><li>application 应用 查cooike时会用。</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>数字，文本，图形，音频，视频……</p><h3 id="1-数值"><a href="#1-数值" class="headerlink" title="1. 数值"></a>1. 数值</h3><p>number js不区分小数和整数<br>其类型包括整数、浮点数、科学计数法、复数、NaN（not a number），Infinity（极大的数）。</p><h3 id="2-字符串"><a href="#2-字符串" class="headerlink" title="2. 字符串"></a>2. 字符串</h3><p>可以用单引号也可以用双引号包裹起来。<br>注意转义字符/</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;aaaa&#x27;</span></span><br><span class="line"><span class="comment">// 输出name为aaaa</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;aaaa&quot;</span></span><br><span class="line"><span class="comment">// 输出name为aaaa</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;aa/&#x27;aa&quot;</span></span><br><span class="line"><span class="comment">// 输出name为aa&#x27;aa</span></span><br></pre></td></tr></table></figure><p>js支持多行字符串编码，用反引号括起来。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">`1223</span></span><br><span class="line"><span class="string">            weqwe</span></span><br><span class="line"><span class="string">            ewww</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="comment">// 输出结果也是多行的。</span></span><br></pre></td></tr></table></figure><p>模板字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;bigstone&#x27;</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">20</span></span><br><span class="line"><span class="keyword">let</span> mas = <span class="string">&#x27;你好呀，$&#123;name&#125;&#x27;</span></span><br><span class="line"><span class="comment">/*输出mas结果为你好呀，bigstone*/</span></span><br></pre></td></tr></table></figure><p>其他的属性及方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str.lenth <span class="comment">//字符段长度</span></span><br><span class="line">    .toUpperCase() <span class="comment">//大写转小写</span></span><br><span class="line">    .toLowerCase() <span class="comment">//小写转大写</span></span><br><span class="line">    .indexof(<span class="string">&#x27;&#x27;</span>) <span class="comment">//索引，获取下标</span></span><br><span class="line">    .substring(x) <span class="comment">//从第x开始往后截取，含头不含尾</span></span><br></pre></td></tr></table></figure><h3 id="3-布尔值"><a href="#3-布尔值" class="headerlink" title="3. 布尔值"></a>3. 布尔值</h3><p>true和false</p><h3 id="4-逻辑运算符"><a href="#4-逻辑运算符" class="headerlink" title="4. 逻辑运算符"></a>4. 逻辑运算符</h3><ul><li>= 赋值</li><li>== 等于（类型不一样，值一样，也会true）</li><li>===绝对等于（值一样，类型也一样才会true）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">NaN</span> === <span class="literal">NaN</span></span><br><span class="line"><span class="comment">//值为false，NaN与所有数值都不相等，包括自己。</span></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="literal">NaN</span>)</span><br><span class="line"><span class="comment">//值为true，判断一个变量是否为NaN的一个方法。</span></span><br></pre></td></tr></table></figure><p><strong>浮点数问题</strong>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log((<span class="number">1</span> / <span class="number">3</span>) === (<span class="number">1</span> - <span class="number">3</span> / <span class="number">2</span>))</span><br><span class="line"><span class="comment">//结果为false，尽量避免浮点数运算，存在精度问题。</span></span><br><span class="line"><span class="built_in">Math</span>.abs(<span class="number">1</span> / <span class="number">3</span> - (<span class="number">1</span> - <span class="number">2</span> / <span class="number">3</span>)) &lt; <span class="number">0.00000001</span></span><br><span class="line"><span class="comment">//打印出来结果为true。</span></span><br></pre></td></tr></table></figure><h3 id="5-null与undefined"><a href="#5-null与undefined" class="headerlink" title="5.null与undefined"></a>5.null与undefined</h3><p>null为空<br>undefined为未定义</p><h3 id="6-数组"><a href="#6-数组" class="headerlink" title="6. 数组"></a>6. 数组</h3><p>在js中，数组是一系列类型可以不相同的对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//几种定义方法第一种用的较多</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;uy&#x27;</span>, <span class="literal">null</span>, <span class="literal">true</span>, <span class="literal">NaN</span>]</span><br><span class="line"><span class="keyword">new</span> Arrary()</span><br></pre></td></tr></table></figure><p>取数组下标时，如果越界了就会undefined</p><p>求数组的长度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.length</span><br><span class="line"><span class="comment">//给arr.length赋值，数组大小会改变，多出来的会显示empty。如果过小，会数据丢失。</span></span><br></pre></td></tr></table></figure><p>通过元素获得下标索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.indexof()</span><br><span class="line"><span class="comment">//数字1和字符串1是不同的。</span></span><br></pre></td></tr></table></figure><p>截取array的一部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.slice()</span><br><span class="line"><span class="comment">//结果返回一个新数组，原数组不变。参数含头不含尾，类似字符串的sbustring</span></span><br></pre></td></tr></table></figure><p>数组添加与删除元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.push() <span class="comment">//将一个元素压入到尾部</span></span><br><span class="line">arr.pop() <span class="comment">//弹出尾部的一个元素</span></span><br><span class="line">arr.unshift() <span class="comment">//压入到头部</span></span><br><span class="line">arr.shift() <span class="comment">//弹出头部的一个元素</span></span><br></pre></td></tr></table></figure><p>数组的排序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.sort()</span><br><span class="line"><span class="comment">//假如数组中元素类型不一样</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;uy&#x27;</span>, <span class="literal">null</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">NaN</span>, <span class="string">&#x27;sefd&#x27;</span>]</span><br><span class="line">arr.sort()[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="literal">NaN</span>, <span class="literal">false</span>, <span class="literal">null</span>, <span class="string">&quot;sefd&quot;</span>, <span class="literal">true</span>, <span class="string">&quot;uy&quot;</span>]</span><br></pre></td></tr></table></figure><p>元素反转</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.reverse() <span class="comment">//把数组从前往后变为从后往前</span></span><br></pre></td></tr></table></figure><p>数组拼接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.concat() <span class="comment">//返回一个新数组，原数组不变</span></span><br></pre></td></tr></table></figure><p>使用特定的字符拼接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.join()</span><br></pre></td></tr></table></figure><h3 id="7-对象"><a href="#7-对象" class="headerlink" title="7. 对象"></a>7. 对象</h3><p>就是若干个键值对。键值对描述属性，多个属性用逗号隔开，最后一个属性不加逗号。js中所有的键都是字符串，值都是任意对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 对象名 = &#123;</span><br><span class="line">    属性名: 属性值,</span><br><span class="line">    属性名: 属性值,</span><br><span class="line">    属性名: 属性值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对象赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">对象名.属性名 = 属性值</span><br><span class="line"><span class="comment">//使用不存在的对象属性不会报错，只会undefined。</span></span><br></pre></td></tr></table></figure><p>动态的删减属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> 对象名.属性名 <span class="comment">//结果返回true即为成功。</span></span><br></pre></td></tr></table></figure><p>动态的添加元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象名.新属性名 = 属性值</span><br></pre></td></tr></table></figure><p>判断属性是否在对象中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">属性 <span class="keyword">in</span> 对象 <span class="comment">//in可以继承父类的方法，及这个对象的父类有，此对象没有，也会true</span></span><br></pre></td></tr></table></figure><p>判断一个属性是否是这个对象自身拥有的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象名.hasOwnPorperty(<span class="string">&#x27;属性名&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="8-Map和Set"><a href="#8-Map和Set" class="headerlink" title="8. Map和Set"></a>8. Map和Set</h3><p>Map个人认为类似字典，拥有键值对。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个map</span></span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([</span><br><span class="line">    [<span class="string">&#x27;shiyi&#x27;</span>, <span class="number">11</span>],</span><br><span class="line">    [<span class="string">&#x27;shier&#x27;</span>, <span class="number">12</span>],</span><br><span class="line">    [<span class="string">&#x27;shisan&#x27;</span>, <span class="number">13</span>]</span><br><span class="line">]);</span><br><span class="line"><span class="comment">//通过键来获取值</span></span><br><span class="line">map.get(<span class="string">&#x27;shiyi&#x27;</span>); <span class="comment">//输出结果就是11。</span></span><br><span class="line"><span class="comment">//修改或者添加</span></span><br><span class="line">map.set(键， 值);</span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line">map.delete(键);</span><br></pre></td></tr></table></figure><p>Set是无序不重复的集合。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>]);</span><br><span class="line"><span class="comment">//输出结果为&#123;1, 2, 3&#125;</span></span><br><span class="line">set.add(<span class="number">2</span>) <span class="comment">//如果添加set中有的元素则会添加失败，但是不会报错。</span></span><br><span class="line">set.add(<span class="number">8</span>) <span class="comment">//添加set没有的才会添加成功</span></span><br><span class="line">set.delete(<span class="number">2</span>) <span class="comment">//输出结果为&#123;1, 3, 8&#125;</span></span><br><span class="line">set.has(); <span class="comment">//set是否包含某个元素</span></span><br></pre></td></tr></table></figure><p>遍历Set和Map使用for of语句。</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="1-定义一个函数"><a href="#1-定义一个函数" class="headerlink" title="1. 定义一个函数"></a>1. 定义一个函数</h3><p>定义方式1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">funcation <span class="function"><span class="title">abs</span>(<span class="params">x</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦执行到return代表桉树结束，返回结果。<br>如果没有执行return，函数执行完后也会返回结果，结果时undefined</p><p>定义方式2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="function"><span class="title">funcation</span>(<span class="params">x</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个匿名函数，这样可以把结果赋值给abs，通过abs就可以调用函数。<br>两种方式等价。</p><h3 id="2-调用函数"><a href="#2-调用函数" class="headerlink" title="2. 调用函数"></a>2. 调用函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abs(<span class="number">10</span>) <span class="comment">//10</span></span><br><span class="line">abs(-<span class="number">10</span>) <span class="comment">//10</span></span><br></pre></td></tr></table></figure><h3 id="3-传参问题"><a href="#3-传参问题" class="headerlink" title="3. 传参问题"></a>3. 传参问题</h3><p>js可以传任意个参数，也可以不传递参数。</p><p>参数传进来是否有问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="function"><span class="title">funcation</span>(<span class="params">x</span>)</span> &#123;</span><br><span class="line">    <span class="comment">//手动抛出异常来判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> x !== <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&#x27;Not a Number&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>arguments是一个js免费赠送的关键字。其意思为传递过来的所有参数是一个数组。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="function"><span class="title">funcation</span>(<span class="params">x</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>arguments包含所有的参数，我们有时想使用多余的参数来进行附加工作，需要排除已有参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rest <span class="comment">//获取除了已经定义之外的所有参数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asd</span>(<span class="params">a, b, ...rest</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="built_in">console</span>.log(d);</span><br><span class="line">    <span class="built_in">console</span>.log(rest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>rest参数只能写在最后面，必须用… 标识。</p><h3 id="4-变量作用域"><a href="#4-变量作用域" class="headerlink" title="4. 变量作用域"></a>4. 变量作用域</h3><p>在js中，var定义变量实际上是有作用域的。<br>假设在函数体中声明，则在函数体外不可使用（闭包）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    x = x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">x = x + <span class="number">2</span>; <span class="comment">//undefined报错</span></span><br></pre></td></tr></table></figure><p>如果两个函数使用了相同的变量名，只要在函数内部就不冲突。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    x = x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qw2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    x = x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部函数可以访问外部函数的成员，反之则不行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">qw2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> y = x + <span class="number">1</span>; <span class="comment">// 2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> z = y + <span class="number">1</span>; <span class="comment">// y is not defined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设，内部函数变量和外部函数的变量重名。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">qw2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;里&#x27;</span> + x);</span><br><span class="line">    &#125;</span><br><span class="line">    conole.log(<span class="string">&#x27;外&#x27;</span> + x)</span><br><span class="line">    qw2()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设js中函数查找变量从自身函数开始，由内向外查找。假设外部存在这个同名的函数变量，则内部函数会屏蔽外部函数的变量。</p><p><strong>提示变量的作用域</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&#x27;x&#x27;</span> + y;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">    <span class="keyword">var</span> y = <span class="string">&#x27;y&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果：xundefined</span></span><br></pre></td></tr></table></figure><p>说明js执行引擎，自动提升了y的声明，但是不会提升变量y的赋值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上边那一块代码等价于</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qw2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> y;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&#x27;x&#x27;</span> + y;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">    <span class="keyword">var</span> y = <span class="string">&#x27;y&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是js特性，养成习惯，所有的变量等一都放在函数的头部，不要乱放，以便于代码的维护。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a, b, c,</span><br><span class="line">    d = <span class="number">1</span>,</span><br><span class="line">    f = <span class="string">&#x27;dsa&#x27;</span></span><br></pre></td></tr></table></figure><p>全局函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>; <span class="comment">// 全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br><span class="line">f();</span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><p>全局对象window</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">alert(x);</span><br><span class="line">alert(<span class="built_in">window</span>.x); <span class="comment">// 默认的所有全局变量，都会自动绑定在window对象下。</span></span><br></pre></td></tr></table></figure><p>alert()这个函数本身也是一个window变量；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line"><span class="built_in">window</span>.alert(x);</span><br><span class="line"><span class="keyword">var</span> old_alert = <span class="built_in">window</span>.alert;</span><br><span class="line">old_alert(x); <span class="comment">// 可以输出abc。</span></span><br><span class="line"><span class="built_in">window</span>.alert = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"><span class="built_in">window</span>.alert(<span class="number">123</span>); <span class="comment">// 无法输出123，因为在上边重写了</span></span><br><span class="line"><span class="comment">// 恢复</span></span><br><span class="line"><span class="built_in">window</span>.alert = old_alert;</span><br><span class="line"><span class="built_in">window</span>.alert(<span class="number">789</span>); <span class="comment">// 就可以输出789了</span></span><br></pre></td></tr></table></figure><p>js实际上只有一个全局作用域，任何变量（函数也可以是为变量），假设没有在函数作用内找到，就会向外查找，如果在全局作用域里都没找到，报错refrencew error.</p><blockquote><p>规范</p></blockquote><p>由于所有的全局变量都会绑定到我们的window上。ru过不同的js文件使用了相投的全局变量，就会产生冲突。</p><blockquote><p>解决冲突</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//唯一全局变量</span></span><br><span class="line"><span class="keyword">var</span> Itsme = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义全局变量</span></span><br><span class="line">Itsme.name = <span class="string">&#x27;bigstone&#x27;</span>;</span><br><span class="line">Itsme.age = <span class="number">20</span>;</span><br><span class="line">Itsme.add = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把自己的代码全部放入到自己定义的唯一空间名字中，降低局部命名冲突的问题。</p><blockquote><p>局部作用域let</p></blockquote><p>问题引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">big</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">    comsole.log(i + <span class="number">1</span>); <span class="comment">// 走出这个for循环，i已久可以用，在这里会输出11</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用let关键字，可以解决局部冲突的问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">big</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">    comsole.log(i + <span class="number">1</span>); <span class="comment">// 这里的话就会抛出i未定义的错误。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建议用let定义局部作用域。</p><blockquote><p>常量const</p></blockquote><p>在es6之前，用大写字母定义常量，建议不要修改这样的值（没什么用）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> PI = <span class="string">&#x27;3.14&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(PI); <span class="comment">// 输出3.14</span></span><br><span class="line">PI = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(PI); <span class="comment">// 输出123，可见，是可以修改的</span></span><br></pre></td></tr></table></figure><p>es6之后引入了const关键字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI = <span class="string">&#x27;3.14&#x27;</span>; <span class="comment">// 只读变量</span></span><br><span class="line">PI = <span class="string">&#x27;123&#x27;</span>; <span class="comment">// 这里的话直接就会报错 </span></span><br></pre></td></tr></table></figure><h3 id="5-方法"><a href="#5-方法" class="headerlink" title="5. 方法"></a>5. 方法</h3><p>定义：就是把函数放入对象里边，对象只有两个东西，属性和方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bigstone = &#123;</span><br><span class="line">    name: <span class="string">&#x27;stone&#x27;</span>,</span><br><span class="line">    birth: <span class="number">2000</span>,</span><br><span class="line">    age: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">        <span class="keyword">return</span> now - <span class="built_in">this</span>.birth;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">bigstone.name <span class="comment">// 这是调用属性</span></span><br><span class="line">bigstone.age() <span class="comment">// 这是调用方法，要加()</span></span><br></pre></td></tr></table></figure><p>this室群无法指向的，是默认指向调用它的那个对象。</p><blockquote><p>apply</p></blockquote><p>在js中可以控制this指向</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gitAge</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">    <span class="keyword">return</span> now - <span class="built_in">this</span>.birth;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bigstone = &#123;</span><br><span class="line">    name: <span class="string">&#x27;stone&#x27;</span>,</span><br><span class="line">    birth: <span class="number">2000</span>,</span><br><span class="line">    age: gitAge</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">bigstone.age() <span class="comment">// 调用正常</span></span><br><span class="line"></span><br><span class="line">getAge.apply(bigstone, []); <span class="comment">// this指向了bogstone，无参。</span></span><br><span class="line"></span><br><span class="line">getAge(); <span class="comment">//输出NaN</span></span><br></pre></td></tr></table></figure><h2 id="内部对象"><a href="#内部对象" class="headerlink" title="内部对象"></a>内部对象</h2><blockquote><p>标准对象</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="number">123</span></span><br><span class="line">    <span class="string">&quot;number&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">&#x27;123&#x27;</span></span><br><span class="line"><span class="string">&#x27;string&#x27;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">true</span></span><br><span class="line">    <span class="string">&quot;boolean&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span></span><br><span class="line">    <span class="string">&quot;number&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> []</span><br><span class="line"><span class="string">&quot;object&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;&#125;</span><br><span class="line"><span class="string">&quot;object&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Math</span>.abs <span class="string">&quot;function&quot;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span></span><br><span class="line">    <span class="string">&quot;undefined&quot;</span></span><br></pre></td></tr></table></figure><h3 id="1-Date"><a href="#1-Date" class="headerlink" title="1. Date"></a>1. Date</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">//直接输出now的话是一个非常完整的时间</span></span><br><span class="line">now.getFullYear(); <span class="comment">// 年</span></span><br><span class="line">now.getMonth(); <span class="comment">// 月 0~11代表月</span></span><br><span class="line">now.getDate(); <span class="comment">// 日</span></span><br><span class="line">now.getDay(); <span class="comment">// 星期几</span></span><br><span class="line">now.getHours(); <span class="comment">// 时</span></span><br><span class="line">now.getMinutes(); <span class="comment">// 分</span></span><br><span class="line">now.getSeconds(); <span class="comment">// 秒</span></span><br><span class="line">now.getTime(); <span class="comment">// 时间戳，全世界统一，从1970.1.1 8:00:00开始的毫秒</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>(时间戳)) <span class="comment">//可以获得时间</span></span><br><span class="line"></span><br><span class="line">now.toLocaleString() <span class="comment">// 当地时间</span></span><br><span class="line"></span><br><span class="line">now.toGMtString() <span class="comment">// 时区</span></span><br></pre></td></tr></table></figure><h3 id="2-JSON"><a href="#2-JSON" class="headerlink" title="2. JSON"></a>2. JSON</h3><ul><li>json是一种轻量级的交换格式。</li><li>简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。</li><li>易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</li></ul><p>在js中，一切皆为对象，任何js支持的类型都可以用JSON来表示；<br>格式：</p><ul><li>对象都用{}</li><li>数组都用[]</li><li>键值对key:value</li></ul><p>Json字符串和js对象的转换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> me = &#123;</span><br><span class="line">    name: <span class="string">&#x27;bigstone&#x27;</span>,</span><br><span class="line">    age: <span class="number">20</span>,</span><br><span class="line">    sex: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象转化为字符串&quot;&#123;&quot;name&quot;:&quot;bigstone&quot;,&quot;age&quot;:20,&quot;sex&quot;:&quot;男&quot;&#125;&quot;</span></span><br><span class="line"><span class="keyword">var</span> jsonme = <span class="built_in">JSON</span>.stringify(me);</span><br><span class="line"></span><br><span class="line"><span class="comment">//json字符串转化为对象，参数是json字符串</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;bigstone&quot;,&quot;age&quot;:20,&quot;sex&quot;:&quot;男&quot;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="3-Ajax"><a href="#3-Ajax" class="headerlink" title="3. Ajax"></a>3. Ajax</h3><ul><li>原生的js写法，xhr的异步请求</li><li>jQuey封装好的方法 $(“#name”).ajax(“”)</li><li>axios 请求</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/21/hello-world/"/>
      <url>2021/04/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
